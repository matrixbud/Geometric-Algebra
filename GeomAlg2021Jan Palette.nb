(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    116696,       1930]
NotebookOptionsPosition[    115456,       1896]
NotebookOutlinePosition[    116118,       1917]
CellTagsIndexPosition[    116075,       1914]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["Palette Creation Notes",
  FontSize->18,
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "\n \n1. Use MapThread instead of /@ because:\n\tIn 1st palette grid,  the \
special symbols (e.g., \[Star]) require RawBoxes (see #3, below). If use \
Tooltip and \n\tRawBoxes after /@ then the word Tooltip is printed when a \
palette item is selected.\n\n 2. PasteButton [ label, expr ] uses 2 \
arguments. Use Style with # to format the label (1st term), and use RawBoxes \
with # to apply to the expr (2nd term). \n\n 3. Purpose of RawBoxes is to \
allow any item to be put in palette  free-form. Normally PasteButton (and \
Paste) require an expression. But, to insert dot and wedge symbols (which are \
not expressions) into palette, RawBoxes is needed. Note these symbols must be \
placed in quotes, but they perform their intended operations nonetheless.\n \n\
Moreover, in the MapThread approach, when ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "i"], TraditionalForm]],ExpressionUUID->
  "3d9051ee-1f2b-4c1e-bbda-a30b7248fc8d"],
 " is selected, it prints as a subscript box unless RawBoxes \nare used.c\n\n \
4. Insert TextCell just after CreatePalette in order to insert a narrow row \
so first text is not jammed against the top of the palette.\n\n 5. Used \
Spacings->{0,1.5} to give 1.5 vertical spacing between palette triangles \
(i.e., OpenerViews) so they, too, are not jammed against each other.\n\n 5b. \
Use Partition  to generate number of boxes per row.\n \n 6. WindowSize \
affects horizontal, vertical dimensions of Palette window. I have used a \
fixed width of 340  to fit the displayed info. I used \
\[OpenCurlyDoubleQuote]All\[CloseCurlyDoubleQuote] for the vertical length. \
This magically resizes the vertical length as triangles are opened and \
closed!\n\n 7. ItemSize with Automatic performs row wrapping at palette \
width. Automatic also sizes the grid cells to just fit. This allows creation \
of narrow palette windows. \
\[OpenCurlyDoubleQuote]Full\[CloseCurlyDoubleQuote] adjusts text sizes to \
make items fit in cell boxes.\n\n 8. OpenView generates the triangles that \
are selected to either show or hide sub-palettes.\n\n 9. One use of Dynamic \
is to automatically close other triangles when a new one is opened. Don\
\[CloseCurlyQuote]t want this. Also, wrapping Dynamic Module around \
OpenerView makes variables local. This is not good for the Initialize grid \
because ",
 StyleBox["need signatureType and numTimelike to be global",
  FontColor->RGBColor[1, 0, 1]],
 ". \n \nDynamic Module ",
 StyleBox["is",
  FontSlant->"Italic"],
 " good and is used in other grids because it can specify initial open-closed \
state of triangles (either after Mathematica is opened or kernel is quit), \
but will not remember last state either in a single session if palette is put \
away and then reopened or if kernel is quit.  With global variables it works \
just the opposite: open-closed state is remembered when putting away and \
reopening palette but not when kernel is quit. \n\nPutting \
Dynamic[CurrentValue[EvaluationNotebook[],{TaggingRules,\
\[CloseCurlyDoubleQuote]op6\[CloseCurlyDoubleQuote]}]] as the last item in \
each OpenerView (using op1 - op6 standing for opener1 - opener6), and then \
setting the tag values using TaggingRules\[Rule]{\[OpenCurlyDoubleQuote]op1\
\[CloseCurlyDoubleQuote]\[Rule]True,\[CloseCurlyDoubleQuote]op2\
\[CloseCurlyDoubleQuote]\[Rule]True,\[CloseCurlyDoubleQuote]op3\
\[CloseCurlyDoubleQuote]\[Rule]False,\[CloseCurlyDoubleQuote]op4\
\[CloseCurlyDoubleQuote]\[Rule]False,\[CloseCurlyDoubleQuote]op5\
\[CloseCurlyDoubleQuote]\[Rule]False,\[CloseCurlyDoubleQuote]op6\
\[CloseCurlyDoubleQuote]\[Rule]False} as one of the last items closing out \
CreatePalette allows the palette to remember open-close states when the \
kernel is quit (or Mathematica is closed).\n\nStoringAndTrackingPaletteStates \
in Help gives more details as does Dynamic (in Help). \n\n10. I originally \
inserted vertical scrollbars (last item) and then removed them as not needed. \
But I did install the combination magnification/horizontal scrollbars in \
WindowElements at bottom. When user selects magnification, need scrollbars to \
view info off screen if any. Scrollbars appears when needed when use \
Windowsize -> Automatic at very bottom. A problematic side effect of this is \
that the long equations expand sideways until they take up but a single line, \
causing very, very wide palette. To force equations and text to wrap-around, \
we set PasteButton ImageSize = 140 for those sections. However, magnification \
under these circumstances DOES widen the palette and that is desired. Could \
have set PasteButton ImageSize = Full. That would have allowed all long \
equations to display nicely on one line and all boxes would have had exactly \
the same size, but the palette window would have been extremely wide.\n\n11. \
Use Grid twice. Outer grid is the grid of sub palettes (and the empty text \
cell (see #4). Inner grids are for each subpatterns. Actually, I wanted to \
use a 3rd nested grid. See #13.\n\n12. The 2nd argument of Style is the text \
size.\n\n12b. Omitting Alignment in the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "i"], TraditionalForm]],ExpressionUUID->
  "f8b94d3d-1a35-43ab-9286-fa21dca628c7"],
 "\[CloseCurlyQuote]s and operators section defaults to centering the items \
in their boxes\n\n13. Need for a 3rd nested Grid. Some grid boxes do not \
match the size of adjacent boxes.To fix this, I wanted to override the \
(2nd/inner) Grid properties to apply to just a single cell containing, for \
example, \[OpenCurlyDoubleQuote]aaa\[CloseCurlyDoubleQuote]. This is done \
with the \[OpenCurlyDoubleQuote]Item\[CloseCurlyDoubleQuote] command. \
However, \[OpenCurlyDoubleQuote]Item\[CloseCurlyDoubleQuote] only works at \
the top level of a Grid, so needed to create a 1x1 grid within the inner grid \
cell. That is, replace aaa with\n\tGrid [ { { Item [ aaa ] , ItemSize -> { \
Automatic , 4.0 } , Alignment -> Center ] } } ]\nItem is now at the top level \
of a grid command, and so ItemSize increases the cell height to fit, and \
Alignment centers it vertically. Item also accepts arguments for background, \
and an additional frame (within cell, and can format frame with color, etc.). \
This made the grid look much, much better, all boxes matching each other. But \
... when a cell is selected, the words \[OpenCurlyDoubleQuote]Grid\
\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]Item\
\[CloseCurlyDoubleQuote] appear along with the text that was intended. Not \
good.\n\nNote. I never succeeded with the \[OpenCurlyDoubleQuote]scaled\
\[CloseCurlyDoubleQuote] property such as \
ItemSize\[Rule]{{Scaled[0.33],Scaled[0.67]}} . I think \
\[OpenCurlyDoubleQuote]scaled\[CloseCurlyDoubleQuote] is probably very useful \
but the docs are impossible to follow in the help menu.\n\n14. Purpose of \
Alignment->Left at very bottom is to align OpenView triangles at left. Does \
not affect the grid boxes.\n\n15. ImageSize at the bottom as a palette \
property sets width of the palette.\n\n16. To place Palette near upper right \
corner of screen, use WindowMargins { { left, right }, { bottom, top } }. Set \
left and bottom to automatic; right to 130  and top to 0. To place Palette at \
top but have it remember left-right location when put away and reopen \
palette, use 0 for top and automatic for the rest.\n\n17. \[ControlKey] is \
merely a symbol that can be copied and pasted.\n \n18. To make an individual \
opener remember its open-closed triangle settings after palette is closed, \
use Dynamic[x] instead of \[OpenCurlyDoubleQuote]True\[CloseCurlyDoubleQuote] \
or \[OpenCurlyDoubleQuote]False\[CloseCurlyDoubleQuote] inside of last brace \
} of OpenerView statement. Use a different variable x unless wish openers to \
open and close together. If wish to see words True and False in the palette \
(I don\[CloseCurlyQuote]t), then enter Dynamic[x] a 2nd time (as in Help \
dialog example for OpenerView), just inside the last opener bracket ]. "
}], "Text",
 CellChangeTimes->{{3.6881710590421057`*^9, 3.6881710612080383`*^9}, {
   3.688171133531836*^9, 3.6881720462919683`*^9}, {3.688172086430971*^9, 
   3.6881721500733356`*^9}, {3.688172355722857*^9, 3.688172360214123*^9}, {
   3.688172468305458*^9, 3.688172477273266*^9}, {3.688173044818047*^9, 
   3.688173046635241*^9}, {3.6881730982790956`*^9, 3.688173120740172*^9}, {
   3.688173161892384*^9, 3.6881732048593807`*^9}, {3.688173328827496*^9, 
   3.688173362115261*^9}, {3.688173509018463*^9, 3.688173534027565*^9}, {
   3.688334079798287*^9, 3.688334642679143*^9}, {3.688334685538247*^9, 
   3.6883346969990797`*^9}, {3.6883347715941687`*^9, 
   3.6883347865757933`*^9}, {3.6883358597043953`*^9, 3.6883358729125853`*^9}, 
   3.688335914014756*^9, {3.688387921044467*^9, 3.688388097714059*^9}, {
   3.688390568827283*^9, 3.6883906266361856`*^9}, {3.688390704261561*^9, 
   3.688390718249741*^9}, {3.6883907743917103`*^9, 3.688390842834704*^9}, {
   3.688407156667062*^9, 3.6884071725254583`*^9}, {3.688407893996872*^9, 
   3.6884079496367807`*^9}, {3.6884277674512377`*^9, 3.688427786104104*^9}, {
   3.688427854292932*^9, 3.688427924130368*^9}, {3.688428000202691*^9, 
   3.688428068101301*^9}, {3.688428099571871*^9, 3.68842814227125*^9}, {
   3.688477867891111*^9, 3.688477874345416*^9}, {3.6885007275451612`*^9, 
   3.68850086654788*^9}, {3.6885009047879343`*^9, 3.688500916674906*^9}, {
   3.6885009957015667`*^9, 3.688501119010145*^9}, {3.688501150432622*^9, 
   3.6885012931851788`*^9}, {3.6885911792028313`*^9, 3.688591301692575*^9}, {
   3.688639446233357*^9, 3.688639465501342*^9}, 3.688639533152301*^9, {
   3.688639582563377*^9, 3.6886395915255613`*^9}, {3.6886396304981213`*^9, 
   3.688639671710701*^9}, {3.688639722912681*^9, 3.688639734953896*^9}, 
   3.688639871827753*^9, {3.688639905545388*^9, 3.6886401480063047`*^9}, {
   3.688640183378296*^9, 3.688640196250008*^9}, {3.688640254422923*^9, 
   3.688640301071044*^9}, {3.6886408159631987`*^9, 3.688640845431798*^9}, {
   3.688640898907874*^9, 3.688641040928542*^9}, {3.688641077958098*^9, 
   3.688641155057222*^9}, {3.688641189816413*^9, 3.688641379615603*^9}, {
   3.688641444817843*^9, 3.688641541275631*^9}, {3.6886415759241133`*^9, 
   3.688641655500703*^9}, {3.6886418759485407`*^9, 3.688642031199504*^9}, {
   3.688642086640888*^9, 3.688642168191375*^9}, {3.6886422111905403`*^9, 
   3.6886422233183947`*^9}, {3.688642273548661*^9, 3.688642313434433*^9}, 
   3.6890321814843807`*^9, {3.689098275559346*^9, 3.689098354559432*^9}, {
   3.689101289198883*^9, 3.6891016080519447`*^9}, {3.6909949399499207`*^9, 
   3.690995000422271*^9}, {3.690995095760099*^9, 3.690995272887738*^9}, 
   3.690995354982829*^9, {3.690995409441691*^9, 3.6909955056059237`*^9}, {
   3.6909957544631147`*^9, 3.69099597242272*^9}, {3.6909960888392963`*^9, 
   3.6909961649637814`*^9}, {3.690996261703991*^9, 3.690996285610918*^9}, {
   3.69100582657364*^9, 3.6910059111583557`*^9}, {3.691005951983951*^9, 
   3.691006062226654*^9}, 3.6910159376025343`*^9, 3.691015980321821*^9, {
   3.691016576296419*^9, 3.6910165853965693`*^9}, {3.6910166710325613`*^9, 
   3.691016827906488*^9}, {3.691016860539192*^9, 3.69101687346616*^9}, {
   3.691156820521884*^9, 3.691156830438921*^9}, {3.691156873585009*^9, 
   3.691156883058098*^9}, {3.691156913301937*^9, 3.691156924005443*^9}, 
   3.6911569580753517`*^9, {3.6911570150448923`*^9, 3.691157018699585*^9}, {
   3.691163394180044*^9, 3.691163397858882*^9}, {3.6911694590720663`*^9, 
   3.6911694662442417`*^9}, {3.691169535601388*^9, 3.691169539022435*^9}, {
   3.713480508610989*^9, 3.713480532583653*^9}, {3.775423380792933*^9, 
   3.775423386021002*^9}, {3.77559672352139*^9, 3.775596724914591*^9}, {
   3.775651247888043*^9, 3.775651316988593*^9}, {3.7756514657191677`*^9, 
   3.775651533835217*^9}, {3.775651579984418*^9, 3.775651784350485*^9}, {
   3.7760162816172323`*^9, 3.776016283022601*^9}, 3.776108118940318*^9, {
   3.776108461607402*^9, 3.776108462832945*^9}, {3.778365218875226*^9, 
   3.778365222743126*^9}, 
   3.779741981851467*^9},ExpressionUUID->"969d602e-3133-4ac8-b153-\
3e8836467719"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"If", " ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "signatureType", "]"}], "\[Equal]", "Symbol"}], 
      ",", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"If", " ", "true"}], ",", " ", 
        RowBox[{
        "then", " ", "Global`", " ", "signatureType", " ", "has", " ", "not", 
         " ", "yet", " ", "been", " ", "set"}]}], " ", "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"Global`signatureType", "=", "1"}], ";", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{"Initialize", " ", "GA", " ", "Settings"}], " ", "*)"}], "\n",
        "\t", 
       RowBox[{"Global`numTimelike", "=", "0"}]}]}], "\t", "\n", "]"}], ";"}],
    " ", "\n", "\n", 
   RowBox[{"CreatePalette", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TextCell", "[", "\"\<\>\"", "]"}], ",", "\n", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "\n", "\n", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"OpenerView", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<Initialize Geometric Algebra\>\"", ",", "Bold", ",", 
                  "14"}], "]"}], ",", "\n", 
                RowBox[{"Grid", "[", 
                 RowBox[{
                  RowBox[{"{", "\n", "\n", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Signature Type  ( e.g., \
\!\(\*SubsuperscriptBox[\(e\), \(1\), \(2\)]\) = +1, \!\(\*SubsuperscriptBox[\
\(e\), \(k\), \(2\)]\) = -1 for k > 1)\>\"", ",", "Blue", ",", "12"}], "]"}], 
                    "}"}], ",", "\n", 
                    RowBox[{"{", 
                    RowBox[{"RadioButtonBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "signatureType", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "1", "\[Rule]", "\"\<Mathematicians: - + + +\>\""}], ",", 
                    
                    RowBox[{
                    RowBox[{"-", "1"}], "\[Rule]", 
                    "\"\<Physicists: + - - -\>\""}]}], "}"}]}], "]"}], "}"}], 
                    ",", "\n", "\n", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<# of time dimensions: 0 = Space, 1 = Spacetime, etc.\
\>\"", ",", "Blue", ",", "12"}], "]"}], "}"}], ",", "\n", 
                    RowBox[{"{", 
                    RowBox[{"Panel", "[", 
                    RowBox[{
                    RowBox[{"Slider", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "numTimelike", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "10", ",", "1"}], "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], "}"}], 
                    ",", "\n", "\n", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Notebook 'Needs' Statement\>\"", ",", "Purple", ",", 
                    "12"}], "]"}], "}"}], ",", "\n", 
                    RowBox[{"{", 
                    RowBox[{"PasteButton", "[", 
                    RowBox[{
                    RowBox[{"Defer", "[", 
                    RowBox[{"Needs", "[", "\"\<GeomAlg2021Jan`\>\"", "]"}], 
                    "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "}"}]}],
                    "\n", "\n", "}"}], ",", 
                  RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "}"}], 
              ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"TaggingRules", ",", "\"\<op1\>\""}], "}"}]}], 
                "]"}], "]"}]}], "]"}], "}"}], ",", "\n", "\n", "\n", 
           RowBox[{"{", 
            RowBox[{"OpenerView", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<Typing Aids: Subscripts & Operators\>\"", ",", "Bold", 
                  ",", "14"}], "]"}], ",", "\n", "\t ", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"chrs", "=", 
                    RowBox[{"{", "\n", "\t ", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(e\), \(1\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(e\), \(2\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(e\), \(3\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(e\), \(4\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(e\), \(\[Placeholder]\)]\)\>\"",
                     ",", "\"\<\[Diamond]\>\"", ",", "\"\<\[Wedge]\>\"", ",", 
                    "\"\<\[CenterDot]\>\"", ",", "\"\<\[Star]\>\"", ",", 
                    "\"\<\[LeftTee]\>\"", ",", "\"\<\[RightTee]\>\"", ",", 
                    "\n", "\t ", 
                    "\"\<\!\(\*SubscriptBox[\(a\), \(\[Placeholder]\)]\)\>\"",
                     ",", "\"\<\!\(\*SubscriptBox[\(b\), \
\(\[Placeholder]\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(c\), \(\[Placeholder]\)]\)\>\"",
                     ",", "\"\<\!\(\*SubscriptBox[\(d\), \
\(\[Placeholder]\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(r\), \(\[Placeholder]\)]\)\>\"",
                     ",", "\"\<\!\(\*SubscriptBox[\(s\), \
\(\[Placeholder]\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(t\), \(\[Placeholder]\)]\)\>\"",
                     ",", "\"\<\!\(\*SubscriptBox[\(x\), \
\(\[Placeholder]\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(y\), \(\[Placeholder]\)]\)\>\"",
                     ",", "\"\<\!\(\*SubscriptBox[\(z\), \
\(\[Placeholder]\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(\[SelectionPlaceholder]\), \(\
\[Placeholder]\)]\)\>\""}], "  ", "\n", "\t ", "}"}]}], ",", "\n", 
                    "\t\t     ", 
                    RowBox[{"tips", "=", "\n", "\t ", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\>\"", ",", "\"\<\>\"", ",", " ", "\"\<\>\"", ",", 
                    "\"\<\>\"", ",", "\"\<\>\"", ",", "\n", "\t   ", 
                    "\"\<   Geometric Product,  Keyboard: Esc dia Esc  \
(Diamond)\>\"", ",", "\n", "\t   ", 
                    "\"\<   Wedge (or Exterior) Product,  Keyboard: Esc ^ Esc \
 (Wedge)\>\"", ",", "\n", "\t   ", 
                    "\"\<   Dot (or Interior) Product,  Keyboard: Esc . Esc  \
(CenterDot)\>\"", ",", "\n", "\t   ", 
                    "\"\<   Scalar (or Grade 0) Product,  Keyboard: Esc star \
Esc  (Star)\>\"", ",", "\n", "\t   ", 
                    "\"\<   Left Contraction, Keyboard: Esc lT Esc  (LeftTee)\
\>\"", ",", "\n", "\t   ", 
                    "\"\<   Right Contraction, Keyboard: Esc  rT  Esc  \
(RightTee)\>\"", ",", "\n", "\t   ", "\"\<\>\"", ",", "\"\<\>\"", ",", 
                    "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", 
                    "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", 
                    "\"\<\>\"", ",", "\"\<\>\"", ",", "\"\<\>\""}], "}"}]}]}],
                    "\n", "\t  ", "}"}], ",", "\n", "\t", 
                  RowBox[{"Grid", "[", 
                   RowBox[{
                    RowBox[{"Partition", "[", "\n", "\t\t", 
                    RowBox[{
                    RowBox[{"MapThread", "[", "\n", "\t\t", 
                    RowBox[{"Tooltip", ",", "\n", "\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"PasteButton", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "12"}], "]"}], ",", 
                    RowBox[{"RawBoxes", "[", "#1", "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "24"}]}], "]"}], "&"}], "/@",
                     "\n", "\t\t\t", "chrs"}], ",", "tips"}], "}"}]}], "]"}], 
                    ",", "11"}], "]"}], ",", "\n", "\t\t", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"TaggingRules", ",", "\"\<op2\>\""}], "}"}]}], 
                "]"}], "]"}]}], "]"}], "}"}], ",", "\n", "\n", "\n", 
           RowBox[{"(*", 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 1]], 
            RowBox[{
             StyleBox[
              RowBox[{"Don", "'"}],
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox["t",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox[" ",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox["clean",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox[" ",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox["up",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox[" ",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox["spacing",
              FontColor->RGBColor[1, 0, 1]], 
             StyleBox[" ",
              FontColor->RGBColor[1, 0, 1]], 
             RowBox[{
              StyleBox["below",
               FontColor->RGBColor[1, 0, 1]], ".", " ", "This"}], " ", 
             "makes", " ", "LHS", " ", "boxes", " ", "match", " ", "size", 
             " ", "of", " ", "RHS"}], "  ", "*)"}], "\n", 
           RowBox[{"{", 
            RowBox[{"OpenerView", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<Typing Aids: Multivector Generators\>\"", ",", "Bold", 
                  ",", "14"}], "]"}], ",", "\n", "\t ", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"chrs", "=", 
                    RowBox[{"{", "\n", "\t\t\t", 
                    RowBox[{
                    "\"\<AtomG[1,2,4]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<\!\(\*StyleBox[SubscriptBox[\"e\", \
\"1\"],FontWeight->\"Plain\"]\)\!\(\*StyleBox[SubscriptBox[\"e\", \
\"2\"],FontWeight->\"Plain\"]\)\!\(\*StyleBox[SubscriptBox[\"e\", \
\"4\"],FontWeight->\"Plain\"]\)\>\"", ",", "\n", "\t\t\t", 
                    "\"\<VectorG[x,3]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<\!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(x\), \(1\)]\) + \!\(\*SubscriptBox[\(e\), \(2\)]\
\)\!\(\*SubscriptBox[\(x\), \(2\)]\) + \!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\
\*SubscriptBox[\(x\), \(3\)]\)\>\"", ",", "\n", "\t\t\t", 
                    "\"\<BiVectorG[3]                                         \
                               \>\"", ",", " ", "\n", "\t\t\t", 
                    "\"\<(-\!\(\*SubscriptBox[\(a\), \
\(2\)]\)\!\(\*SubscriptBox[\(b\), \(1\)]\) + \!\(\*SubscriptBox[\(a\), \(1\)]\
\)\!\(\*SubscriptBox[\(b\), \(2\)]\)) \!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\) + (-\!\(\*SubscriptBox[\(a\), \
\(3\)]\)\!\(\*SubscriptBox[\(b\), \(1\)]\) + \!\(\*SubscriptBox[\(a\), \(1\)]\
\)\!\(\*SubscriptBox[\(b\), \(3\)]\)) \!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\) + (-\!\(\*SubscriptBox[\(a\), \
\(3\)]\)\!\(\*SubscriptBox[\(b\), \(2\)]\) + \!\(\*SubscriptBox[\(a\), \(2\)]\
\)\!\(\*SubscriptBox[\(b\), \(3\)]\))\!\(\*SubscriptBox[\(e\), \
\(2\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\>\"", ",", "\n", "\t\t\t", 
                    "\"\<BiVectorG[3]                          \>\"", ",", 
                    "\n", "\t\t\t", 
                    "\"\<\!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(c\), \(1, 2\)]\
\) + \!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\
\*SubscriptBox[\(c\), \(\(1\)\(,\)\(3\)\(\\\ \\\ \\\ \)\)]\)+ \
\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \
\(3\)]\)\!\(\*SubscriptBox[\(c\), \(2, 3\)]\)\>\"", ",", 
                    "\"\<BladeG[2,3]                                          \
                                        \>\"", ",", 
                    "\"\<(-\!\(\*SubscriptBox[\(a\), \
\(2\)]\)\!\(\*SubscriptBox[\(b\), \(1\)]\)+ \!\(\*SubscriptBox[\(a\), \
\(1\)]\)\!\(\*SubscriptBox[\(b\), \(2\)]\)\!\(\*SubscriptBox[\()\), \(\\\ \)]\
\)\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[SubscriptBox[\(e\), \
\(2\)], \(\\\ \)]\)+ (-\!\(\*SubscriptBox[\(a\), \
\(3\)]\)\!\(\*SubscriptBox[\(b\), \(1\)]\)+\!\(\*SubscriptBox[\(a\), \(1\)]\)\
\!\(\*SubscriptBox[\(b\), \(3\)]\)\!\(\*SubscriptBox[\()\), \(\\\ \
\)]\)\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\) + \
(-\!\(\*SubscriptBox[\(a\), \(3\)]\)\!\(\*SubscriptBox[\(b\), \(2\)]\) + \!\(\
\*SubscriptBox[\(a\), \(2\)]\)\!\(\*SubscriptBox[\(b\), \(3\)]\)) \
\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\>\"", 
                    ",", "\t\t", "\n", "\t\t\t", 
                    "\"\<GradedClifG[a,2,4]                                   \
                                         \>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(a\), \(1, 2\)]\
\) + \!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\
\*SubscriptBox[\(a\), \(1, 3\)]\) + \!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\)\!\(\*SubscriptBox[\(a\), \(1, 4\)]\
\) + \!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\
\*SubscriptBox[\(a\), \(2, 3\)]\) + \!\(\*SubscriptBox[\(e\), \
\(2\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\)\!\(\*SubscriptBox[\(a\), \(2, 4\)]\
\) + \!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\)\!\(\
\*SubscriptBox[\(a\), \(3, 4\)]\)\>\"", ",", "\n", "\t\t\t", 
                    "\"\<ClifG[b,3]                                           \
                                                      \>\"", ",", 
                    
                    "\"\<\!\(\*SubscriptBox[\(b\), \(0\)]\) + \
\!\(\*SubscriptBox[\(b\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \(1\)]\) + \
\!\(\*SubscriptBox[\(b\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\) + \
\!\(\*SubscriptBox[\(b\), \(3\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\) + \
\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \
\(2\)]\)\!\(\*SubscriptBox[\(b\), \(1, 2\)]\) + \!\(\*SubscriptBox[\(e\), \(1\
\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\*SubscriptBox[\(b\), \(1, 3\)]\) \
+ \!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \
\(3\)]\)\!\(\*SubscriptBox[\(b\), \(2, 3\)]\) + \!\(\*SubscriptBox[\(e\), \(1\
\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\
\*SubscriptBox[\(b\), \(1, 2, 3\)]\)\>\"", ",", "\n", "\t\t    ", 
                    "\"\<EvenClifG[c,3]                  \>\"", ",", "\n", 
                    "\t\t    ", 
                    "\"\<\!\(\*SubscriptBox[\(c\), \(0\)]\) + \
\!\(\*SubscriptBox[\(e\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \
\(2\)]\)\!\(\*SubscriptBox[\(c\), \(1, 2\)]\) + \!\(\*SubscriptBox[\(e\), \(1\
\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\*SubscriptBox[\(c\), \(1, 3\)]\) \
+ \!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \
\(3\)]\)\!\(\*SubscriptBox[\(c\), \(2, 3\)]\)\>\"", ",", "\n", "\t\t\t", 
                    "\"\<PseudoScalarG[5]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<\!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \
\(3\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\)\!\(\*SubscriptBox[\(e\), \
\(5\)]\)\>\"", ",", "\t\t", "\n", "\t\t\t", 
                    "\"\<RotorG[2, 4, \!\(\*FractionBox[\(\[Pi]\), \
\(4\)]\)]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<Cos[\!\(\*FractionBox[\(\[Pi]\), \(4\)]\)] + \
Sin[\!\(\*FractionBox[\(\[Pi]\), \(4\)]\)] \!\(\*SubscriptBox[\(e\), \(2\)]\)\
\!\(\*SubscriptBox[\(e\), \(4\)]\)\>\"", ",", "\n", "\t\t\t", 
                    "\"\<RotorG[a,b,c,d]                     \>\"", ",", "\n",
                     "\t\t\t", 
                    "\"\<\!\(\*FractionBox[\(a + \*SubscriptBox[\(be\), \
\(2\)] \*SubscriptBox[\(e\), \(3\)] - \*SubscriptBox[\(ce\), \(1\)] \
\*SubscriptBox[\(e\), \(3\)] + \*SubscriptBox[\(de\), \(1\)] \
\*SubscriptBox[\(e\), \(2\)]\), \(\*SuperscriptBox[\(a\), \(2\)] + \
\*SuperscriptBox[\(b\), \(2\)] + \*SuperscriptBox[\(c\), \(2\)] + \
\*SuperscriptBox[\(d\), \(2\)]\)]\)\>\"", " ", ",", "\n", "\t\t\t", 
                    "\"\<RotorG[a,2]                         \>\"", ",", "\n",
                     "\t\t\t", 
                    "\"\<\!\(\*FractionBox[\(\*SubscriptBox[\(a\), \(0\)] + \
\*SubscriptBox[\(e\), \(1\)]\\\ \*SubscriptBox[\(e\), \(2\)]\\\ \
\*SubscriptBox[\(a\), \(1, 2\)]\), SqrtBox[\(\*SubsuperscriptBox[\(a\), \
\(0\), \(2\)] + \*SubsuperscriptBox[\(a\), \(1, 2\), \(2\)]\)]]\)\>\"", ",", 
                    "\n", "\t\t\t", "\"\<ComplexG[a,b]\>\"", ",", "\n", 
                    "\t\t\t", 
                    RowBox[{
                    RowBox[{"i", "=", 
                    RowBox[{
                    SubscriptBox["e", "1"], 
                    SubscriptBox["e", "2"]}]}], ";", "\"\<a + b i\>\""}], ",",
                     "\n", "\t\t\t", "\"\<QuaternionG[a,b,c,d]\>\"", ",", 
                    "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{"k", "=", 
                    RowBox[{
                    SubscriptBox["e", "1"], 
                    SubscriptBox["e", "2"]}]}], ";", 
                    RowBox[{"i", "=", 
                    RowBox[{
                    SubscriptBox["e", "2"], 
                    SubscriptBox["e", "3"]}]}], ";", 
                    RowBox[{"j", "=", 
                    RowBox[{
                    RowBox[{"-", 
                    SubscriptBox["e", "1"]}], 
                    SubscriptBox["e", "3"]}]}], ";", 
                    "\"\<a + b i + c j + d k\>\""}]}], "\n", "\t\t", "}"}]}], 
                    ",", "\n", "\n", "\t\t     ", 
                    RowBox[{"tips", "=", "\n", "\n", "\t ", 
                    RowBox[{"{", " ", 
                    RowBox[{
                    "\"\<  Generate a 3-'atom' with subscripts 1,2,and 4\>\"",
                     ",", "\n", "\t   ", "\"\<   Key in the AtomG output\>\"",
                     ",", "\n", "\t   ", 
                    "\"\<   Generate a standard vector in 3 dimensions with \
\!\(\*SubscriptBox[\(x\), \(i\)]\) coefficients\>\"", ",", "\n", "\t   ", 
                    "\"\<   Key in the nVector output}\>\"", ",", "\n", 
                    "\t   ", 
                    "\"\<   Generate a product bivector in 3 dimensions from \
two vectors\>\"", ",", "\n", "\t   ", 
                    "\"\<   Key in the BiVectorG output\>\"", ",", "\n", 
                    "\t   ", 
                    "\"\<   Generate a general bivector in 3 dimensions\>\"", 
                    ",", "\n", "\t   ", 
                    "\"\<   Key in the BiVectorG output\>\"", ",", "\n", 
                    "\t   ", 
                    RowBox[{
                    "\"\<   Generate a general 2-blade (i.e., bivector) in \>\
\"", "\n", "\t     ", "<>", 
                    "\"\<3 dimensions asgeometric product of two \
vectors\>\""}], ",", "\n", "\t   ", "\"\<   Key in the BladeG output\>\"", 
                    ",", "\n", "\t   ", 
                    RowBox[{
                    "\"\<   Generate a general grade-2 multivector in 4 \
dimensions \>\"", "<>", 
                    "\"\<with coefficients \!\(\*SubscriptBox[\(a\), \(i, \
j\)]\)\>\""}], ",", "\n", "\t   ", "\"\<   Key in the GradedClif output\>\"", 
                    ",", "\n", "\t   ", 
                    RowBox[{
                    "\"\<   Generate a general multivector (a.k.a.\>\"", 
                    "<>", "\"\< clif) in 3 dimensions with coefficients \
\!\(\*SubscriptBox[\(b\), \(i, j,  ... \)]\)\>\""}], ",", "\n", "\t   ", 
                    "\"\<   Key in the ClifG output\>\"", ",", "\n", "\t   ", 
                    
                    RowBox[{
                    "\"\<   Generate an even multivector in 3 dimensions with \
coefficients\>\"", "\n", "\t     ", "<>", 
                    "\"\< \!\(\*SubscriptBox[\(c\), \(i, j,  ... \)]\) \
OddClifG is also available.\>\""}], ",", "\n", "\t   ", 
                    "\"\<   Key in the EvenClifG output\>\"", ",", "\n", 
                    "\t   ", 
                    "\"\<   Generate the dimension 5 pseudocalar\>\"", ",", 
                    "\n", "\t   ", 
                    "\"\<   Key in the pseudoscalar output\>\"", ",", "\n", 
                    "\t   ", 
                    RowBox[{
                    "\"\<   Generate rotor to spin \!\(\*SubscriptBox[\(e\), \
\(2\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\)-plane CCW 90\[Degree]. If plane is \
\>\"", "\n", "\t     ", "<>", 
                    "\"\<timelike, generates a boost. \!\(\*FractionBox[\(\
\[Pi]\), \(4\)]\) is the rotor angle. \!\(\*FractionBox[\(\[Pi]\), \(2\)]\) \
is the rotation angle.\>\""}], ",", "\n", "\t   ", 
                    "\"\<   Key in the spacelike RotorG output\>\"", ",", 
                    "\n", "\t   ", 
                    "\"\<   Generate a general 3-space rotor or a 1-2 \
spacetime boost\>\"", ",", "\n", "\t   ", 
                    "\"\<   Key in the 3-space rotor output\>\"", ",", "\n", 
                    "\t   ", 
                    RowBox[{
                    "\"\<   Generate a general 2-dimensional rotor or boost\>\
\"", "\n", "\t     ", "<>", 
                    "\"\< This function can generate a general rotor or boost \
in n dimensions\>\""}], ",", "\n", "\t   ", 
                    "\"\<   Key in the 2-space rotor output. A 3-space rotor \
would mimic the output above.\>\"", ",", "\n", "\t   ", 
                    "\"\<   Generate a complex number a + bi where \
\!\(\*SubscriptBox[SubscriptBox[\(e\), \(1\)], \(`\)]\)\!\(\*SubscriptBox[\(e\
\), \(2\)]\) = i\>\"", ",", "\n", "\t   ", 
                    "\"\<   Key in the complex number\>\"", ",", "\n", 
                    "\t   ", 
                    RowBox[{
                    "\"\<   Generate a quaternion a + bi + cj + dk where i = \
\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\), \>\"", 
                    "<>", "\"\<j = -\!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\), k = \!\(\*SubscriptBox[\(e\), \(1\
\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\>\""}], ",", "\n", "\t   ", 
                    "\"\<   Key in the quaternion\>\""}], "\n", "\t", 
                    "}"}]}]}], "}"}], ",", "\n", "\t", 
                  RowBox[{"Grid", "[", 
                   RowBox[{
                    RowBox[{"Partition", "[", "\n", "\t\t", 
                    RowBox[{
                    RowBox[{"MapThread", "[", "\n", "\t\t", 
                    RowBox[{"Tooltip", ",", "\n", "\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"PasteButton", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "12"}], "]"}], ",", 
                    RowBox[{"RawBoxes", "[", "#", "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "140"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Left", ",", "Top"}], "}"}]}]}], "]"}], "&"}], "/@",
                     "\n", "\t\t\t", "chrs"}], ",", "tips"}], "}"}]}], "]"}], 
                    ",", "2"}], "]"}], ",", "\n", "\t\t", "\n", 
                    RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"TaggingRules", ",", "\"\<op3\>\""}], "}"}]}], 
                "]"}], "]"}]}], "]"}], "}"}], ",", "\n", "\n", "\n", "\n", 
           RowBox[{"{", 
            RowBox[{"OpenerView", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<Primary GA Operations\>\"", ",", "Bold", ",", "14"}], 
                 "]"}], ",", "\n", "\t ", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"chrs", "=", 
                    RowBox[{"{", "\n", "\t\t\t", 
                    RowBox[{
                    "\"\<GeomPrdtG[clif1,clif2]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<WedgePrdtG[clif1, clif2]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<DotPrdtG[clif1, clif2]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<ScalarPrdtG[clif1, clif2]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<LeftContractionG[clif1,clif2]\>\"", ",", "\n", 
                    "\t\t\t", "\"\<RightContractionG[clif1,clif2]\>\"", ",", 
                    "\n", "\t\t\t", "\"\<HodgeDualG[clif, n]\>\"", ",", "\n", 
                    "\t\t\t", "\"\<HodgeDual2G[clif, n]\>\"", ",", "\n", 
                    "\t\t\t", "\"\<GormG[clif]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<NormG[clif]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<ReverseG[clif]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<InverseG[clif]\>\""}], "}"}]}], ",", "\n", "\t\t", 
                    "\n", "\t\t     ", 
                    RowBox[{"tips", "=", "\n", "\t ", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<   Geometric Product (a.k.a. Clifford Product) of 2 \
multivectors\>\"", ",", "\n", "\t  ", 
                    "\"\<   Wedge (or Exterior) Product of 2 multivectors: \
<clif1 \[Diamond] clif2\!\(\*SubscriptBox[\(>\), \(p + q\)]\)\>\"", ",", "\n",
                     "\t  ", 
                    "\"\<   Dot (or Inner) Product of 2 multivectors: <clif1 \
\[Diamond] clif2\!\(\*SubscriptBox[\(>\), \(abs < p - q > \)]\)\>\"", ",", 
                    "\n", "\t  ", 
                    "\"\<   Scalar (or Grade Zero) Product of 2 multivectors: \
<clif1 \[Diamond] clif2>\!\(\*SubscriptBox[\(\\\ \), \(0\)]\)\>\"", ",", "\n",
                     "\t  ", 
                    "\"\<   Left Contraction of 2 multivectors. Similar to \
Dot Product: <clif1 \[Diamond] clif2\!\(\*SubscriptBox[\(>\), \(q\\\  - \\\ p\
\)]\)\>\"", ",", "\n", "\t  ", 
                    "\"\<   Right Contraction of 2 multivectors. Similar to \
Dot Product: <clif1 \[Diamond] clif2\!\(\*SubscriptBox[\(>\), \(p\\\  - \\\ q\
\)]\)\>\"", ",", "\n", "\t  ", 
                    RowBox[{
                    "\"\<   *A = A \[Diamond] i where i is the pseudoscalar. \
Three other Hodge Duals\>\"", "\n", "\t    ", "<>", 
                    "\"\< with different formulas are available for use. See \
next item in palette.\>\""}], ",", "\n", "\t  ", 
                    RowBox[{
                    "\"\<   Alternative definiition:  *A = A \[Diamond] \
\!\(\*SuperscriptBox[\(i\), \(-1\)]\) where i is the pseduoscalar.\>\"", "\n",
                     "\t    ", "<>", 
                    "\"\< HodgeDual3G = i \[Diamond] A  and  HodgeDual4G = \!\
\(\*SuperscriptBox[\(i\), \(-1\)]\) \[Diamond] A are also available.\>\""}], 
                    ",", "\n", "\t  ", 
                    "\"\<   gorm = Reverse[clif] \[Star] clif\>\"", ",", "\n",
                     "      ", "\"\<   Square root of the Gorm\>\"", ",", 
                    "\n", "      ", 
                    "\"\<   Reverse of a multivector. For example, \
\!\(\*SubscriptBox[\(e\), \(1\)]\) \!\(\*SubscriptBox[\(e\), \(2\)]\) \
\!\(\*SubscriptBox[\(e\), \(3\)]\) -> \!\(\*SubscriptBox[\(e\), \(3\)]\) \!\(\
\*SubscriptBox[\(e\), \(2\)]\) \!\(\*SubscriptBox[\(e\), \(1\)]\)\>\"", ",", 
                    "\n", "      ", 
                    RowBox[{
                    "\"\<   Inverse of a multivector. Returns 0 if it doesn't \
exist.\>\"", "\n", "        ", "<>", 
                    "\"\< Uses functions Inverse4G, 5G, and NG that are \
separately available.\>\""}]}], "}"}]}]}], "}"}], ",", "\n", "\n", "\t", 
                  RowBox[{"Grid", "[", 
                   RowBox[{
                    RowBox[{"Partition", "[", "\n", "\t\t", 
                    RowBox[{
                    RowBox[{"MapThread", "[", "\n", "\t\t", 
                    RowBox[{"Tooltip", ",", "\n", "\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"PasteButton", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "12"}], "]"}], ",", 
                    RowBox[{"RawBoxes", "[", "#", "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "140"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Left", ",", "Top"}], "}"}]}]}], "]"}], "&"}], "/@",
                     "\n", "\t\t\t", "chrs"}], ",", "tips"}], "}"}]}], "]"}], 
                    ",", "2"}], "]"}], ",", "\n", "\t\t", "\n", 
                    RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"TaggingRules", ",", "\"\<op4\>\""}], "}"}]}], 
                "]"}], "]"}]}], "]"}], "}"}], ",", "\n", "\n", "\n", 
           RowBox[{"{", 
            RowBox[{"OpenerView", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<Multivector Support\>\"", ",", "Bold", ",", "14"}], 
                 "]"}], ",", "\n", "\t ", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"chrs", "=", 
                    RowBox[{"{", "\n", "\t\t", 
                    RowBox[{
                    "\"\<ExpandG[clif]\>\"", ",", "\n", "\t\t", 
                    "\"\<CollectG[clif]\>\"", ",", "\n", "\t\t", 
                    "\"\<ReduceG[clif]\>\"", ",", "\n", "\t\t", 
                    "\"\<ClearSubscriptG[a]\>\"", ",", "\n", "\t\t", 
                    "\"\<SimplifyG[object]\>\"", ",", "\n", "\t\t", 
                    "\"\<FullSimplifyG[clif]\>\"", ",", "\n", "\t\t", 
                    "\"\<PrintG[object]\>\"", ",", "\n", "\t\t", 
                    "\"\<NG[clif]\>\"", ",", "\n", "\t\t", 
                    "\"\<RotorToMatrixG[rotor]\>\"", ",", "\n", "\t\t", 
                    "\"\<VectorToClifG[vec]\>\"", ",", "\n", "\t\t", 
                    "\"\<MaxGradeG[clif]\>\"", ",", "\n", "\t\t", 
                    "\"\<MaxDimG[clif]\>\"", ",", "\n", "\t\t", 
                    "\"\<GradeInvoluteG[clif]\>\"", ",", "\n", "\t\t", 
                    "\"\<ClifConjugateG[clif]\>\"", ",", "\n", "\t\t", 
                    "\"\<ConstantG[clif]\>\"", ",", "\n", "\t\t", 
                    "\"\<FreeTermG[clif]\>\"", ",", "\n", "\t\t", 
                    "\"\<pSliceG[clif, p]\>\"", ",", "\n", "\t\t", 
                    "\"\<AtomCoefG[clif,atom]\>\""}], "\[IndentingNewLine]", 
                    "}"}]}], ",", "\n", "\n", "\t\t     ", 
                    RowBox[{"tips", "=", "\n", "\t", 
                    StyleBox[
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<   Reduce any square powers of \
\!\(\*SubscriptBox[\(e\), \(i\)]\)'s and then Expand multivector. \>\"", ",", 
                    "\n", "\t ", 
                    "\"\<   Reduce any square powers of \
\!\(\*SubscriptBox[\(e\), \(i\)]\)'s and then Collect terms by blades\>\"", 
                    ",", "\n", "\t ", 
                    "\"\<   Reduce any square \!\(\*SubscriptBox[\(e\), \
\(i\)]\) terms in clif according to initialization scheme\>\"", ",", "\n", 
                    "\t ", 
                    RowBox[{
                    "\"\<   Clears values of all subcripted symbols, like \
\!\(\*SubscriptBox[\(a\), \(i, j\)]\), having base a. Caution: does\>\"", 
                    "\n", "\t   ", "<>", 
                    "\"\< not clear the base 'a' itself\>\""}], ",", "\n", 
                    "\t ", 
                    RowBox[{
                    "\"\<   Apply Simplify to any clif, term-by-term. For a \
vector, matrix, or tensor it returns \>\"", "\n", "\t   ", "<>", 
                    "\"\<a list containing the GCD and the reduced \
vector/matrix/tensor\>\""}], ",", "\n", "\t ", 
                    "\"\<   Apply FullSimplify to any clif, term-by-term\>\"",
                     ",", "\n", "\t ", 
                    RowBox[{
                    "\"\<   Alternative Print function to make printouts of \
clifs and matrix objects \>\"", "\n", "\t   ", "<>", 
                    "\"\<(vectors, matrices, tensors) more readable. Has a \
limit of 4 clifs or 1 matrix\>\""}], ",", "\n", "\t ", 
                    RowBox[{
                    "\"\<   Multivector-aware version of Mathematica's N \
function to numerically approximate. \>\"", "\n", "\t   ", "<>", 
                    "\"\<Like N[x,n], you can enter NG[Clif,n] to speicify n \
digits of precision \>\""}], ",", "\n", "\t ", 
                    RowBox[{
                    "\"\<   Convert any rotor, spacelike or timelike of any \
dimension, to an equivalent \>\"", "\n", "\t   ", "<>", 
                    "\"\<rotation matrix\>\""}], ",", "\n", "\t ", 
                    "\"\<   Convert a Mathematica vector (in list form) to a \
Clifford vector\>\"", ",", "\n", "\t ", 
                    "\"\<   Find the maximum grade among the terms of the \
multivector \>\"", ",", "\[IndentingNewLine]", "\t", 
                    "\"\<   Find the maximum dimension of terms in the \
multivector\>\"", ",", "\n", "\t ", 
                    "\"\<   Reverse sign of any terms having odd grade\>\"", 
                    ",", "\n", "\t ", 
                    "\"\<   Reverse sign of any terms having grades 1 or 2, 5 \
or 6, 9 or 10, ...\>\"", ",", "\n", "\t ", 
                    "\"\<   Generate the constant (i.e., grade 0) term(s) of \
the mulitvector\>\"", ",", "\n", "\t ", 
                    "\"\<   Generate the non-constant term(s) of the \
mulitvector\>\"", ",", "\n", "\t ", 
                    "\"\<   Generate the grade-p terms of the \
multivector\>\"", ",", "\n", "\t ", 
                    RowBox[{
                    "\"\<   Generate a multivector comprised of the sum of \
all the coefficients of a given\>\"", "\n", "\t ", "<>", 
                    "\"\< atom such as \!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\
\*SubscriptBox[\(e\), \(3\)]\). It is the 0 multivector if there are no such \
terms.\>\""}]}], "\[IndentingNewLine]", "}"}], "Code"]}]}], 
                   StyleBox["}", "Code"]}], 
                  StyleBox[",", "Code"], "\n", "\n", "\t", 
                  RowBox[{"Grid", "[", 
                   RowBox[{
                    RowBox[{"Partition", "[", "\n", "\t\t", 
                    RowBox[{
                    RowBox[{"MapThread", "[", "\n", "\t\t", 
                    RowBox[{"Tooltip", ",", "\n", "\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"PasteButton", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "12"}], "]"}], ",", 
                    RowBox[{"RawBoxes", "[", "#", "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "140"}]}], "]"}], "&"}], "/@",
                     "\n", "\t\t\t", "chrs"}], ",", "tips"}], "}"}]}], "]"}], 
                    ",", "2"}], "]"}], ",", "\n", "\t\t", "\n", 
                    RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"TaggingRules", ",", "\"\<op5\>\""}], "}"}]}], 
                "]"}], "]"}]}], "]"}], "}"}], ",", "\n", "\n", "\n", "\n", 
           RowBox[{"{", 
            RowBox[{"OpenerView", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<List Operations and Support\>\"", ",", "Bold", ",", 
                  "14"}], "]"}], ",", "\n", "\t ", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"chrs", "=", 
                    RowBox[{"{", "\n", "\t\t\t", 
                    RowBox[{
                    "\"\<ClifToListG[clif]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<ListToClifG[clifList]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<CoefListG[clif]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<AtomListG[clif]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<SubscriptListG[clif]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<EijListG[clif]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<EiEjToEijG[list]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<EijToEiEjG[list]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<EijSortG[list]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<RemoveCoefG[object]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<GradeListG[clif]\>\"", ",", "\n", "\t\t\t", 
                    "\"\<SignatureG[list]\>\""}], "\n", "\t\t\t", "}"}]}], 
                    ",", "\n", "\t\t", "\n", "\t\t     ", 
                    RowBox[{"tips", "=", "\n", "\t ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "\"\<   Convert multivector to an ordered list of its \
terms. Each atom is listed \>\"", "\n", "\t    ", "<>", 
                    "\"\<just once and \
\!\(\*StyleBox[\"multiple\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"coefficients\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"if\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"any\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\",\
\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, \
0, 1]]\)\!\(\*StyleBox[\"are\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\
\" \",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"combined\",FontColor->RGBColor[1, 0, 1]]\)\>\""}], ",", 
                    "\n", "\t   ", 
                    "\"\<   Convert a clif list back to a matching \
multivector\>\"", ",", "\n", "\t   ", 
                    RowBox[{
                    "\"\<   Generate a list of coefficients matching the \
order of ClifToListG. \>\"", "\n", "\t     ", "<>", 
                    "\"\<\!\(\*StyleBox[\"Multiple\",FontColor->RGBColor[1, \
0, 1]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"coefficients\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"of\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"same\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"atom\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"if\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"any\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\",\
\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, \
0, 1]]\)\!\(\*StyleBox[\"are\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\
\" \",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"combined\",FontColor->RGBColor[1, 0, 1]]\)\>\""}], ",", 
                    "\n", "\t   ", 
                    RowBox[{
                    "\"\<   Generate a list of atoms matching the order of \
ClifToListG. \>\"", "\n", "\t    ", "<>", 
                    "\"\<\!\(\*StyleBox[\"Constant\",FontColor->RGBColor[1, \
0, 1]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"if\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"any\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\",\
\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, \
0, 1]]\)\!\(\*StyleBox[\"is\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"listed\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\
\" \",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"as\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\"1\",FontColor->RGBColor[1, \
0, 1]]\)\>\""}], ",", "\n", "\t   ", 
                    RowBox[{
                    "\"\<   Generate a list of subscripts matching the order \
of \>\"", "\n", "\t    ", "<>", 
                    "\"\<ClifToListG. Each subscript, like {1,2,3}, is listed \
just once. \>\"", "\n", "\t    ", "<>", 
                    "\"\<\!\(\*StyleBox[\"Constant\",FontColor->RGBColor[1, \
0, 1]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"if\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"any\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\",\
\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, \
0, 1]]\)\!\(\*StyleBox[\"is\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"listed\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\
\" \",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"as\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\"0\",FontColor->RGBColor[1, \
0, 1]]\)\>\""}], ",", "\n", "\t   ", 
                    RowBox[{
                    "\"\<   Generate a list of \!\(\*SubscriptBox[\(e\), \(i, \
j, k,  ... \)]\) matching the order of ClifToListG. \>\"", "\n", "\t    ", 
                    "<>", "\"\<\!\(\*StyleBox[\"Constant\",FontColor->\
RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"if\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"any\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\",\
\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, \
0, 1]]\)\!\(\*StyleBox[\"is\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"listed\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\
\" \",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"as\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[1, 0, 1]]\)\!\(\*StyleBox[\"1\",FontColor->RGBColor[1, \
0, 1]]\)\>\""}], ",", "\n", "\t   ", 
                    "\"\<   Convert atoms \!\(\*SubscriptBox[\(e\), \
\(i\)]\)\!\(\*SubscriptBox[\(e\), \(j\)]\)\!\(\*SubscriptBox[\(e\), \
\(k\)]\)... in a list to \!\(\*SubscriptBox[\(e\), \(i, j, k,  ... \)]\)\>\"",
                     ",", "\n", "\t   ", 
                    "\"\<   Convert \!\(\*SubscriptBox[\(e\), \(i, j, k,  .. \
\)]\)'s in a list to \!\(\*SubscriptBox[\(e\), \(i\)]\)\!\(\*SubscriptBox[\(e\
\), \(j\)]\)\!\(\*SubscriptBox[\(e\), \(k\)]\)'s\>\"", ",", "\n", "\t   ", 
                    RowBox[{
                    "\"\<   Sort clif Eij list so that constants appear 1st, \
then singletons \!\(\*SubscriptBox[\(e\), \(i\)]\), \>\"", "\n", "\t    ", 
                    "<>", "\"\<pairs \!\(\*SubscriptBox[\(e\), \(i, j\)]\), \
triples \!\(\*SubscriptBox[\(e\), \(i, j, k\)]\), etc.\>\""}], ",", "\n", 
                    "\t   ", 
                    "\"\<   Remove coefficients from any clif or list, \
whether of type EiEj or Eij\>\"", ",", "\n", "\t   ", 
                    "\"\<   Generate a list of grades matching the order of \
ClifToListG\>\"", ",", "\n", "\t   ", 
                    RowBox[{
                    "\"\<   Find signature (\[PlusMinus]1) of a list of \
numbers, letters, words, \!\(\*SubscriptBox[\(e\), \(i, j, k\)]\) or \>\"", 
                    " ", "\n", "\t    ", "<>", 
                    "\"\<any set of items that Mathematica knows how to sort. \
\>\"", "\n", "\t    ", "<>", 
                    "\"\<\!\(\*StyleBox[\"Allows\",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[1, 0, \
1]]\)\!\(\*StyleBox[\"duplicates\",FontColor->RGBColor[1, 0, 1]]\)\>\""}]}], 
                    "\n", "\t  ", "}"}]}]}], "}"}], ",", "\n", "\n", "\t", 
                  RowBox[{"Grid", "[", 
                   RowBox[{
                    RowBox[{"Partition", "[", "\n", "\t\t", 
                    RowBox[{
                    RowBox[{"MapThread", "[", "\n", "\t\t", 
                    RowBox[{"Tooltip", ",", "\n", "\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"PasteButton", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "12"}], "]"}], ",", 
                    RowBox[{"RawBoxes", "[", "#", "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "140"}]}], "]"}], "&"}], "/@",
                     "\n", "\t\t\t", "chrs"}], ",", "tips"}], "}"}]}], "]"}], 
                    ",", "2"}], "]"}], ",", "\n", "\t\t", "\n", 
                    RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"TaggingRules", ",", "\"\<op6\>\""}], "}"}]}], 
                "]"}], "]"}]}], "]"}], "}"}]}], "\n", "\n", "\n", "}"}], ",", 
         "\n", "\n", 
         RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
         RowBox[{"Spacings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.5"}], "}"}]}]}], "]"}]}], "}"}], ",", "\n", 
     RowBox[{"TaggingRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<op1\>\"", "\[Rule]", "True"}], ",", 
        RowBox[{"\"\<op2\>\"", "\[Rule]", "True"}], ",", 
        RowBox[{"\"\<op3\>\"", "\[Rule]", "False"}], ",", 
        RowBox[{"\"\<op4\>\"", "\[Rule]", "False"}], ",", 
        RowBox[{"\"\<op5\>\"", "\[Rule]", "False"}], ",", 
        RowBox[{"\"\<op6\>\"", "\[Rule]", "False"}]}], "}"}]}], ",", "\n", 
     "\n", 
     RowBox[{"WindowTitle", "->", "\"\<Geometric Algebra Palette\>\""}], ",", 
     "\n", 
     RowBox[{"WindowMargins", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "0"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"WindowSize", "\[Rule]", "All"}], ",", 
     RowBox[{"WindowElements", "\n", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<HorizontalScrollBar\>\"", ",", "\"\<VerticalScrollBar\>\"", ",", 
        "\"\<MagnificationPopUp\>\""}], "}"}]}]}], "]"}], "\n", 
   "\n"}]}]], "Code",
 CellChangeTimes->{
  3.688172665623805*^9, {3.6882311450668907`*^9, 3.688231148373808*^9}, {
   3.6883340671435957`*^9, 3.688334070335827*^9}, {3.688336123454598*^9, 
   3.6883361671819553`*^9}, {3.68833623330122*^9, 3.688336300844495*^9}, {
   3.688336638580247*^9, 3.688336749100586*^9}, {3.68833680010288*^9, 
   3.688336849485867*^9}, {3.688336894066238*^9, 3.688337046124299*^9}, {
   3.688337104014297*^9, 3.688337148864387*^9}, {3.688337182450185*^9, 
   3.688337251782052*^9}, {3.688337426066318*^9, 3.688337513711461*^9}, {
   3.688337610961802*^9, 3.688337903802116*^9}, {3.688337969189858*^9, 
   3.688337979636986*^9}, {3.688338018917221*^9, 3.688338070762926*^9}, {
   3.6883383107830267`*^9, 3.6883384448694468`*^9}, {3.688338496594359*^9, 
   3.688338547151328*^9}, {3.688338582419703*^9, 3.688338639060836*^9}, {
   3.6883386694337378`*^9, 3.688338738146275*^9}, 3.6883387734178963`*^9, {
   3.688338871055715*^9, 3.688338872306199*^9}, 3.6883389760388527`*^9, {
   3.688339006612624*^9, 3.688339040291148*^9}, {3.6883391011712217`*^9, 
   3.688339138724763*^9}, {3.6883393102855062`*^9, 3.6883393663793297`*^9}, {
   3.688339558952877*^9, 3.688339571282712*^9}, {3.6883396344593973`*^9, 
   3.688339634744186*^9}, {3.688339747738227*^9, 3.688339754544001*^9}, {
   3.6883400468819838`*^9, 3.6883400574789343`*^9}, {3.68834012738035*^9, 
   3.688340131423478*^9}, {3.688340205372464*^9, 3.688340214260503*^9}, {
   3.688340408844637*^9, 3.6883404175356627`*^9}, {3.6883404508841677`*^9, 
   3.688340456577746*^9}, {3.6883404893716583`*^9, 3.6883405504452963`*^9}, {
   3.68834078057926*^9, 3.6883408092505617`*^9}, {3.6883408543570538`*^9, 
   3.688340933888411*^9}, {3.688340971401965*^9, 3.688341012906706*^9}, {
   3.688341209520809*^9, 3.6883413209908857`*^9}, {3.6883413558613567`*^9, 
   3.688341365662097*^9}, {3.688341396349244*^9, 3.6883414126815453`*^9}, {
   3.6883414468754177`*^9, 3.688341469148218*^9}, 3.688341544525806*^9, {
   3.688341617782899*^9, 3.688341678219015*^9}, {3.688341759103221*^9, 
   3.6883417759906063`*^9}, {3.688341810642055*^9, 3.6883418296186323`*^9}, {
   3.688341869289579*^9, 3.688341941070586*^9}, {3.688342114764349*^9, 
   3.688342174522624*^9}, {3.688342227805187*^9, 3.688342303999322*^9}, {
   3.6883423770947313`*^9, 3.688342406798154*^9}, {3.688342485324071*^9, 
   3.68834250143522*^9}, {3.688342672707962*^9, 3.688342675700122*^9}, {
   3.688343096774239*^9, 3.688343106767295*^9}, {3.688343267464877*^9, 
   3.688343289803953*^9}, {3.688343356090809*^9, 3.688343356847919*^9}, {
   3.688387832610691*^9, 3.6883878433097754`*^9}, {3.688388247076379*^9, 
   3.688388264976019*^9}, {3.688388319981776*^9, 3.6883883453980494`*^9}, {
   3.688388479569418*^9, 3.688388619224338*^9}, {3.688389916684041*^9, 
   3.6883899387498817`*^9}, 3.68838999673654*^9, {3.6883901185532618`*^9, 
   3.6883901283640833`*^9}, 3.688390163320648*^9, {3.688390232390645*^9, 
   3.6883902364573793`*^9}, {3.6883903861609592`*^9, 3.688390397253598*^9}, {
   3.688394636140112*^9, 3.688394666141119*^9}, {3.688394925725009*^9, 
   3.6883949661771584`*^9}, {3.688395006862657*^9, 3.688395007516945*^9}, {
   3.6883950518614893`*^9, 3.688395052412321*^9}, {3.6883950878046827`*^9, 
   3.688395088789659*^9}, {3.6883951202395153`*^9, 3.6883952087394857`*^9}, {
   3.688395243669612*^9, 3.68839524440281*^9}, {3.688395280312234*^9, 
   3.6883952881480093`*^9}, {3.688398251437093*^9, 3.68839825169167*^9}, {
   3.688398379960267*^9, 3.688398422836437*^9}, {3.688398458707697*^9, 
   3.688398500981966*^9}, {3.688399251925475*^9, 3.6883992708012*^9}, {
   3.688399313597087*^9, 3.688399408178381*^9}, {3.688399449563829*^9, 
   3.688399479356818*^9}, {3.6883996463919477`*^9, 3.688399685607835*^9}, {
   3.688399865787229*^9, 3.6883999256048107`*^9}, {3.688399970112055*^9, 
   3.688400000604905*^9}, {3.688400245794229*^9, 3.688400264350461*^9}, {
   3.688403710791554*^9, 3.688403726470146*^9}, {3.688424768172741*^9, 
   3.688424770127343*^9}, {3.688425960093527*^9, 3.68842601388726*^9}, {
   3.688426089620343*^9, 3.688426128972538*^9}, {3.688426174815915*^9, 
   3.688426208093347*^9}, {3.688426358082868*^9, 3.688426366717738*^9}, 
   3.688426430918391*^9, {3.688426522719151*^9, 3.688426567572626*^9}, {
   3.688426613980852*^9, 3.6884266360632257`*^9}, {3.688426678140449*^9, 
   3.688426726016856*^9}, {3.688426757557151*^9, 3.6884267836560583`*^9}, {
   3.6884268524040613`*^9, 3.688426869889865*^9}, {3.688427215882883*^9, 
   3.688427227257708*^9}, {3.688428308854631*^9, 3.688428385544169*^9}, 
   3.688428709177763*^9, {3.688428766295107*^9, 3.6884287920823183`*^9}, {
   3.68842883552209*^9, 3.6884288508087587`*^9}, {3.688428964503071*^9, 
   3.688428970598736*^9}, 3.688430801398*^9, {3.688430839551837*^9, 
   3.6884308495343943`*^9}, {3.688431170823372*^9, 3.688431180189931*^9}, {
   3.6884312117655582`*^9, 3.6884312388363237`*^9}, {3.688431386298196*^9, 
   3.688431425261348*^9}, {3.6884314675891457`*^9, 3.6884315042846203`*^9}, {
   3.6884315628732233`*^9, 3.688431601967123*^9}, {3.688431657600297*^9, 
   3.6884316742291803`*^9}, {3.688431706610795*^9, 3.688431727373695*^9}, {
   3.6884770162004967`*^9, 3.688477077341824*^9}, 3.688477328683864*^9, {
   3.688477372545022*^9, 3.6884774047798223`*^9}, {3.688477472470739*^9, 
   3.688477523671534*^9}, 3.688477651074191*^9, {3.688477956901223*^9, 
   3.688477962509481*^9}, {3.68847800523209*^9, 3.688478009719316*^9}, 
   3.688478042219337*^9, {3.688478079234187*^9, 3.688478083607313*^9}, {
   3.688482982859384*^9, 3.688483005615*^9}, {3.6884830404580936`*^9, 
   3.688483065853841*^9}, {3.6884832050287123`*^9, 3.6884832123351593`*^9}, {
   3.688483280889126*^9, 3.688483318733678*^9}, {3.688483474907523*^9, 
   3.688483510614766*^9}, 3.688483562317359*^9, {3.688483592884816*^9, 
   3.688483687398332*^9}, {3.688483730420886*^9, 3.688483764568182*^9}, {
   3.68848392632409*^9, 3.688483936223011*^9}, {3.6884840041324797`*^9, 
   3.688484067750948*^9}, 3.688484148524671*^9, {3.6884841816955338`*^9, 
   3.688484188396865*^9}, {3.688484225638192*^9, 3.68848422815633*^9}, 
   3.68848429044825*^9, {3.688484352790711*^9, 3.688484356571911*^9}, {
   3.6884845879623203`*^9, 3.688484614396227*^9}, 3.6884848986069508`*^9, {
   3.6884854773562183`*^9, 3.688485491246336*^9}, {3.688485526383623*^9, 
   3.688485529902462*^9}, {3.688485572227022*^9, 3.688485576438748*^9}, {
   3.688485650084407*^9, 3.688485667452937*^9}, 3.6884857195459137`*^9, {
   3.688485754599079*^9, 3.688485755133552*^9}, {3.68848586852036*^9, 
   3.688485878687529*^9}, {3.6884859213268213`*^9, 3.6884859264857483`*^9}, {
   3.688485960097806*^9, 3.688486002247279*^9}, {3.688486079605*^9, 
   3.688486087398191*^9}, 3.6884861202257442`*^9, {3.68848620390075*^9, 
   3.688486321335424*^9}, {3.688486408601286*^9, 3.68848640897606*^9}, {
   3.688486439789666*^9, 3.688486494746125*^9}, {3.68848653769893*^9, 
   3.68848653843361*^9}, {3.688486576222288*^9, 3.688486582422011*^9}, {
   3.688486643848743*^9, 3.6884866610571213`*^9}, 3.68848672895428*^9, {
   3.688486810085149*^9, 3.688486824488307*^9}, {3.688486868835739*^9, 
   3.688486881942824*^9}, {3.688486921690096*^9, 3.688486975352674*^9}, {
   3.688487565309577*^9, 3.688487608649137*^9}, 3.68848765436588*^9, {
   3.688487893736545*^9, 3.688487894570648*^9}, {3.6884879294730663`*^9, 
   3.688487959240409*^9}, {3.688488013009778*^9, 3.6884880141834307`*^9}, {
   3.688488052380843*^9, 3.688488053131974*^9}, {3.688488198025268*^9, 
   3.6884882919961977`*^9}, {3.688488329946023*^9, 3.688488396725443*^9}, {
   3.6884885409887342`*^9, 3.688488546434863*^9}, {3.6884885863391113`*^9, 
   3.6884886129600563`*^9}, {3.6884887387356873`*^9, 3.688488812329712*^9}, {
   3.688488897412801*^9, 3.688488898042592*^9}, {3.6884889282235937`*^9, 
   3.68848893152628*^9}, {3.688489161526948*^9, 3.688489194481049*^9}, {
   3.6884892262938833`*^9, 3.6884892289440203`*^9}, {3.6884892634352493`*^9, 
   3.688489331530796*^9}, 3.688489363212682*^9, 3.6884893948320837`*^9, {
   3.6884894306908197`*^9, 3.688489472948482*^9}, 3.688489598074285*^9, 
   3.688489647496139*^9, {3.68849320342111*^9, 3.688493231888823*^9}, {
   3.6884935315363398`*^9, 3.688493576962644*^9}, {3.688493701415427*^9, 
   3.688493708672064*^9}, {3.688493740805688*^9, 3.688493743874569*^9}, {
   3.688493776313635*^9, 3.688493866171824*^9}, {3.688493906851709*^9, 
   3.688494066738308*^9}, {3.688494108490453*^9, 3.688494138916545*^9}, {
   3.688494196706614*^9, 3.688494230509802*^9}, {3.688494294281527*^9, 
   3.6884944550603743`*^9}, {3.688494769579143*^9, 3.688494772105941*^9}, {
   3.688494805591984*^9, 3.6884949015355663`*^9}, {3.688494975354958*^9, 
   3.688494991475421*^9}, {3.6884950421934147`*^9, 3.6884950486961737`*^9}, 
   3.688495086176714*^9, {3.688495154086893*^9, 3.6884952020281687`*^9}, {
   3.6884953900424433`*^9, 3.6884954110484247`*^9}, {3.6884954441837187`*^9, 
   3.688495451542457*^9}, {3.688495507817897*^9, 3.688495555379457*^9}, {
   3.688495614372196*^9, 3.688495631901431*^9}, {3.688495722995723*^9, 
   3.68849576846446*^9}, {3.688495804276806*^9, 3.688495843978455*^9}, {
   3.688495977731783*^9, 3.688495989226466*^9}, {3.688496050838821*^9, 
   3.688496063192402*^9}, {3.6884960968001842`*^9, 3.68849609709829*^9}, {
   3.688496220281307*^9, 3.688496220930439*^9}, {3.688496403672277*^9, 
   3.688496415242642*^9}, {3.68849722598275*^9, 3.688497262929858*^9}, {
   3.688497324590015*^9, 3.688497331245193*^9}, {3.688497382955303*^9, 
   3.68849740984098*^9}, {3.688498418426097*^9, 3.688498419200736*^9}, {
   3.6884985069973803`*^9, 3.688498536912949*^9}, {3.688499168522646*^9, 
   3.688499180008524*^9}, 3.688500554181389*^9, {3.688576900274235*^9, 
   3.6885769205479717`*^9}, 3.68857697744313*^9, 3.688577346707734*^9, 
   3.6885773974037952`*^9, {3.6885774789805603`*^9, 3.688577495695548*^9}, {
   3.6885775537660627`*^9, 3.68857771270562*^9}, {3.688577808047595*^9, 
   3.688577923482492*^9}, {3.68857804176818*^9, 3.688578133689782*^9}, {
   3.688578262169964*^9, 3.6885782691604433`*^9}, {3.688578319375298*^9, 
   3.688578415372817*^9}, {3.688578468588276*^9, 3.688578501383493*^9}, 
   3.688578541739847*^9, {3.688578678407247*^9, 3.688578685042101*^9}, {
   3.6885787197209787`*^9, 3.688578724837061*^9}, {3.688578786595572*^9, 
   3.6885788087364063`*^9}, 3.688578843716834*^9, {3.68857891503188*^9, 
   3.688578934668892*^9}, {3.688579056916155*^9, 3.688579058132511*^9}, {
   3.6885790890101547`*^9, 3.688579096148348*^9}, {3.6885792108212976`*^9, 
   3.688579232844002*^9}, {3.6885792777977343`*^9, 3.688579311687058*^9}, {
   3.688579515011682*^9, 3.688579515337097*^9}, {3.688579601412394*^9, 
   3.6885796134463787`*^9}, {3.6885796697912817`*^9, 3.688579677605296*^9}, {
   3.688579870976221*^9, 3.688579871605565*^9}, {3.6885799425521193`*^9, 
   3.688579982082272*^9}, 3.6885802175627747`*^9, 3.688580742955521*^9, {
   3.688583877474736*^9, 3.6885839772509613`*^9}, {3.688584023378955*^9, 
   3.688584058068878*^9}, {3.688584095587846*^9, 3.6885841092915277`*^9}, {
   3.688584140536749*^9, 3.6885842839563503`*^9}, {3.688584607594421*^9, 
   3.688584613910843*^9}, {3.68858963219596*^9, 3.688589634934512*^9}, {
   3.688589711493763*^9, 3.688589716190379*^9}, {3.688590003264634*^9, 
   3.688590089054719*^9}, {3.688590234637763*^9, 3.688590258040845*^9}, {
   3.688590349028902*^9, 3.688590352419676*^9}, {3.688590445309576*^9, 
   3.688590448237286*^9}, {3.688590499188345*^9, 3.688590501891129*^9}, {
   3.6885905502029877`*^9, 3.688590551839505*^9}, {3.688590649026987*^9, 
   3.6885906796476307`*^9}, {3.6885907296832457`*^9, 3.688590732628635*^9}, {
   3.68859076402568*^9, 3.688590796691489*^9}, 3.688590827284164*^9, {
   3.688590865143856*^9, 3.688590909702696*^9}, {3.6885910254923286`*^9, 
   3.688591114640971*^9}, {3.6886406347694283`*^9, 3.688640635627995*^9}, {
   3.6886423358812027`*^9, 3.6886423372169228`*^9}, 3.688642369908004*^9, {
   3.688756911429768*^9, 3.688756919548161*^9}, {3.688756988739366*^9, 
   3.688757001513341*^9}, {3.6887570651931133`*^9, 3.688757107245129*^9}, {
   3.688757219195737*^9, 3.688757220318788*^9}, {3.6889228505748253`*^9, 
   3.688923115449642*^9}, {3.688925536457633*^9, 3.688925566082115*^9}, {
   3.688925703388032*^9, 3.6889257352139587`*^9}, {3.688925827687439*^9, 
   3.688925903825858*^9}, {3.6889260695748653`*^9, 3.688926115236787*^9}, {
   3.688926146693568*^9, 3.688926208692486*^9}, {3.688926252647368*^9, 
   3.688926355514269*^9}, 3.688926403209917*^9, {3.688926555006234*^9, 
   3.688926565199675*^9}, 3.6889266067578583`*^9, {3.688926732873185*^9, 
   3.688926775758184*^9}, {3.689026934576263*^9, 3.6890269541282177`*^9}, {
   3.689027014416437*^9, 3.689027248902761*^9}, {3.689027407212817*^9, 
   3.68902748895287*^9}, {3.689027520963772*^9, 3.689027636511722*^9}, {
   3.689027787737472*^9, 3.689027791585885*^9}, {3.689027823819561*^9, 
   3.689027904983783*^9}, {3.6890280606935987`*^9, 3.68902810342529*^9}, {
   3.689028228879857*^9, 3.689028237213457*^9}, 3.689028317701132*^9, 
   3.6890284022500763`*^9, {3.689028479773767*^9, 3.689028480507049*^9}, {
   3.689028588444788*^9, 3.689028658984684*^9}, 3.689028703777192*^9, {
   3.689028745427484*^9, 3.689028767682911*^9}, {3.689028798526287*^9, 
   3.689028802357806*^9}, {3.689028857092708*^9, 3.68902889115292*^9}, {
   3.689029006940625*^9, 3.689029024022379*^9}, {3.689029449907489*^9, 
   3.689029457524919*^9}, {3.6890295843135843`*^9, 3.689029753979439*^9}, {
   3.689030106772513*^9, 3.68903014044698*^9}, {3.6890304632864027`*^9, 
   3.689030471457389*^9}, {3.6890305094955893`*^9, 3.689030522904704*^9}, {
   3.689030624517178*^9, 3.689030666411866*^9}, 3.689030727835182*^9, 
   3.689030964809031*^9, {3.689031197583282*^9, 3.6890312347485657`*^9}, {
   3.689031293591889*^9, 3.689031320574037*^9}, {3.689031374864842*^9, 
   3.689031410484374*^9}, {3.689031452477022*^9, 3.689031465601322*^9}, {
   3.689031588628356*^9, 3.6890316138912992`*^9}, {3.689031866074831*^9, 
   3.68903199096598*^9}, {3.689032163343247*^9, 3.689032165082849*^9}, {
   3.689032208364966*^9, 3.6890322099520617`*^9}, {3.689032321539525*^9, 
   3.689032335854332*^9}, {3.689032376286187*^9, 3.6890323920084887`*^9}, {
   3.689033234413204*^9, 3.689033265017712*^9}, 3.689033442132361*^9, {
   3.689033764769374*^9, 3.689033766990058*^9}, {3.6890337988704243`*^9, 
   3.68903382785042*^9}, 3.6890342130459433`*^9, {3.68910051914473*^9, 
   3.689100539402516*^9}, 3.689100595521689*^9, {3.689100645477129*^9, 
   3.6891006536325006`*^9}, {3.6891007133790817`*^9, 3.689100760475889*^9}, {
   3.6891008219198503`*^9, 3.6891008437691307`*^9}, {3.689100884549261*^9, 
   3.689100909515197*^9}, {3.689101037734001*^9, 3.6891010394721823`*^9}, {
   3.6891010909852247`*^9, 3.689101091503482*^9}, {3.6891011348646317`*^9, 
   3.689101136093721*^9}, {3.689101217849275*^9, 3.689101267463772*^9}, {
   3.6891184217871323`*^9, 3.689118512378071*^9}, {3.689118560149255*^9, 
   3.689118564380373*^9}, {3.689186654441906*^9, 3.68918668370724*^9}, {
   3.6891871201184587`*^9, 3.689187227016404*^9}, {3.689187302295471*^9, 
   3.6891873311135063`*^9}, {3.6891874438525963`*^9, 3.689187450166492*^9}, {
   3.6891875045392017`*^9, 3.689187509676309*^9}, {3.6891957524177237`*^9, 
   3.689195770788762*^9}, {3.689195835455386*^9, 3.689195855226162*^9}, {
   3.6891958941172123`*^9, 3.689195916207527*^9}, 3.689195983688039*^9, 
   3.6891960270171824`*^9, {3.689196128244856*^9, 3.689196132910019*^9}, 
   3.689196203095705*^9, {3.689196255269725*^9, 3.689196258045828*^9}, {
   3.6891963889278803`*^9, 3.689196394134528*^9}, {3.6891964352318172`*^9, 
   3.689196465877696*^9}, 3.689196531957478*^9, 3.689196572389082*^9, {
   3.689196607352227*^9, 3.689196631540813*^9}, {3.689196867526485*^9, 
   3.689196903980761*^9}, {3.689197046035741*^9, 3.689197049626144*^9}, {
   3.689197188656064*^9, 3.6891972625847673`*^9}, {3.689197330743362*^9, 
   3.689197389744479*^9}, {3.689197560361445*^9, 3.689197585684719*^9}, {
   3.689197667409245*^9, 3.689197675597917*^9}, {3.689197709484967*^9, 
   3.689197712490086*^9}, {3.6892556047207212`*^9, 3.689255636676559*^9}, {
   3.689255695636238*^9, 3.6892557903577147`*^9}, 3.689255921327012*^9, {
   3.68925601886738*^9, 3.689256020533299*^9}, 3.689256061631762*^9, {
   3.68925616390794*^9, 3.689256187487698*^9}, {3.689256530092369*^9, 
   3.68925653188955*^9}, {3.6892689142658653`*^9, 3.6892689241918573`*^9}, {
   3.689268960347724*^9, 3.68926896210432*^9}, 3.689269939317149*^9, {
   3.689270023988798*^9, 3.68927003438483*^9}, {3.689270088285224*^9, 
   3.689270089920827*^9}, {3.689270194886044*^9, 3.6892702391023684`*^9}, {
   3.689270378139258*^9, 3.689270409557214*^9}, {3.689270480648932*^9, 
   3.689270489367449*^9}, {3.689270534833494*^9, 3.689270580331298*^9}, {
   3.689270638235661*^9, 3.689270653996584*^9}, {3.689270713371913*^9, 
   3.689270718387466*^9}, 3.689270845591401*^9, {3.6892719068198*^9, 
   3.689271989080077*^9}, {3.6892720638587*^9, 3.689272087655387*^9}, {
   3.689272125274024*^9, 3.689272145471518*^9}, {3.689983555106414*^9, 
   3.689983576992371*^9}, {3.6900379996019363`*^9, 3.6900380055709867`*^9}, {
   3.69003809980205*^9, 3.6900381242115593`*^9}, {3.690038202478455*^9, 
   3.690038221873699*^9}, {3.690038267879757*^9, 3.690038300295945*^9}, {
   3.690038330587162*^9, 3.690038345706538*^9}, {3.690038418828866*^9, 
   3.690038419033873*^9}, 3.690038456484085*^9, {3.690038496022542*^9, 
   3.690038497957096*^9}, {3.690038573755127*^9, 3.690038574090114*^9}, 
   3.690038607516176*^9, {3.690038658603547*^9, 3.690038708129023*^9}, {
   3.690041795768671*^9, 3.690041851033104*^9}, 3.690041906256125*^9, {
   3.6900420049608994`*^9, 3.690042037623163*^9}, {3.690042082099655*^9, 
   3.6900420919263773`*^9}, {3.690042164526128*^9, 3.6900422842414427`*^9}, 
   3.690042319438459*^9, {3.690042392442006*^9, 3.690042473906893*^9}, {
   3.690042516417489*^9, 3.690042645746347*^9}, {3.690042998130204*^9, 
   3.690043000901476*^9}, {3.6900430423098373`*^9, 3.690043043054257*^9}, {
   3.6900430744851933`*^9, 3.690043184823943*^9}, {3.69004322006793*^9, 
   3.690043227681665*^9}, {3.6900433026808167`*^9, 3.6900433570587273`*^9}, {
   3.69004339298318*^9, 3.6900434590153646`*^9}, {3.690147918221706*^9, 
   3.69014793806747*^9}, {3.690148027417582*^9, 3.690148227347027*^9}, {
   3.690148287213459*^9, 3.690148338086705*^9}, {3.69014841261604*^9, 
   3.690148456347446*^9}, {3.690148506581365*^9, 3.690148557660645*^9}, {
   3.6901486143415318`*^9, 3.690148751510676*^9}, {3.690148918376575*^9, 
   3.6901489971842127`*^9}, {3.6901490707647753`*^9, 3.690149081865823*^9}, {
   3.690149144129931*^9, 3.690149146875964*^9}, {3.690149382382841*^9, 
   3.690149384886469*^9}, {3.6901494875099983`*^9, 3.690149496096345*^9}, {
   3.690149538093161*^9, 3.6901497205805683`*^9}, {3.690149780765559*^9, 
   3.69014995963866*^9}, {3.690150019535801*^9, 3.690150028588786*^9}, {
   3.690150093908147*^9, 3.6901501303323298`*^9}, {3.690150169863741*^9, 
   3.690150265548414*^9}, {3.690150309662344*^9, 3.69015031242813*^9}, {
   3.690150367410944*^9, 3.690150391469935*^9}, {3.690150444062292*^9, 
   3.6901504450132923`*^9}, {3.69015048124148*^9, 3.6901504829186707`*^9}, {
   3.690150520658375*^9, 3.690150527992268*^9}, {3.690150783302721*^9, 
   3.690150977471204*^9}, {3.690151035772833*^9, 3.690151063341507*^9}, {
   3.690151096522704*^9, 3.6901511642567587`*^9}, {3.6901512021439133`*^9, 
   3.690151208103488*^9}, {3.690151241453486*^9, 3.690151603661323*^9}, 
   3.690151758823131*^9, {3.690151974637328*^9, 3.6901521726848707`*^9}, {
   3.690152238569305*^9, 3.690152249662784*^9}, 3.690152685818007*^9, {
   3.690152959084889*^9, 3.690152986772132*^9}, {3.690153422442706*^9, 
   3.690153531712605*^9}, {3.6901535794753437`*^9, 3.690153613653969*^9}, {
   3.690153706696822*^9, 3.6901539997455873`*^9}, 3.690154057910118*^9, {
   3.690154115565625*^9, 3.6901541393756037`*^9}, {3.690154231000719*^9, 
   3.690154238179078*^9}, {3.69015457070651*^9, 3.6901545963469563`*^9}, {
   3.6901549703219748`*^9, 3.690154970891778*^9}, {3.690156330290416*^9, 
   3.690156336695457*^9}, {3.690156501724476*^9, 3.69015650234348*^9}, {
   3.690208595763855*^9, 3.69020861441336*^9}, {3.690208659663783*^9, 
   3.69020866012249*^9}, {3.6902087337386436`*^9, 3.690208739148539*^9}, {
   3.6902350518281517`*^9, 3.6902350520645533`*^9}, {3.690235347041505*^9, 
   3.690235347916992*^9}, 3.6902358593085423`*^9, 3.690990158983921*^9, {
   3.690995300690462*^9, 3.690995301522402*^9}, {3.690995332144616*^9, 
   3.6909953345480013`*^9}, 3.690998279800705*^9, {3.6909990366091013`*^9, 
   3.6909990402299843`*^9}, {3.691000954588298*^9, 3.691001003257063*^9}, {
   3.6910012222410088`*^9, 3.69100125973578*^9}, {3.691001320327881*^9, 
   3.691001354604089*^9}, {3.691001400853269*^9, 3.691001408299594*^9}, {
   3.691001446570252*^9, 3.691001453370297*^9}, 3.691001590147441*^9, {
   3.691001635779853*^9, 3.691001646811606*^9}, {3.6910017364580183`*^9, 
   3.691001737102395*^9}, 3.691001783953071*^9, {3.69100184802437*^9, 
   3.6910018623448133`*^9}, {3.6910021677734947`*^9, 3.691002171400669*^9}, {
   3.69100228765942*^9, 3.6910022891432962`*^9}, 3.691002329600896*^9, {
   3.691002624793318*^9, 3.691002652219225*^9}, 3.691003159234951*^9, 
   3.691003192287181*^9, {3.6910032535134697`*^9, 3.691003272104699*^9}, {
   3.691003438890279*^9, 3.691003461836349*^9}, 3.691004953218576*^9, {
   3.691004987367799*^9, 3.691005000120905*^9}, {3.691005081907189*^9, 
   3.6910050828584757`*^9}, {3.6910051237121572`*^9, 
   3.6910051410565767`*^9}, {3.691005181128255*^9, 3.6910052171163893`*^9}, {
   3.691005382350387*^9, 3.69100539436689*^9}, {3.69100550745046*^9, 
   3.691005577450383*^9}, 3.6910155387275047`*^9, 3.691015617969325*^9, 
   3.691015693145651*^9, {3.691016087467463*^9, 3.691016088202252*^9}, {
   3.691016305211928*^9, 3.691016306179573*^9}, {3.691156989659317*^9, 
   3.691157003679524*^9}, {3.6911634122328377`*^9, 3.691163419302436*^9}, {
   3.692640584113675*^9, 3.692640605569755*^9}, {3.692640655987754*^9, 
   3.6926406623148317`*^9}, {3.692645832645393*^9, 3.692645865920764*^9}, {
   3.69264609572713*^9, 3.692646124816382*^9}, {3.692646220459968*^9, 
   3.6926462283073683`*^9}, {3.6926463264658813`*^9, 3.692646418888693*^9}, 
   3.69264687951635*^9, {3.692646940312499*^9, 3.6926470343552237`*^9}, {
   3.692647149987358*^9, 3.6926471556973124`*^9}, {3.692647189778048*^9, 
   3.692647198515051*^9}, {3.692647640633062*^9, 3.692647671806362*^9}, 
   3.692647800746325*^9, {3.692647994212329*^9, 3.692648019998169*^9}, {
   3.692648876082017*^9, 3.692648888116036*^9}, {3.692648977333766*^9, 
   3.692649000321759*^9}, {3.692649038025236*^9, 3.692649065917069*^9}, {
   3.692649118626154*^9, 3.6926491305695543`*^9}, {3.692649181968276*^9, 
   3.692649194250484*^9}, {3.692649225717575*^9, 3.692649230302088*^9}, {
   3.6926492884756413`*^9, 3.692649293259798*^9}, {3.692649456552678*^9, 
   3.692649469158905*^9}, 3.692649517327656*^9, 3.692649597405547*^9, 
   3.692649694462269*^9, {3.692649747961087*^9, 3.692649761461793*^9}, {
   3.6926497981088343`*^9, 3.692649837481155*^9}, {3.692649929349533*^9, 
   3.692649981588416*^9}, {3.69265005511334*^9, 3.692650069739798*^9}, {
   3.692650150143338*^9, 3.692650272004119*^9}, {3.6926503722575397`*^9, 
   3.692650415120963*^9}, {3.6926504691343327`*^9, 3.692650474177919*^9}, {
   3.6926505394667053`*^9, 3.692650573445305*^9}, {3.692650629194009*^9, 
   3.692650632082649*^9}, {3.692650692637672*^9, 3.6926507216416683`*^9}, {
   3.692651109887169*^9, 3.692651118110818*^9}, {3.692651320359717*^9, 
   3.692651349909721*^9}, {3.692651399043885*^9, 3.692651451933969*^9}, {
   3.692651611749011*^9, 3.692651656071508*^9}, {3.6926516984039392`*^9, 
   3.69265174506606*^9}, {3.692651919974719*^9, 3.692651937622848*^9}, {
   3.692652117239581*^9, 3.692652147117159*^9}, {3.6926522607990427`*^9, 
   3.692652261174234*^9}, {3.692652409586286*^9, 3.692652427277717*^9}, {
   3.692652556089636*^9, 3.692652556774938*^9}, {3.692652606331883*^9, 
   3.692652606981064*^9}, {3.6926526492240334`*^9, 3.6926526496687603`*^9}, 
   3.692652993558229*^9, {3.6926530354694023`*^9, 3.692653035978697*^9}, {
   3.6926530905392942`*^9, 3.692653149443315*^9}, {3.6926535257655697`*^9, 
   3.6926535263125763`*^9}, {3.692654318509004*^9, 3.6926543545108137`*^9}, {
   3.6926543985874557`*^9, 3.6926544140864477`*^9}, {3.692654522728441*^9, 
   3.692654523156993*^9}, 3.692654657062584*^9, {3.6926549427462587`*^9, 
   3.6926549469975243`*^9}, {3.6926563452269087`*^9, 3.692656346576646*^9}, 
   3.692658665920106*^9, {3.6926592033582687`*^9, 3.692659223277725*^9}, {
   3.692659499625592*^9, 3.692659553086587*^9}, {3.692663712259447*^9, 
   3.692663718094809*^9}, {3.6926638881738997`*^9, 3.692663917672141*^9}, {
   3.692664025475153*^9, 3.692664046961233*^9}, 3.692664901789563*^9, {
   3.692747294732766*^9, 3.6927472956371727`*^9}, {3.692752500443495*^9, 
   3.692752501444865*^9}, 3.692794507981735*^9, {3.692794549663088*^9, 
   3.692794556122015*^9}, {3.692794588461462*^9, 3.692794642409189*^9}, 
   3.692794732264187*^9, {3.692794860929879*^9, 3.692794865842362*^9}, {
   3.692794955499894*^9, 3.692794964687771*^9}, {3.693083165744124*^9, 
   3.693083226643886*^9}, {3.693085101761002*^9, 3.6930851018280363`*^9}, {
   3.693086584083787*^9, 3.69308659278692*^9}, {3.693086679141934*^9, 
   3.693086680418721*^9}, {3.6930867297704363`*^9, 3.693086736512493*^9}, {
   3.693086772907606*^9, 3.693086798992792*^9}, {3.6930868687875547`*^9, 
   3.693086878944084*^9}, {3.69308690906618*^9, 3.693086922136504*^9}, 
   3.693091897477697*^9, {3.6930920120811987`*^9, 3.693092053636527*^9}, {
   3.693092093494689*^9, 3.6930920981370773`*^9}, {3.693092304304015*^9, 
   3.6930923059018173`*^9}, {3.693092434966921*^9, 3.693092494424026*^9}, 
   3.69309277235843*^9, 3.693092826335663*^9, 3.6930930451051598`*^9, {
   3.6933517899845047`*^9, 3.693351843087275*^9}, {3.6933518785226173`*^9, 
   3.693351900214216*^9}, {3.693351930725284*^9, 3.6933520390284767`*^9}, {
   3.6933521204834843`*^9, 3.6933521498251743`*^9}, 3.6933522391479883`*^9, {
   3.69335229795052*^9, 3.693352304015525*^9}, 3.693523984049128*^9, {
   3.694789192211631*^9, 3.69478920050655*^9}, {3.694789235634305*^9, 
   3.694789312103219*^9}, {3.6947894810199947`*^9, 3.694789557592869*^9}, {
   3.695743967709319*^9, 3.695743968395032*^9}, {3.696615245641906*^9, 
   3.696615280214551*^9}, 3.696615322401092*^9, {3.6966153742577553`*^9, 
   3.6966153761806927`*^9}, {3.696681526737685*^9, 3.696681533090186*^9}, {
   3.6967128685231256`*^9, 3.696712910687249*^9}, 3.6967130631045847`*^9, 
   3.6967133954974623`*^9, {3.696888793783784*^9, 3.696888811387575*^9}, {
   3.696889654420088*^9, 3.696889701676416*^9}, {3.6968897343106728`*^9, 
   3.6968897380069103`*^9}, {3.696889780022811*^9, 3.696889947596766*^9}, {
   3.696890054587893*^9, 3.696890072813835*^9}, {3.696890173803668*^9, 
   3.696890178410198*^9}, {3.696890251562901*^9, 3.6968902538438683`*^9}, 
   3.696890378931476*^9, {3.696890422369898*^9, 3.696890461279159*^9}, {
   3.6968906819953957`*^9, 3.696890867944449*^9}, {3.6968909779080687`*^9, 
   3.6968910224367437`*^9}, 3.6968912831632643`*^9, {3.696891357506378*^9, 
   3.6968913613453093`*^9}, {3.696891599619637*^9, 3.696891750688114*^9}, {
   3.696891782176334*^9, 3.696891802205065*^9}, {3.6968918479044533`*^9, 
   3.696892147104938*^9}, {3.6968922066361732`*^9, 3.696892383529787*^9}, {
   3.6968925273112917`*^9, 3.696892530212537*^9}, 3.696892607766861*^9, {
   3.696892670971162*^9, 3.6968926855588017`*^9}, {3.696892741432029*^9, 
   3.696892743391526*^9}, {3.696892809725526*^9, 3.696892833175901*^9}, 
   3.6968929438323812`*^9, {3.6968930139985647`*^9, 3.696893045521265*^9}, {
   3.6968932793027563`*^9, 3.6968932804152527`*^9}, {3.696893380891636*^9, 
   3.696893433765016*^9}, {3.696893526804421*^9, 3.696893531426611*^9}, {
   3.696893696669429*^9, 3.696893698319854*^9}, 3.6968937626398497`*^9, {
   3.696896071590962*^9, 3.696896153714341*^9}, {3.696896213665894*^9, 
   3.696896241804017*^9}, {3.696896275140717*^9, 3.696896347769939*^9}, {
   3.6968963939849033`*^9, 3.6968963995990057`*^9}, {3.6968965003111477`*^9, 
   3.696896531021545*^9}, {3.6968968755248013`*^9, 3.696896902378171*^9}, {
   3.696896980355843*^9, 3.696897017557314*^9}, {3.6968970677934237`*^9, 
   3.696897187178694*^9}, {3.696897246594244*^9, 3.696897263643352*^9}, {
   3.696979060083156*^9, 3.6969790941725082`*^9}, {3.696980093631905*^9, 
   3.6969800946450357`*^9}, {3.6972321245522327`*^9, 3.69723213045686*^9}, {
   3.697232221784883*^9, 3.6972323952664137`*^9}, {3.697232432937317*^9, 
   3.697232454720545*^9}, {3.697232486787394*^9, 3.697232586764126*^9}, {
   3.697232626161882*^9, 3.6972327341685257`*^9}, 3.705945624372466*^9, {
   3.713480866814518*^9, 3.713480870230344*^9}, {3.7134809027341757`*^9, 
   3.713480903507945*^9}, 3.713480993904443*^9, {3.7754199676316557`*^9, 
   3.775420033366459*^9}, {3.775423848743228*^9, 3.775423904756001*^9}, {
   3.775424055046649*^9, 3.775424055544898*^9}, {3.775424088590123*^9, 
   3.7754240903685627`*^9}, {3.775424128513588*^9, 3.775424159544963*^9}, {
   3.775424214313602*^9, 3.775424214767768*^9}, 3.775424275004518*^9, {
   3.775424307867825*^9, 3.775424309433477*^9}, 3.775424347008061*^9, {
   3.775424390328207*^9, 3.7754244015018263`*^9}, 3.775424440351544*^9, {
   3.77542449013443*^9, 3.7754245106567383`*^9}, {3.775424590511827*^9, 
   3.775424595897807*^9}, {3.775424631446909*^9, 3.775424632431973*^9}, {
   3.775424759922003*^9, 3.7754247841386642`*^9}, {3.7754248422627697`*^9, 
   3.7754248482439337`*^9}, {3.775424910081688*^9, 3.7754249541162977`*^9}, {
   3.775425013212966*^9, 3.77542502556954*^9}, {3.7754250788428793`*^9, 
   3.7754251589509068`*^9}, {3.775425307842804*^9, 3.775425386644606*^9}, {
   3.775425434642514*^9, 3.775425463261917*^9}, {3.77542550180234*^9, 
   3.775425544960328*^9}, {3.77542558661444*^9, 3.7754256066080627`*^9}, {
   3.775425677096436*^9, 3.775425696651382*^9}, {3.775425746669701*^9, 
   3.775425748819564*^9}, {3.77559673323707*^9, 3.775596788130575*^9}, {
   3.775597253392558*^9, 3.7755972809704742`*^9}, {3.77559839658148*^9, 
   3.7755984217577133`*^9}, 3.7755984996958847`*^9, {3.775598595054574*^9, 
   3.775598870953724*^9}, {3.7755989410984697`*^9, 3.775598970200933*^9}, {
   3.775599567482897*^9, 3.7755996173015614`*^9}, {3.775599908040429*^9, 
   3.77559990877465*^9}, {3.77559994458222*^9, 3.7755999786809464`*^9}, {
   3.775600015587627*^9, 3.775600355286524*^9}, {3.775600554034086*^9, 
   3.775600574780945*^9}, {3.7756006545485992`*^9, 3.7756006808352957`*^9}, {
   3.775600758317746*^9, 3.775600814739987*^9}, {3.7756008514967957`*^9, 
   3.775600858147745*^9}, {3.77560090576655*^9, 3.775600907351679*^9}, {
   3.775600969423585*^9, 3.775600982403504*^9}, {3.775601059187191*^9, 
   3.775601103523629*^9}, {3.77560126222434*^9, 3.775601268937962*^9}, {
   3.775601383127092*^9, 3.775601384800913*^9}, {3.775601427562821*^9, 
   3.7756014995457897`*^9}, {3.775601796632373*^9, 3.775601810039876*^9}, {
   3.775601856739667*^9, 3.775601921021283*^9}, {3.775601965869028*^9, 
   3.7756019811575212`*^9}, {3.7756020394684687`*^9, 3.775602046237082*^9}, 
   3.775602335477561*^9, {3.77564535487602*^9, 3.775645362312955*^9}, {
   3.775645484226489*^9, 3.775645513539151*^9}, {3.775645909435278*^9, 
   3.775645928117485*^9}, {3.775645966907185*^9, 3.7756460170980473`*^9}, {
   3.775646130046093*^9, 3.775646140104459*^9}, {3.775646214369957*^9, 
   3.775646280267892*^9}, {3.775646426375827*^9, 3.775646427070611*^9}, {
   3.775646524236476*^9, 3.775646563763342*^9}, {3.775646609267507*^9, 
   3.775646644058202*^9}, {3.775646701132531*^9, 3.775646810436284*^9}, 
   3.775646864161496*^9, {3.775646954843924*^9, 3.775646972154058*^9}, {
   3.7756471706039553`*^9, 3.775647220822691*^9}, {3.775647332214835*^9, 
   3.775647394254032*^9}, 3.775647717651123*^9, {3.775647810706541*^9, 
   3.7756478139683943`*^9}, {3.775647844719541*^9, 3.775647845478416*^9}, {
   3.775647882060766*^9, 3.77564809075298*^9}, {3.775648490687063*^9, 
   3.7756486752819767`*^9}, {3.775648753903664*^9, 3.775648843299815*^9}, {
   3.775648874004429*^9, 3.7756489055437098`*^9}, {3.775648937725316*^9, 
   3.775648950628169*^9}, {3.775648987275228*^9, 3.7756490013210287`*^9}, {
   3.775649044184407*^9, 3.775649047199753*^9}, {3.775649150502534*^9, 
   3.775649195169736*^9}, 3.775649248194313*^9, {3.7756493209379272`*^9, 
   3.7756493898215933`*^9}, 3.775649492441225*^9, {3.775649648677906*^9, 
   3.775649650487434*^9}, {3.77564969556495*^9, 3.775649697067686*^9}, {
   3.775649785668233*^9, 3.775649793085462*^9}, {3.775649872564638*^9, 
   3.775649873894698*^9}, {3.775649922429605*^9, 3.775649957601405*^9}, {
   3.775650021570302*^9, 3.775650024031138*^9}, {3.7756507304638166`*^9, 
   3.775650732682453*^9}, {3.7756507706420107`*^9, 3.775650797151569*^9}, {
   3.775650827639715*^9, 3.775650853209003*^9}, {3.775650982837831*^9, 
   3.775651049952901*^9}, {3.775651387933051*^9, 3.775651389554756*^9}, {
   3.775652405288576*^9, 3.775652480557135*^9}, {3.775652668761441*^9, 
   3.775652704894932*^9}, 3.7756528530183687`*^9, 3.775923780089281*^9, {
   3.775924006366838*^9, 3.7759241795859756`*^9}, 3.775924232471663*^9, {
   3.7759243301182756`*^9, 3.7759243443046513`*^9}, {3.77592442202608*^9, 
   3.775924439433696*^9}, 3.776016315699614*^9, {3.776016583785675*^9, 
   3.77601659085189*^9}, {3.776016621688328*^9, 3.776016624382409*^9}, 
   3.776016740081669*^9, {3.7760168995387983`*^9, 3.776016967158503*^9}, {
   3.7760170526371737`*^9, 3.776017053481675*^9}, {3.7760247542221937`*^9, 
   3.776024832163616*^9}, 3.7760248747227793`*^9, 3.7760249238165197`*^9, 
   3.7760250669420433`*^9, {3.776029742300359*^9, 3.776029742973024*^9}, 
   3.7761081420051203`*^9, {3.7761081825451097`*^9, 3.7761081863429823`*^9}, 
   3.77610861612813*^9, 3.776108672465569*^9, {3.776116396513867*^9, 
   3.7761164129613667`*^9}, {3.776116446576084*^9, 3.7761164495343323`*^9}, {
   3.7761165195808077`*^9, 3.7761165522530937`*^9}, {3.776116592940563*^9, 
   3.776116640616798*^9}, 3.7761166843316317`*^9, 3.77611711614585*^9, {
   3.77611715145807*^9, 3.776117362649941*^9}, 3.776117554177074*^9, {
   3.777906787484501*^9, 3.777906817342462*^9}, {3.77790685473516*^9, 
   3.777906870779933*^9}, {3.777906938572156*^9, 3.777906998431789*^9}, {
   3.7779072282052603`*^9, 3.7779072332256002`*^9}, {3.77790757964417*^9, 
   3.777907580568367*^9}, 3.7779087976613626`*^9, {3.7779098790697327`*^9, 
   3.777909968355818*^9}, {3.777910265691399*^9, 3.777910268110197*^9}, 
   3.777910703613503*^9, {3.777912233245083*^9, 3.7779122440631237`*^9}, {
   3.7779261328699417`*^9, 3.7779261396591*^9}, {3.77792622035806*^9, 
   3.777926256117132*^9}, {3.77798768409124*^9, 3.777987704266715*^9}, 
   3.7783227781418962`*^9, {3.778322908303829*^9, 3.778322910769689*^9}, {
   3.778322958135448*^9, 3.7783232112995253`*^9}, {3.778323533773423*^9, 
   3.77832353910124*^9}, {3.778323598061686*^9, 3.778323624686337*^9}, {
   3.778324354507497*^9, 3.778324369403163*^9}, {3.7783244530590267`*^9, 
   3.778324460707946*^9}, 3.7783245139887457`*^9, {3.778325754616267*^9, 
   3.778325874428093*^9}, {3.778325910872587*^9, 3.77832593665981*^9}, 
   3.7783260988772707`*^9, {3.7783261480168667`*^9, 3.7783261490192413`*^9}, 
   3.77836524602778*^9, {3.778365307442506*^9, 3.778365308416884*^9}, 
   3.778365422473508*^9, {3.7784357696719227`*^9, 3.778435904891089*^9}, {
   3.778435969397727*^9, 3.7784359772020197`*^9}, {3.779040304259369*^9, 
   3.779040309905175*^9}, 3.779040530903431*^9, {3.779040615936838*^9, 
   3.77904073093672*^9}, {3.779040798679598*^9, 3.7790408239954023`*^9}, {
   3.779040854305024*^9, 3.7790409618506536`*^9}, {3.779040992050816*^9, 
   3.7790410401193*^9}, 3.779041093625985*^9, {3.779041151136414*^9, 
   3.779041216650247*^9}, {3.779041253126359*^9, 3.779041259953846*^9}, {
   3.779041545292551*^9, 3.779041547660904*^9}, 3.779042684160811*^9, {
   3.779049381649934*^9, 3.7790493837119837`*^9}, 3.779444979301075*^9, {
   3.779445644354101*^9, 3.779445663987379*^9}, {3.779445730595111*^9, 
   3.779445745546726*^9}, {3.779445814623967*^9, 3.7794459330784483`*^9}, {
   3.779445969691202*^9, 3.7794459780977583`*^9}, {3.779446015552464*^9, 
   3.77944603982477*^9}, {3.779446108190134*^9, 3.779446115686385*^9}, {
   3.779446160134465*^9, 3.779446194368202*^9}, {3.779446478722754*^9, 
   3.779446642153064*^9}, {3.779446848426317*^9, 3.779447026770969*^9}, {
   3.779485217365827*^9, 3.7794852234671392`*^9}, {3.779485303128318*^9, 
   3.77948532922239*^9}, {3.779485366610341*^9, 3.7794853689788322`*^9}, {
   3.779737048077799*^9, 3.779737072797488*^9}, 3.779742013515616*^9, 
   3.779742091926597*^9, {3.7797425892011623`*^9, 3.7797426369558287`*^9}, 
   3.779742888002213*^9, {3.779743908909046*^9, 3.779744075450397*^9}, {
   3.7797929308900337`*^9, 3.7797929901552887`*^9}, {3.779825811430416*^9, 
   3.779825880297372*^9}, {3.779825917639192*^9, 3.7798259608062887`*^9}, {
   3.779826138362245*^9, 3.779826190798739*^9}, {3.779826268453032*^9, 
   3.779826373701027*^9}, {3.779826444059369*^9, 3.779826528012375*^9}, 
   3.779826606254877*^9, {3.779826673428419*^9, 3.779826681903653*^9}, {
   3.779826711916541*^9, 3.77982672655689*^9}, {3.779826843825583*^9, 
   3.779826848838347*^9}, {3.779981792930224*^9, 3.779981938474167*^9}, 
   3.7829443782289543`*^9, {3.78294591435916*^9, 3.782945917389628*^9}, {
   3.782945964540042*^9, 3.7829460623126087`*^9}, {3.782946205221653*^9, 
   3.782946288576054*^9}, {3.782946905873357*^9, 3.782946908884313*^9}, {
   3.7829470629064493`*^9, 3.782947096953102*^9}, 3.782947157290762*^9, {
   3.7829471883382797`*^9, 3.7829473572016773`*^9}, {3.7829474555022793`*^9, 
   3.782947508752727*^9}, {3.782947542264287*^9, 3.782947646010668*^9}, {
   3.7829477544832773`*^9, 3.78294777231136*^9}, {3.782947914635634*^9, 
   3.782947915547578*^9}, {3.7832734439851103`*^9, 3.783273453562277*^9}, {
   3.783273595870283*^9, 3.783273693922117*^9}, {3.783273734175857*^9, 
   3.783273759284747*^9}, {3.783273923472571*^9, 3.783273945184299*^9}, {
   3.783274068776572*^9, 3.783274108911419*^9}, {3.7832741398468933`*^9, 
   3.783274181403346*^9}, {3.783274237862726*^9, 3.783274266790393*^9}, {
   3.783274318571753*^9, 3.783274377437768*^9}, {3.7832744773318872`*^9, 
   3.783274479605874*^9}, {3.78327504983664*^9, 3.7832750585347843`*^9}, {
   3.783275213191202*^9, 3.783275235681683*^9}, {3.783275305589953*^9, 
   3.78327530748286*^9}, {3.783275375852132*^9, 3.783275376202354*^9}, 
   3.783275414131118*^9, {3.783275842780149*^9, 3.7832758919038773`*^9}, {
   3.784323570539516*^9, 3.784323571843433*^9}, {3.7844994341277847`*^9, 
   3.7844996143600597`*^9}, {3.784553577210866*^9, 3.78455364717838*^9}, {
   3.7845831823529577`*^9, 3.784583227425961*^9}, {3.784760581407815*^9, 
   3.7847605986188793`*^9}, {3.78476064079005*^9, 3.784760653425386*^9}, {
   3.784760737300624*^9, 3.784760741629307*^9}, {3.784760775460916*^9, 
   3.784760779651526*^9}, {3.7847608105570097`*^9, 3.784760907652197*^9}, {
   3.7847609462014303`*^9, 3.78476136489563*^9}, {3.78476154401698*^9, 
   3.7847616832980957`*^9}, {3.784761775662305*^9, 3.7847617987135887`*^9}, {
   3.784847361268272*^9, 3.7848473921397753`*^9}, {3.7848475683551483`*^9, 
   3.7848477250988073`*^9}, {3.784903084726808*^9, 3.7849031261971893`*^9}, {
   3.784903156252717*^9, 3.784903218662313*^9}, {3.815909539685924*^9, 
   3.815909592158547*^9}, {3.81595579001941*^9, 3.81595583470793*^9}, {
   3.815955878057411*^9, 3.8159559118476686`*^9}, 3.8160349842330637`*^9, {
   3.816035126684978*^9, 3.816035169184434*^9}, {3.816035213287792*^9, 
   3.816035255842144*^9}, {3.8160352980994377`*^9, 3.816035343765255*^9}, {
   3.816035388724015*^9, 3.816035437946829*^9}, {3.8160354695699244`*^9, 
   3.816035486932622*^9}, {3.816035536159343*^9, 3.816035537484599*^9}, {
   3.816035575019888*^9, 3.816035643239613*^9}, {3.816035707991249*^9, 
   3.816035713907879*^9}, {3.816038512842236*^9, 3.8160385159223433`*^9}, {
   3.816038736766659*^9, 3.816038739434045*^9}, {3.8160391565442333`*^9, 
   3.81603929735441*^9}, {3.816039338745634*^9, 3.816039385573473*^9}, {
   3.816039463919868*^9, 3.8160395050743847`*^9}, {3.816039631727791*^9, 
   3.816039680955271*^9}, 3.816211147378955*^9, {3.816211246164198*^9, 
   3.816211262107172*^9}, {3.816211313766049*^9, 3.8162113970937977`*^9}, {
   3.816211428156394*^9, 3.8162115515893307`*^9}, {3.8162116276062183`*^9, 
   3.816211633699993*^9}, {3.816211701054335*^9, 3.816211721701912*^9}, {
   3.816211934948554*^9, 3.816212016906341*^9}, {3.816212122316608*^9, 
   3.816212166623905*^9}, 3.816212274869432*^9, {3.816212421525751*^9, 
   3.8162124654375973`*^9}, {3.8162125313774843`*^9, 3.816212541346348*^9}, {
   3.816259491948966*^9, 3.816259832904852*^9}, {3.816259899316893*^9, 
   3.816259946594136*^9}, {3.8162599948848333`*^9, 3.816260104374784*^9}, {
   3.816260235024564*^9, 3.816260238653593*^9}, {3.816260282521212*^9, 
   3.816260283257865*^9}, {3.8162603718972807`*^9, 3.816260376111215*^9}, {
   3.816260514159336*^9, 3.816260519200729*^9}, {3.8162605653502607`*^9, 
   3.816260639944582*^9}, 3.8162606832118797`*^9, {3.816291495149441*^9, 
   3.816291581420807*^9}, {3.816291616124186*^9, 3.8162916416366177`*^9}, 
   3.816291698885668*^9, {3.816291770339501*^9, 3.8162917912833567`*^9}, {
   3.816291954581232*^9, 3.8162919547435427`*^9}, {3.816292039564713*^9, 
   3.816292130805953*^9}, {3.816292206045539*^9, 3.816292234394876*^9}, {
   3.816292974977749*^9, 3.8162929868720837`*^9}, {3.8162931308606253`*^9, 
   3.816293216444502*^9}, {3.816293653886593*^9, 3.816293774802115*^9}, {
   3.8163865133723087`*^9, 3.816386543525255*^9}, {3.8163865778003197`*^9, 
   3.816386605013389*^9}, {3.816386667003684*^9, 3.816386669895342*^9}, {
   3.816386700801792*^9, 3.8163867103820267`*^9}, {3.816386776816516*^9, 
   3.816386823117278*^9}, {3.816386872315167*^9, 3.8163869011693687`*^9}, {
   3.8164293926243267`*^9, 3.816429403021693*^9}, {3.816429436352667*^9, 
   3.816429440581665*^9}, {3.816429619128545*^9, 3.816429644172351*^9}, {
   3.8164440202839108`*^9, 3.816444051183648*^9}, {3.8164440953513613`*^9, 
   3.816444273425433*^9}, {3.8164443378937197`*^9, 3.816444341555419*^9}, {
   3.816444427385906*^9, 3.816444449137607*^9}, {3.816444516885612*^9, 
   3.816444517750807*^9}, 3.816444581799521*^9, {3.8164456084956284`*^9, 
   3.8164457266364107`*^9}, {3.816445764826239*^9, 3.8164459227936497`*^9}, {
   3.816446042119779*^9, 3.8164460660184603`*^9}, {3.816446110966709*^9, 
   3.816446120051161*^9}, {3.816450122298416*^9, 3.8164501928118057`*^9}, {
   3.816450295968526*^9, 3.816450328721933*^9}, {3.816450376167472*^9, 
   3.816450405085918*^9}, {3.816450453749*^9, 3.816450458085946*^9}, {
   3.8164506024337254`*^9, 3.816450608298074*^9}, {3.8164507448934517`*^9, 
   3.8164507478130913`*^9}, {3.816450812262274*^9, 3.816450843865168*^9}, {
   3.816450903077674*^9, 3.816451000842979*^9}, {3.816690143511332*^9, 
   3.816690287165259*^9}, {3.816690322938657*^9, 3.8166903702535353`*^9}, 
   3.816690408590726*^9, {3.8166904450175133`*^9, 3.816690544828556*^9}, {
   3.816690578008607*^9, 3.8166905884597483`*^9}, {3.816690620801557*^9, 
   3.816690675791439*^9}, {3.81669072719963*^9, 3.816690729971882*^9}, {
   3.816692904594161*^9, 3.816692917922677*^9}, {3.816692969531683*^9, 
   3.816692981105433*^9}, {3.8166930420582647`*^9, 3.8166931328999863`*^9}, {
   3.816693351597952*^9, 3.816693386792556*^9}, {3.816693804288566*^9, 
   3.816694063521253*^9}, {3.816694129394697*^9, 3.816694142638743*^9}, {
   3.816694179719455*^9, 3.8166944588695583`*^9}, {3.81669450760073*^9, 
   3.816694558304411*^9}, 3.816695046519734*^9, {3.816695289389048*^9, 
   3.816695416137726*^9}, {3.816695605384555*^9, 3.8166957541464*^9}, {
   3.816695790640176*^9, 3.816695809086104*^9}, {3.8166959804409723`*^9, 
   3.816696072789651*^9}, {3.81669621395737*^9, 3.8166962358379498`*^9}, {
   3.816696311882803*^9, 3.816696325679653*^9}, {3.816696726263526*^9, 
   3.816696727590954*^9}, {3.816696823652793*^9, 3.816696824745968*^9}, {
   3.8166971784902763`*^9, 3.816697246337946*^9}, {3.816697416545692*^9, 
   3.816697417176057*^9}, 3.81670334947355*^9, {3.81670361177428*^9, 
   3.816703685470525*^9}, {3.816703797604344*^9, 3.816703871589425*^9}, {
   3.816705001888644*^9, 3.816705018135509*^9}, {3.816713312356296*^9, 
   3.816713346255601*^9}, {3.816726874696518*^9, 3.816726992634306*^9}, {
   3.816802518311159*^9, 3.816802574128296*^9}, {3.816817292723517*^9, 
   3.8168174608102503`*^9}, {3.816817606399942*^9, 3.816817609983203*^9}, 
   3.816817679128294*^9, {3.816817834693776*^9, 3.816817839333913*^9}, {
   3.816949737518016*^9, 3.816949750980212*^9}, {3.816950007847581*^9, 
   3.81695000901573*^9}, {3.816950049683537*^9, 3.816950079999154*^9}, {
   3.816950179416294*^9, 3.816950188230739*^9}, {3.817395672479999*^9, 
   3.817395878112165*^9}, {3.817505062999846*^9, 3.817505110082856*^9}, {
   3.8175051736788588`*^9, 3.8175051785340357`*^9}, 3.817666956984311*^9, {
   3.81766719003472*^9, 3.8176672140604763`*^9}, {3.817667276457259*^9, 
   3.817667283971325*^9}, {3.81766749969274*^9, 3.817667782763219*^9}, {
   3.817667872163121*^9, 3.8176678829004927`*^9}, {3.817755534910583*^9, 
   3.817755633361082*^9}, {3.817755709667488*^9, 3.81775571647966*^9}, {
   3.817758183076685*^9, 3.817758209690139*^9}, {3.8177582442493353`*^9, 
   3.817758252087534*^9}, {3.8177583372845783`*^9, 3.817758538808077*^9}, {
   3.817758910511754*^9, 3.817758949177824*^9}, {3.817759304877907*^9, 
   3.817759318251968*^9}, {3.817759378598321*^9, 3.817759415789422*^9}, {
   3.817759555383491*^9, 3.817759570494087*^9}, 3.817759635368494*^9, {
   3.817759713922002*^9, 3.817759797295003*^9}, {3.817759827941346*^9, 
   3.817759849017295*^9}, {3.817759888414592*^9, 3.81776004052425*^9}, {
   3.817760766357795*^9, 3.81776076779657*^9}, {3.8177608143128977`*^9, 
   3.8177608268276367`*^9}, {3.81776103083368*^9, 3.817761138060885*^9}, {
   3.817944797290289*^9, 3.817944840247212*^9}, 3.8179905843447027`*^9, 
   3.817991264242277*^9, {3.818005232445813*^9, 3.8180052683564034`*^9}},
 CellLabel->
  "In[1859]:=",ExpressionUUID->"76c7630f-7b66-408b-8f27-d8808eef805d"],

Cell[BoxData[
 TemplateBox[{
   FrontEndObject[
    LinkObject["n5rz4_shm", 3, 1]], 92, 
   "FrontEndObject[LinkObject[\"n5rz4_shm\", 3, 1]]", "92", 
   "\"Geometric Algebra Palette\""},
  "NotebookObjectUnsaved"]], "Output",
 CellChangeTimes->{
  3.816817694560418*^9, 3.81681785020989*^9, {3.816949532862473*^9, 
   3.816949533271246*^9}, {3.8177608601083517`*^9, 3.817760860371882*^9}, 
   3.817760954386723*^9, 3.81776115113848*^9, {3.8179448899004173`*^9, 
   3.817944908107026*^9}, {3.81799117990315*^9, 3.8179911801721687`*^9}, 
   3.8179912844569283`*^9, {3.818005337581139*^9, 3.8180053377790422`*^9}},
 CellLabel->
  "Out[1860]=",ExpressionUUID->"5372b011-9174-4501-89a7-1c53ff5891ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Version Changes",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Subsection",
 CellChangeTimes->{{3.696615568480658*^9, 3.696615571807548*^9}, 
   3.696615754291842*^9},ExpressionUUID->"eb334d1c-290f-4d45-bba3-\
40b141dadf3a"],

Cell[TextData[{
 StyleBox["2021 Jan\n",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["Added PrintG\nRenamed AtomListToEijListG to EijToEijG, and \
EijListToAtomG to EijToEiEjG. Eliminated obsolete ToClifEijListG\nChanged \
spelling of CoeffListG to CoefListG",
  FontColor->GrayLevel[0]],
 StyleBox["\n\n2020 Dec\n",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["Added two new RotorG commands, one specifically for 3-space and \
one for dimension n, both space or spacetime\nAdded ClearSubscriptG and \
extended SimplifyG to apply to matrices\nSmall change to # of time dimensions \
wording and update to Rotor tooltip to include hyperbolic cases\nFixed sizes \
of boxes on LHS of Typing Aids: Multivector Generators. VERY sensitive to \
spacing of lines!\nFixed blank tooltip for DotProdtG. Mathematica is VERY \
particular about the subscript abs<p-q> and not Abs nor (..) nor [..] nor \
|..|\nVarious improvements to tooltips.",
  FontColor->GrayLevel[0]],
 StyleBox["\n\n2019 Dec\n",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["Added FullSimplifyG\nRenamed ",
  FontColor->GrayLevel[0]],
 StyleBox["AtomListToEijListG and EijListToAtomListG to ToClifEijListG and \
ToClifListG",
  FontSize->14,
  FontColor->GrayLevel[0]],
 StyleBox[" \n",
  FontSize->18,
  FontColor->GrayLevel[0]],
 "Changed description of  replacement  EijSortG function",
 StyleBox["\n\n2019 Nov\n",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["Mention in tooltip that HodgeDual3G and 4G s are available\nExpand \
tooltip explanation for InverseG to announce Inverse4G, 5G, and NG\nAdded \
GradeInvoluteG, ClifConjugateG, EijSortG",
  FontColor->GrayLevel[0]],
 StyleBox["\n\n2019 Oct\n",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["Rename EiEjListG to AtomListG and reordered palette\n Added  \
CoeffListG  as a companion to ClifToListG and AtomListG\n Improved \
descriptions of list functions",
  FontColor->GrayLevel[0]],
 StyleBox["\n\n2019 Sep\n",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["Added \[OpenCurlyDoubleQuote]Exterior\[CloseCurlyDoubleQuote] as \
an alternate name for Grassmann algebra\nBetter warnings on tooltips for \
NormG and InverseG\nReplaced SmallCircle (",
  FontColor->GrayLevel[0]],
 "\\SmallCircle]) by Diamond (\\Diamond])\nChanged nVectorG to VectorG, \
pBladeG to BladeG, and nClifG to ClifG. Modified many tooltips due to this.\n\
Changed InitializeG to ReduceG\nName changes: SliceG -> GradedClifG,  \
eSubscriptListG -> EijListG\nNew functions: MaxGradeG and EiEjListG",
 StyleBox["\n\n2019Aug\n",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["Updated Needs Statement\nRenamed:\n        EijTermG -> AtomCoef,   \
SliverG -> AtomG,   GradePTermG -> pSliceG\nAdded  SliceG and pSliceG\n\
Improved several tooltips\nImproved box sizes in typing aids to almost match \
size of output boxes",
  FontColor->GrayLevel[0]],
 StyleBox["\n\nversion 21\n",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["Renamed GradePpieceG to GradePTermG",
  FontColor->GrayLevel[0]],
 StyleBox["\n",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["Added EvenClifG, FreeTermG, EijTermG and rearranged palette \
appropriately",
  FontColor->GrayLevel[0]],
 StyleBox["\n\nVersion 20",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["\nAdded ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["e", 
     RowBox[{"\[Placeholder]", " "}]], "to", " ", "Typing", " ", "Aids"}], 
   TraditionalForm]],ExpressionUUID->"8c9af3bc-d630-494d-a669-e852b80de6e6"],
 "\nPut Clifford and Mathematicians 1st,  ahead of Grassmann and Physicists, \
and made those the defaults\n\n"
}], "Text",
 CellChangeTimes->{{3.696615568480658*^9, 3.696615571807548*^9}, {
   3.696615777611142*^9, 3.696615843718663*^9}, {3.696712782519135*^9, 
   3.696712826555965*^9}, {3.696713534147087*^9, 3.696713539113139*^9}, {
   3.696888329701104*^9, 3.696888439867208*^9}, 3.696897498024548*^9, {
   3.696979123031178*^9, 3.696979177158291*^9}, {3.775420099366865*^9, 
   3.775420136030253*^9}, {3.7760163207043867`*^9, 3.776016531313657*^9}, {
   3.776016751889803*^9, 3.776016755376318*^9}, {3.7760289812879763`*^9, 
   3.7760290432061367`*^9}, {3.7761086851896133`*^9, 3.776108757751987*^9}, {
   3.777907252563325*^9, 3.777907339289955*^9}, {3.7779105626635857`*^9, 
   3.7779106663619223`*^9}, {3.7783233934894114`*^9, 
   3.7783234249105873`*^9}, {3.7783234639708776`*^9, 3.778323512710085*^9}, {
   3.778326205207675*^9, 3.7783262150165443`*^9}, {3.779040321238804*^9, 
   3.7790404349922333`*^9}, 3.7790493885139923`*^9, {3.779444987982991*^9, 
   3.7794450474617367`*^9}, {3.7794450953188963`*^9, 3.779445102486506*^9}, {
   3.779445197009307*^9, 3.779445210972971*^9}, {3.7794453461728477`*^9, 
   3.77944535854388*^9}, {3.7794454297245626`*^9, 3.7794454985229692`*^9}, {
   3.779446671942245*^9, 3.779446688637185*^9}, {3.779447187824464*^9, 
   3.779447320639361*^9}, {3.782944384728951*^9, 3.782944446159498*^9}, {
   3.7829444767395277`*^9, 3.782944501726821*^9}, {3.7829445633997793`*^9, 
   3.7829445819309883`*^9}, {3.782945100593498*^9, 3.782945106424261*^9}, {
   3.782945553198545*^9, 3.782945567925881*^9}, {3.782946094044135*^9, 
   3.782946148954752*^9}, {3.784553494476666*^9, 3.7845535346144*^9}, {
   3.784847420006867*^9, 3.7848474341961823`*^9}, {3.784902995774927*^9, 
   3.7849030256824417`*^9}, {3.8159560207966137`*^9, 3.815956114351668*^9}, {
   3.8160359840986147`*^9, 3.816036196323691*^9}, {3.816036243446931*^9, 
   3.816036257514299*^9}, {3.8160397664928513`*^9, 3.816039781701118*^9}, {
   3.8162611343997*^9, 3.8162612167126513`*^9}, {3.8163870532250423`*^9, 
   3.816387068868684*^9}, {3.816451037141193*^9, 3.816451065379417*^9}, {
   3.816703377614462*^9, 3.816703393386404*^9}, {3.8167034411789*^9, 
   3.816703443230007*^9}, {3.8177601663335752`*^9, 3.817760382267405*^9}, {
   3.817760436579323*^9, 3.817760469730505*^9}, {3.817990656241496*^9, 
   3.817990696973488*^9}, {3.817990928686049*^9, 3.817990936077599*^9}, {
   3.817990967763433*^9, 3.817991021184527*^9}, {3.817991057804596*^9, 
   3.817991059184627*^9}},ExpressionUUID->"4a3489c9-27cd-41f6-b43d-\
5798658675ac"]
}, Open  ]]
},
WindowSize->{875, 1241},
WindowMargins->{{Automatic, 492}, {Automatic, 0}},
SpellingDictionaries->{"CorrectWords"->{"aaa", "Windowsize"}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> "12.1 for Mac OS X x86 (64-bit) (June 19, 2020)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"5fe75c16-e8d2-4fec-ae60-8dba28543316"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 12214, 178, 2131, "Text",ExpressionUUID->"969d602e-3133-4ac8-b153-3e8836467719"],
Cell[CellGroupData[{
Cell[12639, 195, 95564, 1546, 5664, "Code",ExpressionUUID->"76c7630f-7b66-408b-8f27-d8808eef805d"],
Cell[108206, 1743, 695, 14, 43, "Output",ExpressionUUID->"5372b011-9174-4501-89a7-1c53ff5891ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108938, 1762, 243, 4, 54, "Subsection",ExpressionUUID->"eb334d1c-290f-4d45-bba3-40b141dadf3a"],
Cell[109184, 1768, 6256, 125, 1280, "Text",ExpressionUUID->"4a3489c9-27cd-41f6-b43d-5798658675ac"]
}, Open  ]]
}
]
*)

