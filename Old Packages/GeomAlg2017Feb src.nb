(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    271200,       6005]
NotebookOptionsPosition[    269000,       5922]
NotebookOutlinePosition[    269382,       5939]
CellTagsIndexPosition[    269339,       5936]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Geometric Algebra", "Title",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722519822702`*^9, 3.6910723269774513`*^9}],

Cell[CellGroupData[{

Cell["Overview", "Chapter",
 CellChangeTimes->{{3.691079996566341*^9, 3.691080000246093*^9}}],

Cell[TextData[{
 "This Geometric Algebra (GA) package performs GA operations in n-dimensions \
for any n. The package can be configured for either Grassmann or Clifford \
algebras. The latter can be configured to use either the  + - - -  or  - + + \
+  convention, and can be configured for space or space-time (with additional \
time dimensions possible for those who wish to explore that.) This package \
uses everyday standard (i.e., subscript) notation and uses the symbols ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["e", "1"], ",", 
    SubscriptBox["e", "2"]}], TraditionalForm]]],
 ", ... for its orthonormal basis. \n\nThe package has a palette to simplify \
entering of multivectors so that entering subscripts is made easy.  The \
palette also shows all the available functions, discusses them in tooltips \
(i.e., hover the mouse over a palette entry), and displays examples.  All \
commands can be used with symbols as well as numerical values.\n\nQuick Start \
describes how to install the palette. To use the commands in this package, \
put the file GeomAlg2017Feb.m in one of the directories listed in your $Path. \
The preferred location is $UserBaseDirectory. After that, to use the package \
simple enter Needs[\"GeomAlg2017Feb`\"] at the top of a notebook and then \
start using any of these commands along with usual Mathematica commands"
}], "Text",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, {
   3.6910722815485487`*^9, 3.6910723157986307`*^9}, {3.6957443849259768`*^9, 
   3.6957443872132273`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["1 Begin Package", "Chapter",
 CellChangeTimes->{{3.691191133633431*^9, 3.6911911457483177`*^9}}],

Cell[CellGroupData[{

Cell["Set Up", "Subchapter",
 CellChangeTimes->{{3.696347248593136*^9, 3.696347250663979*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Mathematica", " ", 
     RowBox[{"Package", "\n", "   ", ":", "Title", ":", 
      RowBox[{
       RowBox[{"Geometric", " ", "Alagebra", " ", "in", " ", "n"}], "-", 
       RowBox[{
       "Space", "\n", "   ", ":", "Context", ":", "GeomAlg2017Feb`", "\n", 
        "   ", ":", "Author", ":", 
        RowBox[{
         RowBox[{"Dr", ".", " ", "Bud"}], " ", 
         RowBox[{"Simrin", "\n", "   ", ":", "Date", ":", 
          RowBox[{"2017", "-", "01", "-", "01"}], "\n", " ", "\n", "   ", ":", 
          RowBox[{"Package", " ", "Version"}], ":", "0.3", "\n", "   ", ":", 
          RowBox[{"Mathematica", " ", "Version"}], ":", 
          RowBox[{"11.0", ".1"}], "\n", "   ", ":", "Copyright", ":", 
          RowBox[{
           RowBox[{"(", "c", ")"}], " ", "2017", " ", 
           RowBox[{"Dr", ".", " ", "Bud"}], " ", 
           RowBox[{"Simrin", "\n", "   ", ":", "Keywords", ":", " ", 
            RowBox[{"geometric", " ", "algeba"}]}]}]}]}]}]}]}]}], ",", " ", 
    RowBox[{"Clifford", " ", "algebra"}], ",", " ", 
    RowBox[{"wedge", " ", "product"}], ",", " ", 
    RowBox[{"dot", " ", "product"}], ",", " ", 
    RowBox[{"exterior", " ", "\n", "\t", "product"}], ",", " ", 
    RowBox[{"interior", " ", "product"}], ",", " ", 
    RowBox[{"Hodge", " ", "dual"}], ",", " ", "clif", ",", " ", "multivector",
     ",", " ", "bivector", ",", " ", "rotor", ",", " ", "rotation", ",", " ", 
    "\n", "\t", "spacetime", ",", " ", 
    RowBox[{"n", "-", "dimensional"}], ",", " ", 
    RowBox[{
     RowBox[{
     "quaternion", "\n", " ", "\n", "   ", ":", "Discussion", ":", "\n", "\n",
       "USAGE", ":", "\n", "\n", "\t", 
      RowBox[{"SetDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<GeomAlg2017Feb`*\>\"", "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"BeginPackage", "[", "\"\<GeomAlg2017Feb`\>\"", "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"$FrontEnd", ",", 
      RowBox[{"InputAliases", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<slc\>\"", "\[Rule]", "\"\<\[SquareSuperset]\>\""}], ",", 
         RowBox[{"\"\<src\>\"", "\[Rule]", "\"\<\[SquareSubset]\>\""}]}], 
        "}"}]}]}], "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.691072406579616*^9, 3.6910724363613253`*^9}, 
   3.691170964657378*^9, {3.691172520460575*^9, 3.6911725999701433`*^9}, {
   3.691172635376563*^9, 3.691172662039344*^9}, 3.691172699111658*^9, {
   3.691172758994171*^9, 3.691172771331914*^9}, {3.691346315195692*^9, 
   3.691346344412607*^9}, {3.69134734084857*^9, 3.691347342087324*^9}, {
   3.693070656972659*^9, 3.693070668032612*^9}, {3.6930798668510113`*^9, 
   3.693079872868845*^9}, {3.695744361358244*^9, 3.695744389889625*^9}, 
   3.696347203580554*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Debug Flags (True = On, False = Off, Default = False)", "Subchapter",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, {
   3.691170901550271*^9, 3.691170925069228*^9}, {3.691171165424671*^9, 
   3.691171166415215*^9}, {3.6963473454108677`*^9, 3.696347375624837*^9}}],

Cell["\<\
In case of trouble, one or more of these flags can be enabled to trace the \
flow of events. The output can be prodigious so try to only enable the ones \
you might need. This capability is coded. It is not the built-in Mathematica \
debug structure.\
\>", "Text",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, 
   3.691170901550271*^9, 3.691170931919511*^9, {3.691172262541596*^9, 
   3.691172280579797*^9}, {3.691184231285781*^9, 3.691184255799389*^9}, {
   3.6911843009750767`*^9, 3.691184303414172*^9}, {3.6911850616919937`*^9, 
   3.691185191375659*^9}, {3.691690494441842*^9, 3.691690522462504*^9}, 
   3.6918635764610147`*^9, 3.691864051439683*^9, {3.69186519347125*^9, 
   3.691865194446713*^9}, {3.691865255606691*^9, 3.691865265057385*^9}, {
   3.693262406806333*^9, 3.6932624411315813`*^9}, {3.693349940534522*^9, 
   3.693349945991884*^9}, {3.69582203448588*^9, 3.695822038756646*^9}, {
   3.696094353329114*^9, 3.6960943681836653`*^9}, 3.69619893534732*^9, 
   3.696347925760697*^9, {3.6963479684663*^9, 3.696348049583315*^9}, {
   3.6963480813150787`*^9, 3.696348182159792*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"debug1", ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Initialization", ",", " ", 
    RowBox[{
    "both", " ", "section", " ", "3", " ", "and", " ", "section", " ", 
     "5"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug2", ";"}], "  ", 
  RowBox[{"(*", " ", "MaxDimG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug3", ";"}], "  ", 
  RowBox[{"(*", " ", "GeomPrdtG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug4", ";"}], "  ", 
  RowBox[{"(*", " ", "GradePpieceG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug5", ";"}], "  ", 
  RowBox[{"(*", " ", "ClifFormatG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug6", ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "WedgePrdtG", ",", " ", "DotPrdtG", ",", " ", "LeftContractionG", ",", " ",
     "RightContractionG"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug7", ";"}], "  ", 
  RowBox[{"(*", " ", "ReverseG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug8", ";"}], "  ", 
  RowBox[{"(*", " ", "ScalarPrdtG", " ", "*)"}], " "}], "\n", 
 RowBox[{
  RowBox[{"debug9", ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"FreeTermG", ",", " ", "ConstantG", ",", " ", "ClifToListG"}], " ",
    "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, 
   3.691170901550271*^9, 3.691170931919511*^9, {3.691172262541596*^9, 
   3.691172280579797*^9}, {3.691184231285781*^9, 3.691184255799389*^9}, {
   3.6911843009750767`*^9, 3.691184303414172*^9}, {3.6911850616919937`*^9, 
   3.691185191375659*^9}, {3.691690494441842*^9, 3.691690522462504*^9}, 
   3.6918635764610147`*^9, 3.691864051439683*^9, {3.69186519347125*^9, 
   3.691865194446713*^9}, {3.691865255606691*^9, 3.691865265057385*^9}, {
   3.693262406806333*^9, 3.6932624411315813`*^9}, {3.693349940534522*^9, 
   3.693349945991884*^9}, {3.69582203448588*^9, 3.695822038756646*^9}, {
   3.696094353329114*^9, 3.6960943681836653`*^9}, 3.69619893534732*^9, 
   3.696347925760697*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Initialization Variables", "Subchapter",
 CellChangeTimes->{{3.691170942724934*^9, 3.691170953344343*^9}, {
  3.691171121385624*^9, 3.691171159839477*^9}}],

Cell[TextData[{
 StyleBox["algebraType",
  FontColor->RGBColor[0.5, 0, 0.5]],
 "\n  \t1 Clifford algebra\n  \t2 Grassmann algebra  i.e., ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    SubscriptBox["e", "k"], "2"], "=", " ", "0"}]]],
 " for all k\n The following are only relevant for Clifford algebra\n \t",
 StyleBox["signatureType",
  FontColor->RGBColor[0.5, 0, 0.5]],
 "\n \t\t-1 Physicists  + - - -   i.e., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["e", "k"], "2"], "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "1"}], " ", "if", " ", "k"}], " ", "\[LessEqual]", " ", 
      "numTimelike"}]}], ";", " ", 
    RowBox[{
     RowBox[{"else", " ", 
      SuperscriptBox[
       SubscriptBox["e", "k"], "2"]}], " ", "=", " ", 
     RowBox[{"-", "1"}]}]}], TraditionalForm]]],
 "\n \t\t+1 Mathematicians  - + + +   i.e., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["e", "k"], "2"], "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], " ", "if", " ", "k"}], " ", "\[LessEqual]", " ", 
      "numTimelike"}]}], ";", " ", 
    RowBox[{
     RowBox[{"else", " ", 
      SuperscriptBox[
       SubscriptBox["e", "k"], "2"]}], " ", "=", " ", 
     RowBox[{"+", "1"}]}]}], TraditionalForm]]],
 "\n \t",
 StyleBox["numTimelike",
  FontColor->RGBColor[0.5, 0, 0.5]],
 "\n \t\t0 Space\n \t\t1 Space-time\n 2+ More than 1 time dimension, allowed \
for those who wish to explore this\n\n These are global symbols (i.e., \
context Global`) so they are not listed in the Usage section (i.e., context \
GeomAlg2017Feb`)\n If user forgets to initialize these variables, a warning \
will be issued and defaults will be implemented:\n \tDefaults are: Clifford, \
Mathematician ++++, Space\n\n Best way to initialize is by using the palette, \
but these variables can also be set within a notebook\n Caution: If user has \
set Notebook to use a unique context, then only execute initialization of \
these variables after package has \n      been invoked with Needs statement \
so that their context is already assigned to Global`"
}], "Text",
 CellChangeTimes->{{3.691170942724934*^9, 3.691170953344343*^9}, 
   3.691171175156817*^9, {3.691171213138802*^9, 3.691171252256806*^9}, {
   3.6911712945730667`*^9, 3.691171319391305*^9}, {3.69117186351514*^9, 
   3.691171869997806*^9}, {3.691192290180006*^9, 3.691192292331027*^9}, {
   3.691193332053104*^9, 3.691193333887773*^9}, 3.691193373353045*^9, {
   3.691193411235981*^9, 3.6911934461324387`*^9}, {3.691193481872799*^9, 
   3.691193598312434*^9}, {3.691967304104115*^9, 3.691967369824239*^9}, {
   3.692446763319111*^9, 3.692446768656983*^9}, {3.692446874407032*^9, 
   3.692446910164687*^9}, {3.69244699587866*^9, 3.6924470061464*^9}, 
   3.695744368840377*^9, {3.696347429927765*^9, 3.696347465114717*^9}, {
   3.6963475144814177`*^9, 3.6963478672083693`*^9}, {3.69679078132957*^9, 
   3.696790798090218*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Usage (and only one Warning Statement)", "Subchapter",
 CellChangeTimes->{{3.691170942724934*^9, 3.691170953344343*^9}, {
  3.6911912013084583`*^9, 3.6911912146556377`*^9}, {3.696347896347292*^9, 
  3.6963478971152267`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"e", ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "MUST", " ", "pass", " ", "e", " ", "as", " ", "a", " ", "global", " ", 
      RowBox[{"variable", ".", " ", "This"}], " ", "causes", " ", 
      RowBox[{"Context", "[", "e", "]"}]}], " ", "=", " ", 
     RowBox[{
     "GeomAlg2017Feb`", " ", "in", " ", "any", " ", "user", " ", "Notebook", 
      " ", "\n", "\t\t", "that", " ", "invokes", " ", "this", " ", 
      "package"}]}], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", "thus", " ", "operations", " ", "like", " ", 
      RowBox[{"Subscript", "[", 
       RowBox[{"e", ",", " ", "u_"}], "]"}]}], "\[Rule]", 
     RowBox[{"1", " ", "work", " ", "correctly"}]}]}], " ", "*)"}], "\n", 
  "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BladeG", "::", "usage"}], "=", 
   "\"\<BladeG[p,q,...,r] generates the blade \!\(\*SubscriptBox[\(e\), \
\(p\)]\)\!\(\*SubscriptBox[\(e\), \(q\)]\)...\!\(\*SubscriptBox[\(e\), \(r\)]\
\)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BiVectorG", "::", "usage"}], "=", 
   "\"\<BiVectorG[a,n] generates an n-dimensional bivector\>\""}], 
  ";"}], "\n", 
 RowBox[{"ClifFormatG", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifToListG", "::", "usage"}], "=", 
   "\"\<ClifToListG[x] converts multivector x into a list of its components\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CollectG", "::", "usage"}], "=", 
   "\"\<CollectG[x] groups the terms of multivector x by blades \
\!\(\*SubscriptBox[\(e\), \(i\)]\)\!\(\*SubscriptBox[\(e\), \(j ... \)]\)\!\(\
\*SubscriptBox[\(e\), \(k\)]\). It also reduces any \
\!\(\*SuperscriptBox[SubscriptBox[\(e\), \(i\)], \(2\)]\) terms that might be \
present\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ComplexG", "::", "usage"}], "=", 
   "\"\<ComplexG[a,b] generates a complex number a + b i, where i is the \
dimension 2 PseudoScalar\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstantG", "::", "usage"}], "=", 
   "\"\<ConstantG[x] picks out the constant term(s) of multivector x\>\""}], 
  ";"}], "\n", 
 RowBox[{"ConstantToListZeroG", ";"}], "\n", 
 RowBox[{"ConstantToZeroG", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DotPrdtG", "::", "usage"}], "=", 
   "\"\<DotPrdtG[x,y,...,z] computes dot product of several \
multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EijTermG", "::", "usage"}], "=", 
   "\"\<EijTermG[x,\!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\)] \
returns the components of x, if any, having \!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\) \
as a factor\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eSubscriptListG", "::", "usage"}], "=", 
   "\"\<eSubscriptListG[x] computes a list of terms \!\(\*SubscriptBox[\(e\), \
\(i, j,  ... \)]\) corresponding to the components of multivector x\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvenClifG", "::", "usage"}], "=", 
   "\"\<EvenClifG[b,n] generates an n-dimensional multivector having only \
even-grade terms\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpandG", "::", "usage"}], "=", 
   "\"\<ExpandG[x] expands multivector x, including reduction of possible \
lingering \!\(\*SuperscriptBox[SubscriptBox[\(e\), \(i\)], \(2\)]\) \
terms\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FreeTermG", "::", "usage"}], "=", 
   "\"\<FreeTermG[x,c] computes clif, x, minus constant term, c\>\""}], 
  ";"}], "\n", 
 RowBox[{
  StyleBox["GeomPrdtBladeG",
   FontWeight->"Plain"], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "::", "usage"}], "=", 
   "\"\<GeomPrdtG[x,y,...,z] computes the geometric product of several \
multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GormG", "::", "usage"}], "=", 
   "\"\<GormG[x] computes the gorm, \!\(\*SubscriptBox[\(x\), \(Reverse\)]\) \
\[CenterDot] x, of multivector x\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GradeListG", "::", "usage"}], "=", 
   "\"\<GradeListG[x] generates a list of grades matching the components of \
multivector x\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GradePTermG", "::", "usage"}], "=", 
   "\"\<GradePTerm[x,p] finds the components of multivector x that are of \
grade p\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HodgeDualG", "::", "usage"}], "=", 
   "\"\<HodgeDualG[x,n] generates the Hodge Dual, x \[SmallCircle] i, of \
multivector x, where i is the pseudovector of dimenstion n\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HodgeDual2G", "::", "usage"}], "=", 
   "\"\<HodgeDual2G[x,n] generates an alternative Hodge Dual, x \
\[SmallCircle] \!\(\*SuperscriptBox[\(i\), \(-1\)]\), of multivector x, where \
i is the pseudovector of dimenstion n\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InitializeG", "::", "usage"}], "=", 
   "\"\<InitializeG[x] reduces any \!\(\*SuperscriptBox[SubscriptBox[\(e\), \
\(i\)], \(2\)]\) terms in multivector x according to user's initialization \
scheme\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InitializeG", "::", "warning"}], "=", 
   "\"\<Warning: Implementing initialization defaults. Please use Palette to \
initialize your Geometric Algebra\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseG", "::", "usage"}], "=", 
   "\"\<InverseG[x] computes the inverse, if it exists, of multivector \
x\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LeftContractionG", "::", "usage"}], "=", 
   "\"\<LeftContractionG[x,y,...,z] computes the left contraction of several \
multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ListToClifG", "::", "usage"}], "=", 
   "\"\<ListToclifG[xList] converts a list into its corresponding multivector\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxDimG", "::", "usage"}], "=", 
   "\"\<MaxDimG[x] finds the maximum dimension among blades in the \
multivector\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nClifG", "::", "usage"}], "=", 
   "\"\<nClifG[a,n] generates a general symbolic multivector of dimension n \
with coefficients \!\(\*SubscriptBox[\(a\), \(i, j,  ... \)]\) \>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NormG", "::", "usage"}], "=", 
   "\"\<Norm[x] generates the norm of a multivector x when it exists\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nVectorG", "::", "usage"}], "=", 
   "\"\<nVectorG[a,n] generates a general (1-dimensional) vector of dimension \
n with coefficients \!\(\*SubscriptBox[\(a\), \(i\)]\)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pBladeG", "::", "usage"}], "=", 
   "\"\<pBladeG[a,p,n] outputs a general blade of grade p in n-space having \
coefficients \!\(\*SubscriptBox[\(a\), \(i, j,  ... \)]\)\>\""}], ";"}], "\n", 
 RowBox[{"PrdtG", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PseudoScalarG", "::", "usage"}], "=", 
   "\"\<PseudoScalarG[n] generates the dimension n positive unit pseudoscalar\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuaternionG", "::", "usage"}], "=", 
   "\"\<QuaternionG[a,b,c,d\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReverseG", "::", "usage"}], "=", 
   "\"\<ReverseG[x] generates the reverse of multivector x. That is, it \
changes signs of even blades of grade > 0\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RightContractionG", "::", "usage"}], "=", 
   "\"\<RightContractionG[x,y,...,z] computes the right contraction of \
several multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RotorG", "::", "usage"}], "=", 
   "\"\<RotorG[m,n,\[Theta]} generates a rotor that spins the m n-axis \
counter-clockwise by \[Theta]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarPrdtG", "::", "usage"}], "=", 
   "\"\<ScalarPrdtG[x,y,...,z] computes the scalar product of several \
multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SignatureG", "::", "usage"}], "=", 
   "\"\<SignatureG[list] computes the signature of a list; i.e., \
\[PlusMinus]1 depending upon whether the number of adjacent transpositions to \
put the list in order is even or odd. SignatureG works the same as \
Mathematica's Signature function except that it also calculates signatures \
even if there are repeating elements in the list. While SignatureG is more \
general in nature than GA, it is used here to greatly simplify the \
antisymmetrization process required for the geometric product.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SubscriptListG", "::", "usage"}], "=", 
   "\"\<SubscriptListG[x] generates a list of subscripts of the terms in \
multivector x\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WedgePrdtG", "::", "usage"}], "=", 
   "\"\<WedgeProductG[x,y,...,z] computes the wedge product of multivectors \
x, y, ..., z\>\""}], ";"}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, 
   3.691170901550271*^9, 3.691170931919511*^9, 3.691191012184572*^9, {
   3.691191574857904*^9, 3.691191598506023*^9}, {3.6913488450185633`*^9, 
   3.691348845609715*^9}, {3.692447079216297*^9, 3.6924471231196547`*^9}, {
   3.692466346018285*^9, 3.69246635158994*^9}, {3.6924792339877777`*^9, 
   3.692479235697345*^9}, 3.6924918220692053`*^9, {3.6925515108435583`*^9, 
   3.6925515144652643`*^9}, 3.6925523727379313`*^9, {3.6925645231271973`*^9, 
   3.69256452496769*^9}, {3.6931799417333603`*^9, 3.6931800036341143`*^9}, {
   3.693180153515903*^9, 3.693180154513607*^9}, {3.693351095256298*^9, 
   3.693351177291225*^9}, {3.693351230299827*^9, 3.69335123186662*^9}, 
   3.695744339495956*^9, {3.6958205679318438`*^9, 3.695820664898106*^9}, 
   3.695849976726709*^9, 3.695850029484832*^9, {3.696198925565792*^9, 
   3.696198941990065*^9}, {3.696206195752206*^9, 3.6962062231960707`*^9}, {
   3.6962062535994368`*^9, 3.696206255205287*^9}, {3.696206716861391*^9, 
   3.6962067592672873`*^9}, {3.696274297025106*^9, 3.696274400997569*^9}, {
   3.696615976560133*^9, 3.696616030029272*^9}, 3.696616202136299*^9, {
   3.696617418434855*^9, 3.696617428388686*^9}, {3.6967205066222973`*^9, 
   3.6967206236157503`*^9}, {3.696883668136239*^9, 3.6968837779231567`*^9}, {
   3.696885267802205*^9, 3.6968852717601213`*^9}, {3.696885305355955*^9, 
   3.696885305875108*^9}, {3.696888961924432*^9, 3.696888988624432*^9}, {
   3.696894818104793*^9, 3.6968948689886923`*^9}, {3.696894907085924*^9, 
   3.696894908355514*^9}, {3.696967872606762*^9, 3.696967878366436*^9}, {
   3.696967938109671*^9, 3.696967942692211*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2 Begin Private (i.e., define functions)", "Chapter",
 CellChangeTimes->{{3.6911912574424143`*^9, 3.691191285333445*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, 
   3.691170901550271*^9, 3.691170931919511*^9, 3.691191012184572*^9, {
   3.691346372215829*^9, 3.691346379937498*^9}, {3.69134830962848*^9, 
   3.691348380261441*^9}, {3.691618877779533*^9, 3.691618892258176*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["3 Operator Symbols", "Chapter",
 CellChangeTimes->{{3.691072646164959*^9, 3.691072653027358*^9}, 
   3.691191316677023*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SmallCircle", ":=", "GeomPrdtG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "clifA", " ", "Esc", " ", "sc", " ", "Esc", " ", 
    RowBox[{"clifB", ":", " ", 
     RowBox[{"clifA", " ", "\[SmallCircle]", " ", "clifB"}]}]}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Wedge", ":=", "WedgePrdtG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "clifA", " ", 
    RowBox[{"Esc", " ", "^", " ", "Esc"}], " ", 
    RowBox[{"clifB", ":", " ", 
     RowBox[{"clifA", " ", "\[Wedge]", " ", "clifB"}]}]}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"CenterDot", ":=", "DotPrdtG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", 
    RowBox[{"Esc", " ", ".", " ", 
     RowBox[{"Esc", ":", " ", 
      RowBox[{"clifA", " ", "\[CenterDot]", " ", "clifB"}]}]}]}], "  ", 
   "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{" ", 
       RowBox[{
        RowBox[{"In", " ", "Mathematica"}], ",", " ", 
        RowBox[{
         RowBox[{"can", "'"}], "t", " ", "use", " ", "Right", " ", "Floor"}], 
        ","}], "  ", "\[RightFloor]"}], "  ", "as", " ", "a", " ", "binary", 
      " ", "operator", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"i", ".", "e", "."}], ",", " ", "infix"}], ")"}], ".", " ", 
       "So"}], " ", "use"}], " ", "\[SquareSuperset]"}], ",", " ", 
    "instead"}], "   ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"CircleDot", ":=", "ScalarPrdtG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "Esc", " ", 
    RowBox[{"c", ".", " ", 
     RowBox[{"Esc", ":", " ", 
      RowBox[{"clifA", " ", "\[CircleDot]", " ", "clifB"}]}]}]}], "  ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"SquareSuperset", ":=", "LeftContractionG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "Esc", " ", "slc", " ", "Esc"}], "  ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"SquareSubset", ":=", "RightContractionG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "Esc", " ", "src", " ", "Esc"}], "  ", "*)"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Example", ":", " ", 
    RowBox[{"wedge", " ", "product", " ", "of", " ", "3", " ", "vectors"}], 
    ":", " ", 
    RowBox[{"vector1", " ", "^", " ", 
     RowBox[{"vector2", " ", "^", " ", "vector3"}]}]}], "  ", "*)"}]}], "\n", 

 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Future", ":", " ", 
    RowBox[{"Add", " ", "unary", " ", "operators", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", ".", "e", "."}], ",", " ", "postfix"}], ")"}], " ", "\n", 
     "\t\t", "Consider", " ", "SuperStar", " ", 
     RowBox[{"(", 
      RowBox[{
      "unfortunately", " ", "considered", " ", "a", " ", "power", " ", "I", 
       " ", "believe"}], ")"}], " ", "or", " ", "\n", "\t\t", "OverHat", " ", 
     "for", " ", "Hodge", " ", "Dual", " ", "and", " ", "OverTilde", " ", 
     "for", " ", "Reverse"}]}], "  ", "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691079943689949*^9, {3.69108238077335*^9, 
   3.691082387422855*^9}, 3.691347313509397*^9, {3.692447192883754*^9, 
   3.692447224436717*^9}, {3.692447254520227*^9, 3.6924473080464687`*^9}, {
   3.693067885965362*^9, 3.69306795126612*^9}, {3.693068349184244*^9, 
   3.6930683506472*^9}, {3.693068394267212*^9, 3.693068396161887*^9}, {
   3.693070410088418*^9, 3.6930704714222183`*^9}, {3.693070505912455*^9, 
   3.693070569650454*^9}, {3.693070603813429*^9, 3.693070606477264*^9}, 
   3.693070637926775*^9, {3.693070681375293*^9, 3.693070738287313*^9}, {
   3.6930708066321287`*^9, 3.693070815357985*^9}, {3.6930708724412727`*^9, 
   3.693070944492628*^9}, {3.693079943932272*^9, 3.693080041128208*^9}, 
   3.693093298618628*^9, 3.693093657164068*^9, {3.6930950873556547`*^9, 
   3.6930950885425873`*^9}, {3.6933512808115587`*^9, 
   3.6933513326995707`*^9}, {3.693351363186131*^9, 3.693351387762291*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "4 Typing Aids: Multivector Generators\n\t",
 StyleBox["Vectors, Blades, Multivectors, Rotors, \n\t   Complex Numbers, \
Quaternions", "Subchapter"]
}], "Chapter",
 CellChangeTimes->{{3.691073654834609*^9, 3.691073665779769*^9}, {
  3.691079848496414*^9, 3.691079895746023*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ModifyContextPathG", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"len", ",", "ContextPath"}], "}"}], ",", 
     RowBox[{
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", "$ContextPath", "]"}]}], ";", "\n", 
      RowBox[{"ContextPath", "=", 
       RowBox[{"Permute", "[", 
        RowBox[{"$ContextPath", ",", 
         RowBox[{"Cycles", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "len"}], "}"}], "}"}], "]"}]}], "]"}]}]}]}], 
    "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Move", " ", "pkg", " ", "context", " ", "to", " ", "end", " ", "of", " ", 
    "path"}], " ", "*)"}], "\n", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Together", " ", "the", " ", "BladeG", " ", "efinitions", " ", "below", 
     " ", "enable", " ", "expressions", " ", "like", " ", 
     RowBox[{"Blade", "[", 
      RowBox[{"u", ",", "v", ",", "w", ",", "x"}], "]"}]}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["e", "u"], 
     SubscriptBox["e", "v"], 
     SubscriptBox["e", "w"], 
     SubscriptBox["e", "x"]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"BladeG", "[", 
   SubscriptBox["e", "u_"], "]"}], ":=", 
  SubscriptBox["e", "u"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BladeG", "[", "u_", "]"}], ":=", 
   SubscriptBox["e", "u"]}], "  \t\t\t\t\t "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BladeG", "[", 
    RowBox[{
     SubscriptBox["e", "u_"], ",", "v_"}], "]"}], ":=", 
   RowBox[{
    SubscriptBox["e", "u"], 
    RowBox[{"BladeG", "[", 
     SubscriptBox["e", "v"], "]"}]}]}], "  ", "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "These", " ", "blades", " ", "are", " ", "simple", " ", "products", " ", 
     "of", " ", "basis", " ", "vectors"}], ",", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["e", "i"], ".", "\n", "\t", "In"}], " ", "general"}], ",", 
    " ", 
    RowBox[{
    "blades", " ", "can", " ", "be", " ", "from", " ", "any", " ", 
     "independent", " ", "vectors"}], ",", " ", 
    RowBox[{
    "but", " ", "basis", " ", "elements", " ", "are", " ", "convenient"}]}], 
   "  ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BladeG", "[", 
    RowBox[{"u_", ",", "v__"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"BladeG", "[", "u", "]"}], 
    RowBox[{"BladeG", "[", "v", "]"}]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Ex", ":", " ", 
     RowBox[{"BladeG", "[", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}]}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["e", "1"], 
     SubscriptBox["e", "2"], 
     SubscriptBox["e", "3"], 
     SubscriptBox["e", "4"]}]}], "  ", "*)"}], "\n", "\n", "\t", 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "BladeG", " ", "Module"}], "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"pBladeG", "[", 
   RowBox[{"c_", ",", "0", ",", "n_"}], "]"}], ":=", 
  SubscriptBox["c", "0"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pBladeG", "[", 
    RowBox[{"c_", ",", "p_", ",", "n_"}], "]"}], ":=", "   ", "\n", "\t", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Note", ":", " ", 
      RowBox[{
       RowBox[{
       "this", " ", "is", " ", "a", " ", "generic", " ", "homogeneous", " ", 
        "clif", " ", "of", " ", "grade", " ", "p", " ", "in", " ", "n"}], "-", 
       RowBox[{"Space", ".", " ", "\n", "\t\t", "Ex"}]}], ":", " ", 
      RowBox[{"pBladeG", "[", 
       RowBox[{"a", ",", "2", ",", "4"}], "]"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["a", 
        RowBox[{"1", ",", "2"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "3"]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["a", 
        RowBox[{"1", ",", "4"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["a", 
        RowBox[{"2", ",", "3"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["a", 
        RowBox[{"2", ",", "4"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["a", 
        RowBox[{"3", ",", "4"}]]}]}]}], " ", "*)"}], "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pBlade", ",", "tupleList", ",", "cList", ",", "eList"}], "}"}],
      ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
        RowBox[{"dv_", "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"dv", ",", "c"}], "]"}]}]}], "]"}], ";", 
      RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Clear", " ", "all", " ", "c"}], "-", 
        RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", 
      "\t\t", "\n", "\t\t", 
      RowBox[{"pBlade", "=", "0"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[LessEqual]", "n"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"tupleList", "=", 
          RowBox[{"Subsets", "[", 
           RowBox[{
            RowBox[{"Range", "[", "n", "]"}], ",", 
            RowBox[{"{", "p", "}"}]}], "]"}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "  ", "*)"}], "\n", 
         "\t\t\t", 
         RowBox[{"cList", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"c", ",", "##"}], "]"}], "&"}], "@@@", 
           RowBox[{"Subsets", "[", 
            RowBox[{
             RowBox[{"Range", "[", "n", "]"}], ",", 
             RowBox[{"{", "p", "}"}]}], "]"}]}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["c", 
             RowBox[{"1", ",", "2"}]], ",", 
            SubscriptBox["c", 
             RowBox[{"1", ",", "3"}]], ",", 
            SubscriptBox["c", 
             RowBox[{"2", ",", "3"}]]}], "}"}], "  ", "*)"}], "\n", "\t\t\t", 
         
         RowBox[{"eList", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Product", "[", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"e", ",", "i"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"{", "##", "}"}]}], "}"}]}], "]"}], "&"}], "@@@", 
           RowBox[{"Subsets", "[", 
            RowBox[{
             RowBox[{"Range", "[", "n", "]"}], ",", 
             RowBox[{"{", "p", "}"}]}], "]"}]}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["e", "1"], 
             SubscriptBox["e", "2"]}], ",", " ", 
            RowBox[{
             SubscriptBox["e", "1"], 
             SubscriptBox["e", "3"]}], ",", " ", 
            RowBox[{
             SubscriptBox["e", "2"], 
             SubscriptBox["e", "3"]}]}], "}"}], "   ", "*)"}], "\n", "\t\t\t", 
         RowBox[{"pBlade", "=", 
          RowBox[{"cList", ".", "eList"}]}]}], "\n", "\t\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"], 
           SubscriptBox["c", 
            RowBox[{"1", ",", "2", " "}]]}], "+", " ", 
          RowBox[{
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "3"], 
           SubscriptBox["c", 
            RowBox[{"1", ",", "3"}]]}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["e", "2"], 
           SubscriptBox["e", "3"], 
           SubscriptBox["c", 
            RowBox[{"2", ",", "3"}]]}]}], "  ", "*)"}], "\n", "\t\t", ",", 
        "\n", "\t\t\t", 
        RowBox[{
        "Print", "[", "\"\<Error: pBladeG requires p \[LessEqual] n.\>\"", 
         "]"}]}], "\n", "\t\t", "]"}], ";", "\n", "\t\t", "pBlade"}]}], " ", 
    "\n", "\t", "]"}]}], "       ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "pBladeG", " ", "Module"}], " ", "*)"}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"EvenClifG", "[", 
   RowBox[{"b_", ",", "0"}], "]"}], ":=", 
  SubscriptBox["c", "0"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvenClifG", "[", 
    RowBox[{"b_", ",", "1"}], "]"}], ":=", 
   SubscriptBox["c", "0"]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvenClifG", "[", 
    RowBox[{"b_", ",", "n_"}], "]"}], ":=", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Create", " ", "an", " ", "n"}], "-", 
      RowBox[{"dimensional", " ", "Clif", " ", "using", " ", "user"}], "-", 
      RowBox[{"provided", " ", "base", " ", "\"\<c\>\"", "   ", "\n", 
       RowBox[{"INPUTS", ":", "\n", "\t", "b"}]}]}], " ", "\[Dash]", " ", 
     RowBox[{
     "Coefficient", " ", "letter", " ", "to", " ", "use", " ", "in", " ", 
      "Clif", "\n", "\t", "n"}], " ", "\[Dash]", " ", 
     RowBox[{"Number", " ", "of", " ", "desired", " ", "dimension", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", ".", "e", "."}], ",", " ", 
        RowBox[{"the", " ", "maximum", " ", "grade"}]}], ")"}], " ", "of", 
      " ", "the", " ", "clif", "\n", "\n", 
      RowBox[{"PROCESS", ":", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "Cases", " ", "command", " ", "clears", " ", "out", " ", "any", " ",
            "possible", " ", "values", " ", "or", " ", "definition", " ", 
           "for", " ", "the", " ", "base", " ", "b", "\n", "\t", "eArray", 
           " ", "generates", " ", "a", " ", "list", " ", "of", " ", "all", 
           " ", "possible", " ", 
           SubscriptBox["e", "i"], 
           SubscriptBox["e", "j"]}], "..."}], " ", "products", " ", "of", " ",
          "grade"}], " ", "\[LessEqual]", " ", 
        RowBox[{"n", "\n", "\t\t", "Example"}]}], ":", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", 
          SubscriptBox["e", "1"], ",", " ", 
          SubscriptBox["e", "2"], ",", " ", 
          RowBox[{
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"]}]}], "}"}], "\n", "\t\t", "The", " ", 
        "subset", " ", "formula", " ", "fails", " ", "for", " ", "grades", 
        " ", "0", " ", "and", " ", "1", " ", "so", " ", "those", " ", "are", 
        " ", "handled", " ", "by", " ", "brute", " ", "force", "\n", "\t", 
        "bList", " ", "generates", " ", "a", " ", "matching", " ", "of", " ", 
        
        SubscriptBox["b", 
         RowBox[{"i", ",", "j", ",", "..."}]], 
        RowBox[{"coefficients", ".", " ", 
         RowBox[{"Example", ":", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["b", "0"], ",", " ", 
             SubscriptBox["b", "1"], ",", " ", 
             SubscriptBox["b", "2"], ",", " ", 
             SubscriptBox["b", 
              RowBox[{"1", ",", "2"}]]}], "}"}], "\n", "\t", "Since", " ", 
           "the", " ", "constant", " ", 
           SubscriptBox["b", "0"], " ", "does", " ", "not", " ", "change", 
           " ", "sign"}]}]}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"we", " ", "modify", " ", "it", " ", "to", " ", "be", " ", 
       SubscriptBox["b", 
        RowBox[{"0", ",", "0"}]], " ", "in", " ", "bLis1", "\n", "\t\t", 
       RowBox[{"Example", ":", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["b", 
            RowBox[{"0", ",", "0"}]], ",", " ", 
           SubscriptBox["b", "1"], ",", " ", 
           SubscriptBox["b", "2"], ",", " ", 
           SubscriptBox["b", 
            RowBox[{"1", ",", "2"}]]}], "}"}], "\n", "\t", "Then", " ", "we", 
         " ", "make", " ", "a", " ", "list", " ", "of", " ", "the", " ", 
         "lengths", " ", "of", " ", "terms", " ", 
         SubscriptBox["b", 
          RowBox[{"i", ",", "j", ",", "..."}]], " ", "in", " ", "bList", " ", 
         "1.", " ", "Example"}], ":", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", " ", "2", ",", " ", "2", ",", " ", "3"}], "}"}], 
         "\n", "\t", "We", " ", "replace", " ", "the", " ", "odd", " ", 
         "lengths", " ", 
         RowBox[{"(", 
          RowBox[{"like", " ", 
           SubscriptBox["b", 
            RowBox[{"1", ",", "2"}]]}], ")"}], " ", "by", " ", "1", " ", 
         "and", " ", "the", " ", "even", " ", "lengths", " ", 
         RowBox[{"(", 
          RowBox[{"like", " ", 
           SubscriptBox["b", "3"]}], ")"}], " ", "by", " ", "0", "\n", "\t\t",
          "We", " ", "name", " ", "this", " ", "list", " ", 
         RowBox[{"evenList", ".", " ", 
          RowBox[{"Example", ":", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], 
             "}"}], "\n", "\t", "The", " ", "desired", " ", "clif", " ", "is",
             " ", "the", " ", 
            StyleBox["dot",
             FontSlant->"Italic",
             FontVariations->{"Underline"->True}], 
            StyleBox[" ",
             FontSlant->"Italic",
             FontVariations->{"Underline"->True}], 
            StyleBox["product",
             FontSlant->"Italic",
             FontVariations->{"Underline"->True}], " ", "of", " ", "evenList",
             " ", "with", " ", "the", " ", "result", " ", "of", " ", "the", 
            " ", 
            StyleBox["product",
             FontSlant->"Italic",
             FontVariations->{"Underline"->True}], 
            StyleBox[" ",
             FontVariations->{"Underline"->True}], "of", " ", "\n", "\t\t", 
            "bList", " ", "and", " ", 
            RowBox[{"eArray", ".", " ", "\n", "\t\t", "Example"}]}], ":", " ",
            "\n", "\t\t\t  ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], 
             "}"}], " ", ".", " ", 
            RowBox[{"[", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["b", "0"], ",", " ", 
                SubscriptBox["b", "1"], ",", " ", 
                SubscriptBox["b", "2"], ",", " ", 
                SubscriptBox["b", 
                 RowBox[{"1", ",", "2"}]]}], "}"}], " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", " ", 
                SubscriptBox["e", "1"], ",", " ", 
                SubscriptBox["e", "2"], ",", " ", 
                RowBox[{
                 SubscriptBox["e", "1"], 
                 SubscriptBox["e", "2"]}]}], "}"}]}], " ", "]"}]}]}]}]}]}]}], 
      " ", "\n", "\t\t\t", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], "}"}], 
        " ", ".", " ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["b", "0"], ",", " ", 
          RowBox[{
           SubscriptBox["b", "1"], 
           SubscriptBox["e", "1"]}], ",", " ", 
          RowBox[{
           SubscriptBox["b", "2"], 
           SubscriptBox["e", "2"]}], ",", " ", 
          RowBox[{
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"], 
           SubscriptBox["b", 
            RowBox[{"1", ",", "2"}]]}]}], "}"}]}], "\n", "\t\t\t", "=", " ", 
       RowBox[{
        SubscriptBox["b", "0"], " ", "+", " ", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["b", 
          RowBox[{"1", ",", "2"}]], "\n", "\n", 
         RowBox[{"OUTPUT", ":", "\n", "\t", 
          RowBox[{
           RowBox[{"An", " ", "array", " ", "of", " ", "even"}], "-", 
           RowBox[{"grade", " ", "members"}]}]}]}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"like", " ", "\n", "\t\t", 
       SubscriptBox["b", "0"]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["b", 
        RowBox[{"1", ",", "2"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["b", 
        RowBox[{"1", ",", "3", " "}]]}], "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["b", 
        RowBox[{"1", ",", "4"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["b", 
        RowBox[{"2", ",", "3"}]]}], "  ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["b", 
        RowBox[{"2", ",", "4", " "}]]}], "+", " ", 
      RowBox[{
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["b", 
        RowBox[{"3", ",", "4"}]]}], " ", "+", "  ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["b", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4"}]]}]}]}], "  ", "*)"}], 
   "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "bList", ",", "eArray", ",", "bList1", ",", "evenList", ",", 
       "evenClif"}], "}"}], ",", "\n", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
        RowBox[{"dv_", "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"dv", ",", "b"}], "]"}]}]}], "]"}], ";", " ", "\n", "\t\t", 
      
      RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Clear", " ", "all", " ", "b"}], "-", 
        RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", "\t", 
      "\n", "\t\t", 
      RowBox[{"eArray", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Product]", "i", "n"], 
          SubscriptBox["e", "i"]}], ",", " ", "n"}], "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"List", " ", "of", " ", "all", " ", 
          SubscriptBox["e", "i"], 
          SubscriptBox["e", "j"]}], "..."}], " ", "products"}], " ", "*)"}], 
      "\n", "\t\t", 
      RowBox[{"bList", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["b", "0"], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"b", ",", "##"}], "]"}], "&"}], "@@@", 
           RowBox[{"Rest", "[", 
            RowBox[{"Subsets", "[", 
             RowBox[{"Range", "[", "n", "]"}], "]"}], "]"}]}]}], "]"}], 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"bList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
         SubscriptBox["b", "0"]}], ",", 
        RowBox[{"bList1", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"bList", ",", 
           RowBox[{"1", "\[Rule]", 
            SubscriptBox["b", 
             RowBox[{"0", ",", "0"}]]}]}], "]"}]}], ",", 
        RowBox[{"bList1", "=", "bList"}]}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"evenList", "=", 
       RowBox[{
        RowBox[{"Length", "/@", "bList1"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"u_", "/;", 
            RowBox[{"OddQ", "[", "u", "]"}]}], "\[Rule]", "1"}], ",", 
          RowBox[{
           RowBox[{"u_", "/;", 
            RowBox[{"EvenQ", "[", "u", "]"}]}], "\[Rule]", "0"}]}], "}"}]}]}],
       ";", "\t", "\n", "\t\t", 
      RowBox[{"evenClif", "=", 
       RowBox[{"evenList", ".", 
        RowBox[{"(", 
         RowBox[{"bList", " ", "eArray"}], ")"}]}]}], ";", "\n", "\t\t", 
      "evenClif"}]}], "\n", "\t", "]"}]}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "EvenClifG", " ", "Module"}], "  ", "*)"}], 
  "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"nClifG", "[", 
   RowBox[{"c_", ",", "0"}], "]"}], ":=", 
  SubscriptBox["c", "0"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nClifG", "[", 
    RowBox[{"c_", ",", "1"}], "]"}], ":=", 
   RowBox[{
    SubscriptBox["c", "0"], "+", 
    RowBox[{
     SubscriptBox["c", "1"], 
     SubscriptBox["e", "1"]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nClifG", "[", 
    RowBox[{"c_", ",", "n_"}], "]"}], ":=", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Create", " ", "an", " ", "n"}], "-", 
      RowBox[{"dimensional", " ", "Clif", " ", "using", " ", "user"}], "-", 
      RowBox[{"provided", " ", "base", " ", "\"\<c\>\"", "   ", "\n", 
       RowBox[{"INPUTS", ":", "\n", "\t", "c"}]}]}], " ", "\[Dash]", " ", 
     RowBox[{
     "Coefficient", " ", "letter", " ", "to", " ", "use", " ", "in", " ", 
      "Clif"}], ",", " ", 
     RowBox[{
     "often", " ", "a", " ", "for", " ", "1", "st", " ", "array", " ", "and", 
      " ", "b", " ", "for", " ", "a", " ", "second", " ", "one", "\n", "\t", 
      "n"}], " ", "\[Dash]", " ", 
     RowBox[{"Number", " ", "of", " ", "desired", " ", "dimension", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", ".", "e", "."}], ",", " ", 
        RowBox[{"the", " ", "maximum", " ", "grade"}]}], ")"}], " ", "of", 
      " ", "the", " ", "clif", "\n", "\n", 
      RowBox[{"PROCESS", ":", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "Cases", " ", "command", " ", "clears", " ", "out", " ", "any", " ",
            "possible", " ", "values", " ", "or", " ", "definition", " ", 
           "for", " ", "the", " ", "base", " ", "c", "\n", "\t", "eArray", 
           " ", "generates", " ", "a", " ", "list", " ", "of", " ", "all", 
           " ", "possible", " ", 
           SubscriptBox["e", "i"], 
           SubscriptBox["e", "j"]}], "..."}], " ", "products", " ", "of", " ",
          "grade"}], " ", "\[LessEqual]", " ", 
        RowBox[{
        "n", "\n", "\t\t", "The", " ", "subset", " ", "formula", " ", "fails",
          " ", "for", " ", "grades", " ", "0", " ", "and", " ", "1", " ", 
         "so", " ", "those", " ", "are", " ", "handled", " ", "by", " ", 
         "brute", " ", "force", "\n", "\t", "cList", " ", "generates", " ", 
         "a", " ", "matching", " ", "of", " ", 
         SubscriptBox["c", 
          RowBox[{"i", ",", "j", ",", "..."}]], "coefficients", "\n", "\t", 
         "The", " ", "desired", " ", "clif", " ", "is", " ", "the", " ", 
         "dot", " ", "product", " ", "of", " ", "the", " ", "2", " ", "lists",
          "\n", "\n", "OUTPUT"}]}], ":", "\n", "\t", 
       RowBox[{
        RowBox[{"An", " ", "array", " ", "like", " ", 
         SubscriptBox["b", "0"]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["b", "1"], 
         SubscriptBox["e", "1"]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["b", "2"], 
         SubscriptBox["e", 
          RowBox[{"2", " "}]]}], "+", " ", 
        RowBox[{
         SubscriptBox["b", "3"], 
         SubscriptBox["e", 
          RowBox[{"3", " "}]]}], "+", " ", 
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["b", 
          RowBox[{"1", ",", "2"}]]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["b", 
          RowBox[{"1", ",", "3", " "}]]}], "+", " ", 
        RowBox[{
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["b", 
          RowBox[{"2", ",", "3"}]]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["b", 
          RowBox[{"1", ",", "2", ",", "3"}]]}]}]}]}]}], "   ", "*)"}], "\n", 
   "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cList", ",", "eArray"}], "}"}], ",", "\n", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
        RowBox[{"dv_", "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"dv", ",", "c"}], "]"}]}]}], "]"}], ";", "\n", "\t\t    ", 
      RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Clear", " ", "all", " ", "c"}], "-", 
        RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", "\t", 
      "\n", "\t\t", 
      RowBox[{"eArray", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Product]", "i", "n"], 
          SubscriptBox["e", "i"]}], ",", " ", "n"}], "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"List", " ", "of", " ", "all", " ", 
          SubscriptBox["e", "i"], 
          SubscriptBox["e", "j"]}], "..."}], " ", "products"}], " ", "*)"}], 
      "\n", "\t\t", 
      RowBox[{"cList", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["c", "0"], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"c", ",", "##"}], "]"}], "&"}], "@@@", 
           RowBox[{"Rest", "[", 
            RowBox[{"Subsets", "[", 
             RowBox[{"Range", "[", "n", "]"}], "]"}], "]"}]}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", "\t\t", 
      RowBox[{"cList", ".", "eArray"}]}]}], "\n", "\t", "]"}]}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "nClifG", " ", "Module"}], "  ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifFormatG", "[", "n_", "]"}], ":=", "  ", 
   RowBox[{"(*", "  ", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"INPUT", ":", "\n", "\t", "n"}], " ", "=", " ", 
      RowBox[{"largest", " ", "subscript", " ", "on", " ", "any", " ", 
       SubscriptBox["e", "i"], " ", "term", " ", "in", " ", "clif", 
       RowBox[{"(", "s", ")"}], " ", "under", " ", "consideration", " ", 
       "for", " ", "simplifying", " ", "printout", "\n", "\n", 
       RowBox[{"PROCESS", ":", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"First", " ", "form", " ", "the", " ", "product", " ", 
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"]}], "..."}], 
         RowBox[{
          SubscriptBox["e", "n"], ".", " ", "For"}], " ", "example"}]}]}]}], 
     ",", " ", 
     RowBox[{
      RowBox[{"for", " ", "n"}], " ", "=", " ", 
      RowBox[{"3", " ", "we", " ", "form", " ", 
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], "\n", "\t", "Then", " ", "make", " ", "a", " ",
        "list", " ", "of", " ", "all", " ", "subsets", " ", "of", " ", "the", 
       " ", 
       RowBox[{"product", ".", " ", "For"}], " ", "example"}]}], ",", " ", 
     RowBox[{
      RowBox[{"for", " ", "n"}], " ", "=", " ", "3"}], ",", " ", 
     RowBox[{
      RowBox[{"the", " ", "list", " ", "is", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["e", "1"], ",", " ", 
         SubscriptBox["e", "2"], ",", " ", 
         SubscriptBox["e", "3"], ",", " ", 
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"]}], ",", " ", 
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "3"]}], ",", " ", 
         RowBox[{
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"]}], ",", " ", 
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"]}]}], "}"}]}], " ", "=", " ", 
      RowBox[{"Basis", " ", "for", " ", 
       RowBox[{"GA", "[", "3", "]"}], "\n", "\t", "Finally"}]}], ",", " ", 
     RowBox[{
     "Mathematica", " ", "works", " ", "better", " ", "with", " ", "this", 
      " ", "list", " ", "in", " ", "reverse", " ", "order", "\n", "\t", 
      "This", " ", "function", " ", "is", " ", "used", " ", "by", " ", 
      "function", " ", "CollectG", " ", "and", " ", "can", " ", "also", " ", 
      "be", " ", "used", " ", "directly", " ", "by", " ", "the", " ", "user", 
      "\n", "\n", 
      RowBox[{"OUTPUT", ":", "\n", "\t", "collectTerms"}]}], " ", "\[Dash]", 
     " ", 
     RowBox[{"the", " ", "list", " ", "above"}], ",", " ", "reversed"}], 
    "   ", "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "collectTerms", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "1"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"collectTerms", "=", 
          RowBox[{"Subsets", "[", 
           RowBox[{
            RowBox[{
             SubsuperscriptBox["\[Product]", "i", "n"], 
             SubscriptBox["e", "i"]}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "n"}], "}"}]}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Terms", " ", "we", " ", "wish", " ", "to", " ", "collect", " ", 
           "by"}], " ", "*)"}], "\n", "\t\t\t", 
         RowBox[{"collectTerms", "=", 
          RowBox[{"Reverse", "[", "collectTerms", "]"}]}]}], "\n", "\t\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Reverse", " ", "order", " ", "to", " ", "force", " ", "Mathematica",
           " ", "to", " ", "collect", " ", "terms", " ", "correctly"}], " ", 
         "*)"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
        RowBox[{"collectTerms", "=", 
         RowBox[{"{", 
          SubscriptBox["e", "1"], "}"}]}]}], "\n", "\t\t", "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug5", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Arrange List = \>\"", ",", "collectTerms"}], "]"}]}], 
       "]"}], ";", "\n", "\t\t", "collectTerms"}]}], "\n", "\t", "]"}]}], 
  "       ", 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "ClifFormatG", " ", "Module"}], "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ComplexG", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "complexNum", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"]}]}], ";", 
      RowBox[{"complexNum", "=", 
       RowBox[{"a", "+", 
        RowBox[{"b", " ", "i"}]}]}]}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PseudoScalarG", "[", "n_", "]"}], ":=", 
   RowBox[{"Product", "[", 
    RowBox[{
     SubscriptBox["e", "i"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["e", "1"], 
      SubscriptBox["e", "2"]}], "..."}], 
    SubscriptBox["e", "n"]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuaternionG", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], ":=", "\n", "\t", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "quaternionNum", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{
        SubscriptBox["e", "2"], 
        SubscriptBox["e", "3"]}]}], ";", 
      RowBox[{"j", "=", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["e", "1"]}], 
        SubscriptBox["e", "3"]}]}], ";", 
      RowBox[{"k", "=", 
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"]}]}], ";", 
      RowBox[{"quaternionNum", "=", 
       RowBox[{"a", "+", 
        RowBox[{"b", " ", "i"}], "+", 
        RowBox[{"c", " ", "j"}], "+", 
        RowBox[{"d", " ", "k"}]}]}], ";", "\n", "\t\t", "quaternionNum"}]}], 
    "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RotorG", "[", 
    RowBox[{"i_", ",", "j_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "/", "2"}], "]"}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "/", "2"}], "]"}], 
     SubscriptBox["e", "i"], 
     SubscriptBox["e", "j"]}]}]}], "  ", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Create", " ", "rotor", " ", "from", " ", "rotation", " ", "angle", " ", 
    "plane", " ", "of", " ", "rotation", " ", 
    RowBox[{"(", 
     RowBox[{
     "denoted", " ", "by", " ", "the", " ", "pair", " ", "of", " ", "axis", 
      " ", "numbers"}], ")"}]}], "  ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BiVectorG", "[", 
    RowBox[{"c_", ",", "n_"}], "]"}], ":=", "    ", "\n", "\t", 
   RowBox[{"(*", " ", 
    RowBox[{"Note", ":", " ", 
     RowBox[{
     "bivector", " ", "is", " ", "visualized", " ", "as", " ", "a", " ", "2", 
      "D", " ", "region", " ", "spanned", " ", "by", " ", "2", " ", "vectors",
       " ", "in", " ", "a", " ", "space", " ", "of", " ", "\n", "\t\t", 
      "dimension", " ", "2", " ", "or", " ", "higher"}]}], "   ", "*)"}], 
   "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pairList", ",", "cList", ",", "eList", ",", "bivectorC"}], 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
        RowBox[{"dv_", "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"dv", ",", "c"}], "]"}]}]}], "]"}], ";", 
      RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Clear", " ", "all", " ", "c"}], "-", 
        RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", 
      "\t\t", "\n", "\t\t", 
      RowBox[{"pairList", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"cList", "=", 
       RowBox[{"pairList", "/.", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u_", ",", "v_"}], "}"}], "\[Rule]", 
         SubscriptBox["c", 
          RowBox[{"u", ",", "v"}]]}]}]}], ";", "\n", "\t\t", 
      RowBox[{"eList", "=", 
       RowBox[{"pairList", "/.", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u_", ",", "v_"}], "}"}], "\[Rule]", 
         RowBox[{
          SubscriptBox["e", "u"], 
          SubscriptBox["e", "v"]}]}]}]}], ";", "\n", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "1"}], ",", "\n", "\t\t\t", 
        RowBox[{"bivectorC", "=", 
         RowBox[{"cList", ".", "eList"}]}], ",", "\n", "\t\t\t", 
        RowBox[{
        "Print", "[", 
         "\"\<Error: 2nd entry of BiVectorG must be greater than 1.\>\"", 
         "]"}]}], "\n", "\t\t", "]"}], ";", "\n", "\n", "\t\t", 
      "bivectorC"}]}], "      ", 
    RowBox[{"(*", 
     RowBox[{"End", " ", "of", " ", "BivectorG", " ", "Module"}], "*)"}], 
    "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"nVectorG", "[", 
   RowBox[{"c_", ",", "n_"}], "]"}], ":=", "   ", 
  RowBox[{"(*", "  ", 
   RowBox[{"Note", ":", " ", 
    RowBox[{"n", "-", 
     RowBox[{
     "vector", " ", "is", " ", "a", " ", "vector", " ", "of", " ", 
      "dimension", " ", "1", " ", "in", " ", "n"}], "-", 
     RowBox[{"dimensional", " ", "space"}]}]}], "  ", "*)"}], "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "vectorC", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
       RowBox[{"dv_", "/;", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"dv", ",", "c"}], "]"}]}]}], "]"}], ";", 
     RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Clear", " ", "all", " ", "c"}], "-", 
       RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", "\t\t",
      "\n", "\t\t", 
     RowBox[{"vectorC", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["c", "i"], " ", 
         SubscriptBox["e", "i"]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}]}]}], "\n", "\t", "]"}], 
  "     ", 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "nVectorG", " ", "Module"}], 
   "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691073072029634*^9, 3.691073593702551*^9, 
   3.691073646277369*^9, 3.691073715183025*^9, 3.691073841869029*^9, 
   3.691073879917136*^9, {3.691083790822109*^9, 3.691083807709655*^9}, 
   3.691102705583344*^9, 3.691162433031191*^9, 3.691170784665902*^9, {
   3.691346561571847*^9, 3.691346570068967*^9}, {3.692447373223377*^9, 
   3.692447532918645*^9}, {3.692469057395756*^9, 3.692469107232608*^9}, 
   3.692469147166288*^9, {3.692469349943776*^9, 3.6924693632114563`*^9}, {
   3.692469760038862*^9, 3.692469762206094*^9}, {3.6924698004424343`*^9, 
   3.692469821952053*^9}, {3.6924698943308783`*^9, 3.692469905801302*^9}, {
   3.692469955916291*^9, 3.692470000503005*^9}, {3.69247023043757*^9, 
   3.692470235895976*^9}, 3.6924702957546053`*^9, {3.692470325763568*^9, 
   3.692470327864963*^9}, {3.6924703646562357`*^9, 3.692470365999009*^9}, {
   3.692477730817863*^9, 3.6924777369195423`*^9}, {3.6924806243244343`*^9, 
   3.692480627296599*^9}, {3.692480715831465*^9, 3.692480746817174*^9}, {
   3.6924807785484743`*^9, 3.6924807795406113`*^9}, {3.692483482874556*^9, 
   3.692483510142209*^9}, {3.692483576261361*^9, 3.692483577773611*^9}, {
   3.692483757488112*^9, 3.6924837586716547`*^9}, {3.6924838557341843`*^9, 
   3.6924838802727127`*^9}, {3.6924842352926903`*^9, 3.692484242631442*^9}, {
   3.6924842837660093`*^9, 3.692484307298365*^9}, {3.692484751172928*^9, 
   3.692484751699987*^9}, {3.692484876432817*^9, 3.692484906650508*^9}, {
   3.6924851127171087`*^9, 3.692485136152149*^9}, {3.692485187634049*^9, 
   3.6924851980868073`*^9}, {3.6924863997635202`*^9, 3.692486402915242*^9}, 
   3.6924875308975143`*^9, {3.692487942626789*^9, 3.692487957464012*^9}, {
   3.692488104024858*^9, 3.6924881095812073`*^9}, {3.69248938242953*^9, 
   3.692489511660285*^9}, {3.692489773534418*^9, 3.692489798312385*^9}, {
   3.692490135012905*^9, 3.692490216669692*^9}, 3.692490297360961*^9, 
   3.692490394216696*^9, {3.692490496683786*^9, 3.692490505331368*^9}, {
   3.6925520012295637`*^9, 3.6925520019241133`*^9}, {3.692552037863998*^9, 
   3.692552065234827*^9}, {3.6925529539656267`*^9, 3.692552968456435*^9}, {
   3.6926607006192703`*^9, 3.6926607328520737`*^9}, {3.6926643967708263`*^9, 
   3.692664435716918*^9}, {3.6926644747913713`*^9, 3.692664511024021*^9}, 
   3.693416689417634*^9, {3.6934429347752457`*^9, 3.6934429442660637`*^9}, {
   3.695772632724825*^9, 3.695772660111655*^9}, {3.695772729892161*^9, 
   3.6957727330989122`*^9}, {3.695772773560491*^9, 3.695772785192503*^9}, {
   3.6957728260396976`*^9, 3.695772835683711*^9}, {3.695773058721252*^9, 
   3.695773062508369*^9}, 3.695773118976162*^9, 3.696874243476945*^9, {
   3.696874286147122*^9, 3.696874298940352*^9}, {3.696874404018293*^9, 
   3.696874537764249*^9}, {3.696874602351841*^9, 3.6968746041616373`*^9}, {
   3.696874659991012*^9, 3.696874663226799*^9}, {3.6968746988284903`*^9, 
   3.6968747444586906`*^9}, {3.696881257346979*^9, 3.6968813481916103`*^9}, {
   3.696881412614933*^9, 3.696881464451166*^9}, {3.69688156411371*^9, 
   3.696881636605691*^9}, {3.6968816681763277`*^9, 3.696881762195716*^9}, {
   3.6968818170531607`*^9, 3.696881995945527*^9}, {3.696882120055017*^9, 
   3.696882478726488*^9}, {3.696882521265705*^9, 3.696882717279447*^9}, {
   3.69688277565548*^9, 3.696882804903944*^9}, {3.6968828811487083`*^9, 
   3.696883254430832*^9}, {3.6968833543095827`*^9, 3.696883384972622*^9}, {
   3.696883422143056*^9, 3.696883481025609*^9}, {3.696883526916669*^9, 
   3.696883574035481*^9}, {3.6968846120048437`*^9, 3.69688461686412*^9}, {
   3.69688467446104*^9, 3.696884685177855*^9}, 3.696885797102686*^9, {
   3.69688892872575*^9, 3.696888954729598*^9}, {3.6968890691896973`*^9, 
   3.696889117295525*^9}, {3.69688953370457*^9, 3.6968895577528276`*^9}, {
   3.6968953710487003`*^9, 3.696895389988497*^9}, {3.69689544626528*^9, 
   3.6968954649317913`*^9}, {3.696974951984475*^9, 3.696974954727544*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["5 Multivector Support Functions", "Chapter",
 CellChangeTimes->{{3.691073885336754*^9, 3.691073896408777*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CollectG", "[", 
    RowBox[{"clifInput_", ",", 
     RowBox[{"n_:", "-", "1"}]}], "]"}], ":=", "  ", 
   RowBox[{"(*", "  ", "\n", "\n", 
    RowBox[{
     RowBox[{"INPUTS", ":", "\n", "\t", 
      RowBox[{
      "clifInput", " ", "is", " ", "the", " ", "clif", " ", "to", " ", "be", 
       " ", "simplified", "\n", "\t", "n"}]}], " ", "\[Dash]", " ", 
     RowBox[{"Optional", " ", 
      RowBox[{"input", ".", " ", "Max"}], " ", "value", " ", "of", " ", "any",
       " ", 
      SubscriptBox["e", "i"], "subscript", " ", "for", " ", "purposes", " ", 
      "of", " ", "collecting", " ", "terms", " ", "in", " ", "printout", "\n",
       "\n", 
      RowBox[{"PROCESS", ":", "\n", "\t", 
       RowBox[{
        RowBox[{
        "Call", " ", "function", " ", "MaxDimG", " ", "to", " ", "find", " ", 
         "the", " ", "size", " ", "of", " ", "the", " ", "largest", " ", 
         "e"}], "-", 
        RowBox[{
        "subscript", " ", "in", " ", "the", " ", "clif", "\n", "\t", "Modify",
          " ", "multivector", " ", "clifInput", " ", "according", " ", "to", 
         " ", 
         RowBox[{"user", "'"}], "s", " ", "initialization", " ", "rules", 
         "\n", "\t", "Use", " ", 
         RowBox[{"Mathematica", "'"}], "s", " ", "Collect", " ", "to", " ", 
         "collect", " ", "the", " ", "terms", " ", "by", " ", 
         SubscriptBox["e", "1"]}]}]}]}], ",", " ", "...", ",", " ", 
     SubscriptBox["e", "n"], ",", " ", 
     RowBox[{
      SubscriptBox["e", "1"], 
      SubscriptBox["e", "2"]}], ",", " ", "\n", "\t\t", 
     RowBox[{
      SubscriptBox["e", "1"], 
      SubscriptBox["e", "3"]}], ",", " ", "...", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"]}], "..."}], 
       SubscriptBox["e", "n"], "\n", "\t", "This", " ", "function", " ", "is",
        " ", "used", " ", "by", " ", "other", " ", "functions", " ", "and", 
       " ", "can", " ", "also", " ", "be", " ", "called", " ", "directly", 
       " ", "by", " ", "the", " ", "unser", "\n", "\n", 
       RowBox[{"OUTPUT", ":", "\n", "\t", "clifOutput"}]}], " ", "=", " ", 
      RowBox[{
      "clif", " ", "with", " ", "all", " ", "multiplications", " ", "carried",
        " ", "out", " ", "and", " ", "then", " ", "arranged", " ", "by", " ", 
       "product", " ", "of", " ", 
       SubscriptBox["e", "i"], " ", "terms", "\n", "\t", "This", " ", "is", 
       " ", "same", " ", "as", " ", 
       RowBox[{"Mathematica", "'"}], "s", " ", "Collect", " ", "function", 
       " ", "except", " ", "for", " ", "implementation", " ", "of", " ", 
       RowBox[{"user", "'"}], "s", " ", "initialization", " ", "rules", " ", 
       "to", " ", "handle", " ", 
       SuperscriptBox[
        SubscriptBox["e", "i"], "2"], " ", "terms"}]}]}], "   ", "*)"}], "\n",
    "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "clifOutput"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", "\[Equal]", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"(*", " ", 
         RowBox[{"if", " ", "user", " ", 
          RowBox[{"doesn", "'"}], "t", " ", "supply", " ", "an", " ", 
          "input"}], " ", "*)"}], "\n", "\t\t\t", 
        RowBox[{"m", "=", 
         RowBox[{"MaxDimG", "[", "clifInput", "]"}]}], "\n", "\t\t", ",", 
        "\n", "\t\t\t", 
        RowBox[{"m", "=", "n"}]}], "\n", "\t\t", "]"}], ";", "\n", "\n", 
      "\t\t", 
      RowBox[{"clifOutput", "=", 
       RowBox[{"Collect", "[", 
        RowBox[{
         RowBox[{"ExpandG", "[", "clifInput", "]"}], ",", 
         RowBox[{"ClifFormatG", "[", "m", "]"}]}], "]"}]}], ";", "\n", "\t\t",
       "clifOutput"}]}], "\n", "]"}]}], "       ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "CollectG", " ", "Module"}], "\t", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstantG", "[", "clif_", "]"}], ":=", " ", 
   RowBox[{"(*", " ", "\n", "\t", 
    RowBox[{"INPUT", ":", " ", 
     RowBox[{"A", " ", "multivector", "\n", "\t", "PROCESS"}], ":", " ", 
     RowBox[{
     "Should", " ", "be", " ", "the", " ", "same", " ", "as", " ", "1", "st", 
      " ", "2", " ", "lines", " ", "of", " ", 
      RowBox[{"ClifToListG", ".", " ", "See"}], " ", "ClifToList", " ", 
      "Process", "\n", "\t", 
      RowBox[{"OUTPUT", ":", " ", 
       RowBox[{"The", " ", "constant", " ", "term", 
        RowBox[{"(", "s", ")"}], "of", " ", "clif"}]}]}]}], " ", "*)"}], "\n",
    "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"clif1", ",", "const"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"clif1", "=", 
       RowBox[{"Expand", "[", "clif", "]"}]}], ";", " ", "\n", "\t\t", 
      RowBox[{"const", "=", 
       RowBox[{"clif1", "/.", 
        RowBox[{
         SubscriptBox["e", "u_"], "\[Rule]", "0"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Constant", ",", " ", 
        RowBox[{
         RowBox[{
         "may", " ", "be", " ", "zero", " ", "or", " ", "consist", " ", "of", 
          " ", "one", " ", "or", " ", "more", " ", "non"}], "-", 
         RowBox[{"zero", " ", "terms"}]}]}], " ", "*)"}], "\n", 
      RowBox[{"(*", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<ConstantG: clif = \>\"", ",", "clif", ",", 
          "\"\<, Context of e: \>\"", ",", 
          RowBox[{"Context", "[", "e", "]"}]}], "]"}], ";"}], " ", "\n", 
       "*)"}], "\t\t", "\n", "\t\t", "const"}]}], "\n", "\t", "]"}]}], "\n", 
  "\t", 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "ConstantG"}], "  ", "*)"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EijTermG", "[", 
    RowBox[{"clif_", ",", "eij_"}], "]"}], ":=", " ", 
   RowBox[{"(*", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"INPUTS", ":", "\n", "\t", "clif"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"multivector", ".", "  ", 
         RowBox[{"Example", ":", " ", 
          RowBox[{
           RowBox[{
            SubscriptBox["e", "1"], 
            SubscriptBox["e", "2"]}], " ", "+", " ", 
           RowBox[{"2", 
            SubscriptBox["e", "1"], 
            SubscriptBox["e", "2"], 
            SubscriptBox["e", "3"]}], " ", "+", " ", 
           RowBox[{"3", 
            SubscriptBox["e", "1"], 
            SubscriptBox["e", "2"], 
            SubscriptBox["e", "3"], 
            SubscriptBox["e", "4"], "\n", "\t", "eij"}]}]}]}]}], " ", "=", 
       " ", 
       RowBox[{"a", " ", "product", " ", "like", " ", 
        SubscriptBox["e", "2"], " ", "or", " ", 
        SubscriptBox["e", "3"], 
        SubscriptBox["e", "4"], " ", "or", " ", 
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "3"], 
        SubscriptBox["e", "4"], 
        SubscriptBox["e", "5"], " ", "or", " ", "else", " ", "the", " ", 
        "constant", " ", "1.", "  ", 
        RowBox[{"Example", ":", " ", 
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"], "\n", "PROCESS"}], ":", "\n", "\t", 
         RowBox[{"Convert", " ", "clif", " ", "to", " ", "a", " ", 
          RowBox[{"list", ".", "  ", 
           RowBox[{"Example", ":", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                SubscriptBox["e", "1"], 
                SubscriptBox["e", "2"]}], ",", " ", 
               RowBox[{"2", 
                SubscriptBox["e", "1"], 
                SubscriptBox["e", "2"], 
                SubscriptBox["e", "3"]}], ",", " ", 
               RowBox[{"3", 
                SubscriptBox["e", "1"], 
                SubscriptBox["e", "2"], 
                SubscriptBox["e", "3"], 
                SubscriptBox["e", "4"]}]}], "}"}], " ", "\n", "\t", "Use", 
             " ", "Cases", " ", "to", " ", "find", " ", "the", " ", "sublist",
              " ", "of", " ", "members", " ", "containing", " ", "the", " ", 
             "product", " ", 
             RowBox[{"eij", ".", " ", "\n", "\t\t", "Example"}]}], ":", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", 
                SubscriptBox["e", "1"], 
                SubscriptBox["e", "2"], 
                SubscriptBox["e", "3"]}], ",", " ", 
               RowBox[{"3", 
                SubscriptBox["e", "1"], 
                SubscriptBox["e", "2"], 
                SubscriptBox["e", "3"], 
                SubscriptBox["e", "4"]}]}], "}"}], "\n", "\t", "Change", " ", 
             "list", " ", "back", " ", "to", " ", "an", " ", 
             RowBox[{"expression", ".", "  ", 
              RowBox[{"Example", ":", " ", 
               RowBox[{
                RowBox[{"2", 
                 SubscriptBox["e", "1"], 
                 SubscriptBox["e", "2"], 
                 SubscriptBox["e", "3"]}], " ", "+", " ", 
                RowBox[{"3", 
                 SubscriptBox["e", "1"], 
                 SubscriptBox["e", "2"], 
                 SubscriptBox["e", "3"], 
                 SubscriptBox["e", "4"], "\n", "\t", 
                 "If"}]}]}]}]}]}]}]}]}]}]}]}], ",", " ", 
     RowBox[{"in", " ", "the", " ", "epxression"}], ",", " ", 
     RowBox[{
     "the", " ", "eij", " ", "term", " ", "has", " ", "one", " ", "or", " ", 
      "more", " ", 
      SubscriptBox["e", "i"], " ", "factors"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "set", " ", "those", " ", "terms", " ", "to", " ", "0", "\n", "\t\t", 
        RowBox[{"Example", ":", " ", 
         RowBox[{"3", 
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"], 
          SubscriptBox["e", "4"]}]}]}], " ", "\[Rule]", " ", 
       RowBox[{"0", "  ", "leading", " ", "to", " ", "2", 
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"], 
        SubscriptBox["e", "3"], "\n", "\t", "Find", " ", "the", " ", "eij", 
        " ", "coefficient", " ", "by", " ", "dividing", " ", "out", " ", 
        RowBox[{"eij", ".", "  ", 
         RowBox[{"Example", ":", " ", 
          RowBox[{"2", "\n", "OUTPUT"}], ":", "\n", "\t", "eijPart"}]}]}]}], 
      " ", "=", " ", 
      RowBox[{"eij", " ", "coefficients"}]}], ",", " ", 
     RowBox[{"if", " ", "any"}], ",", " ", 
     RowBox[{
      RowBox[{
      "in", " ", "clif", "\n", "\t", "In", " ", "the", " ", "case", " ", 
       "eij"}], " ", "=", " ", "1"}], ",", " ", 
     RowBox[{
     "eijPart", " ", "is", " ", "just", " ", "the", " ", "constant", " ", 
      "term", " ", "of", " ", "clif"}]}], "  ", "*)"}], "\n", "\t", "\n", 
   "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"list", ",", "eijPart1", ",", "eijPart"}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"eijPart1", "=", 
       RowBox[{"CollectG", "[", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{"list", ",", 
           RowBox[{"___", " ", "eij"}]}], "]"}], "/.", 
         RowBox[{"List", "\[Rule]", "Plus"}]}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"eijPart", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"eijPart1", "/.", 
          RowBox[{
           RowBox[{
            SubscriptBox["e", "u_"], "eij"}], "\[Rule]", "0"}]}], ")"}], "/", 
        "eij"}]}], ";", "\n", "\t\t", "eijPart"}]}], "\n", "\t", "]"}]}], 
  "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "EijTermG"}], "  ", "*)"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpandG", "[", "clifInput_", "]"}], ":=", 
   RowBox[{"Expand", "[", 
    RowBox[{"InitializeG", "[", "clifInput", "]"}], "]"}]}], "  ", 
  RowBox[{"(*", "\n", 
   RowBox[{"Same", " ", "as", " ", 
    RowBox[{"Mathematica", "'"}], "s", " ", "Expand", " ", "function", " ", 
    RowBox[{"except", ":", "\n", "\t", 
     RowBox[{
     "Multivector", " ", "is", " ", "modified", " ", "first", " ", 
      "according", " ", "to", " ", 
      RowBox[{"user", "'"}], "s", " ", "initialization", " ", "rules", " ", 
      "shown", " ", "in", " ", "Palette"}]}]}], "  ", "*)"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FreeTermG", "[", "0", "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FreeTermG", "[", "clif_", "]"}], ":=", " ", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", 
      RowBox[{"A", " ", "clif", "\n", "\t", "PROCESS"}], ":", " ", "\n", 
      "\t\t", 
      RowBox[{
      "The", " ", "obvious", " ", "definition", " ", "is", " ", "a", " ", 
       "simple", " ", 
       RowBox[{"subtraction", ":", "  ", 
        RowBox[{
         RowBox[{
          RowBox[{"clif", " ", "-", " ", 
           RowBox[{"constant", " ", "term", 
            RowBox[{"(", "s", ")"}], "\n", "\t\t", "But"}]}], "..."}], " ", 
         "this", " ", "causes", " ", "unwieldy", " ", "Mathematica", " ", 
         "problems", " ", "in", " ", "certain", " ", "situations", "\n", 
         "\t\t", "Namely"}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "if", " ", "user", " ", "limits", " ", "precision", " ", "of", " ", 
       "clif", " ", 
       RowBox[{"(", 
        RowBox[{"say", ",", " ", 
         RowBox[{
         "4", " ", "significant", " ", "digits", " ", "for", " ", 
          "outputting", " ", "purposes"}]}], ")"}]}], ":", "\n", "\t\t\t", 
      RowBox[{
      "Then", " ", "Mathematica", " ", "throws", " ", "in", " ", "a", " ", 
       "roundoff", " ", "term", " ", 
       RowBox[{"(", 
        RowBox[{"a", " ", "constant", " ", "like", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]]}], ")"}], " ", "to", " ", "the", " ", 
       "subtraction", "\n", "\t\t\t", "Thus", " ", "the", " ", "\"\<free\>\"",
        " ", "term", " ", "retains", " ", "a", " ", "constant", " ", "part", 
       "\n", "\t\t\t", "This", " ", "can", " ", "be", " ", "elimininated", 
       " ", "using", " ", "algebraic", " ", "operations"}]}], ",", " ", 
     RowBox[{
     "but", " ", "that", " ", "causes", " ", "yet", " ", "worse", " ", 
      "probolems", " ", "\n", "\t\t\t", "As", " ", "Mathematica", " ", 
      "expands", " ", "and", " ", "collects", " ", "terms"}], ",", " ", 
     RowBox[{
     "it", " ", "changes", " ", "the", " ", "form", " ", "original", " ", 
      "expression", "\n", "\t\t\t", "After", " ", "multiplication"}], ",", 
     " ", 
     RowBox[{
     "Mathematica", " ", "cannot", " ", "find", " ", "the", " ", "necessary", 
      " ", "simplifications", " ", "that", " ", "have", " ", "been", " ", 
      "lost", "\n", "\t\t", "It", " ", "is", " ", "safer", " ", "just", " ", 
      "to", " ", "find", " ", "the", " ", "constant", " ", "and", " ", "free",
       " ", "terms", " ", "by", " ", "manipulating", " ", "lists", " ", 
      "without", " ", "algebra", "\n", "\t\t", "Since", " ", "this", " ", 
      "requires", " ", "making", " ", "the", " ", "clif", " ", "list"}], ",", 
     " ", 
     RowBox[{
      RowBox[{
      "we", " ", "call", " ", "ClifToList", " ", "and", " ", "grab", " ", 
       "the", " ", "free", " ", "term", " ", "from", " ", "there", "\n", 
       "\t\t", "See", " ", "ClifTlList", " ", "for", " ", "a", " ", 
       "description", " ", "of", " ", "the", " ", "process", "\n", "\t", 
       RowBox[{"OUTPUT", ":", " ", "clifFree"}]}], " ", "=", " ", 
      RowBox[{"clif", " ", "-", " ", 
       RowBox[{"constant", " ", "term"}]}]}]}], "\n", "*)"}], "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"conTerm", ",", "clifFree", ",", "freeList"}], "}"}], ",", "\n",
      "\t", 
     RowBox[{
      RowBox[{"ClifToListG", "[", 
       RowBox[{"clif", ",", "conTerm", ",", "clifFree", ",", "freeList"}], 
       "]"}], ";", "  ", "\n", "\n", "\t", "clifFree"}]}], "\n", "]"}]}], 
  "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "FreeTermG"}], "  ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GradePTermG", "[", 
    RowBox[{"0", ",", "p_"}], "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GradePTermG", "[", 
    RowBox[{"clif_", ",", "p_"}], "]"}], ":=", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"User", "'"}], "s", " ", "Clif", " ", "is", " ", 
          SubscriptBox["c", "0"]}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["c", "1"], " ", 
          SubscriptBox["e", "1"]}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["c", 
           RowBox[{"1", ",", "2"}]], " ", 
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"]}], " ", "+"}], " ", "..."}], "  ", "\n", 
       RowBox[{"INPUTS", ":", "\n", "\t", "clif"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"a", " ", "Clif", "\n", "\t", "p"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
        "grade", " ", "of", " ", "terms", " ", "we", " ", "wish", " ", "to", 
         " ", "select", "\n", "\n", 
         RowBox[{"PROCESS", ":", "\n", "\t", 
          RowBox[{
          "This", " ", "function", " ", "finds", " ", "terms", " ", "in", " ",
            "clif", " ", "of", " ", "grade", " ", "p", "\n", "\t", "Call", 
           " ", "other", " ", "functions", " ", "to", " ", "generate4", " ", 
           "2", " ", "arrays"}], ":", "\n", "\t\t", "cliflist"}]}], " ", "=", 
        " ", 
        RowBox[{
        "list", " ", "of", " ", "terms", " ", "in", " ", "clif"}]}]}]}], ",", 
     " ", 
     RowBox[{
      RowBox[{
      "with", " ", "all", " ", "constants", " ", "grouped", " ", "into", " ", 
       "term", " ", "1", "\n", "\t\t", "gradesClif"}], " ", "=", " ", 
      RowBox[{
      "list", " ", "of", " ", "grades", " ", "of", " ", "terms", " ", "in", 
       " ", "cliflist", "\n", "\t", "From", " ", "gradesClif"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"create", " ", "an", " ", "array", " ", "with", " ", 
        RowBox[{"1", "'"}], "s", " ", "for", " ", "all", " ", "grade", " ", 
        "p", " ", "terms", " ", "and", " ", 
        RowBox[{"0", "'"}], "s", " ", "otherwise", "\n", "\t", "Then", " ", 
        "simiply", " ", "dot", " ", "multiply", " ", "this", " ", "array", 
        " ", "with", " ", "the", " ", "list", " ", "of", " ", "terms", " ", 
        "from", " ", "clif", "\n", "\n", "\t", "Note", " ", "1"}], ":", " ", 
       "p"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
        "0", " ", "requires", " ", "special", " ", "treatment", " ", "since", 
         " ", "we", " ", "are", " ", "setting", " ", "non"}], "-", 
        RowBox[{
        "grade", " ", "p", " ", "terms", " ", "to", " ", "0", "\n", "\t\t", 
         "\n", "\t", "Note", " ", "1"}]}], ":", " ", 
       RowBox[{
       "The", " ", "constant", " ", "term", " ", "have", " ", "been", " ", 
        "rounded", " ", "up", " ", "into", " ", "term", " ", "1"}]}]}], ",", 
     " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "and", " ", "due", " ", "to", " ", "Note", " ", "1", "  ", "\n", 
        "\t\t", "the", " ", "grade", " ", "has", " ", "been", " ", "changed", 
        " ", "from", " ", "0", " ", "to"}], " ", "-", 
       RowBox[{"1", "\n", "\n", 
        RowBox[{"OUTPUT", ":", "\n", "\t", "gradePClif"}]}]}], " ", "=", " ", 
      
      RowBox[{
       RowBox[{
       "clif", " ", "composed", " ", "of", " ", "just", " ", "the", " ", 
        "grade"}], "-", 
       RowBox[{"p", " ", "terms"}]}]}], ",", " ", 
     RowBox[{"if", " ", "any"}]}], "\n", "*)"}], "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clifList", ",", "gradesClif", ",", "gradeParray", ",", "gradePclif"}], 
      "}"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"debug4", ",", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Clif being examined = \>\"", ",", 
           RowBox[{"Expand", "[", "clif", "]"}], ",", 
           "\"\<   (GradePTermG)\>\""}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Grade being investigated = \>\"", ",", "p"}], 
          "]"}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"gradesClif", "=", 
       RowBox[{
        RowBox[{"GradeListG", "[", "clif", "]"}], "/.", 
        RowBox[{
         RowBox[{"x_", "/;", 
          RowBox[{"x", "\[Equal]", "0"}]}], "\[Rule]", 
         RowBox[{"-", "1"}]}]}]}], ";", "\n", "\t\t", 
      RowBox[{"(*", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Get", " ", "list", " ", "of", " ", "grades", " ", "of", " ", 
          "terms", " ", "\n", "\t\t\t", "A", " ", "grade", " ", "of", " ", 
          "zero", " ", "corresponds", " ", "to", " ", "a", " ", "non"}], "-", 
         
         RowBox[{
         "zero", " ", "constant", " ", "term", " ", "as", " ", "first", " ", 
          "term", " ", "in", " ", "list", "\n", "\t\t\t", "If", " ", "1", 
          "st", " ", "term", " ", "has", " ", "grade", " ", "0"}]}], ",", " ", 
        RowBox[{
         RowBox[{"change", " ", "it", " ", "to"}], " ", "-", 
         RowBox[{
         "1", " ", "so", " ", "as", " ", "not", " ", "to", " ", "interfere", 
          " ", "with", " ", "\n", "\t\t\t\t", "two", " ", "statements", " ", 
          "below", " ", "after", " ", "\"\<Else\>\""}]}]}], "  ", "*)"}], 
      "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"gradeParray", "=", 
          RowBox[{"gradesClif", "/.", 
           RowBox[{
            RowBox[{"x_", "/;", 
             RowBox[{"x", "\[NotEqual]", "p"}]}], "\[RuleDelayed]", "0"}]}]}],
          ";", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"For", " ", "p"}], ">", "0"}], ",", " ", 
           RowBox[{
            RowBox[{"set", " ", "non"}], "-", 
            RowBox[{
            "grade", " ", "p", " ", "terms", " ", "to", " ", "0"}]}]}], " ", 
          "*)"}], "\n", "\t\t", 
         RowBox[{"gradeParray", "=", 
          RowBox[{"gradeParray", "/", "p"}]}]}], " ", ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "and", " ", "divide", " ", "the", " ", "grade", " ", "p", " ", 
          "term", " ", "by", " ", "p", " ", "to", " ", "get", " ", "1"}], " ",
          "*)"}], "\n", "\t", 
        RowBox[{"(*", " ", "Else", " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"gradeParray", "=", 
          RowBox[{"gradesClif", "/.", 
           RowBox[{
            RowBox[{"x_", "/;", 
             RowBox[{"x", "\[NotEqual]", 
              RowBox[{"-", "1"}]}]}], "\[RuleDelayed]", "0"}]}]}], ";", "  ", 
         
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"For", " ", "p"}], "=", "0"}], ",", " ", 
           RowBox[{
            RowBox[{"set", " ", "non"}], "-", 
            RowBox[{"constants", " ", "to", " ", "0"}]}]}], " ", "*)"}], "\n",
          "\t\t", 
         RowBox[{"gradeParray", "=", 
          RowBox[{"-", "gradeParray"}]}]}]}], "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "and", " ", "change", " ", "the", " ", "constant", " ", "term", " ", 
          "from"}], " ", "-", 
         RowBox[{"1", " ", "to"}], " ", "+", "1"}], "  ", "*)"}], "\n", "\t", 
       "]"}], ";", "\n", "\n", "\t", 
      RowBox[{"clifList", "=", 
       RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"gradePclif", "=", 
       RowBox[{"gradeParray", ".", "clifList"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug4", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<List of grades of \>\"", ",", "clif", ",", "\n", "\t\t\t\t", 
           "\"\< with constant (if any) set to -1: \>\"", ",", "gradesClif"}],
           "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Array, with 1's at grade \>\"", ",", "p", ",", 
           "\"\< position(s) (if any) = \>\"", ",", "gradeParray"}], "]"}], 
         ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<List of any grade \>\"", ",", "p", ",", "\"\< terms: \>\"", 
           ",", "gradePclif", ",", "\"\<.  If grade > 0, 1st term\>\"", ",", 
           "\n", "\t\t", 
           "\"\< is 0. List is product of array with 1's and 0's with list of \
the clif terms.\>\""}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Clif term(s) of grade \>\"", ",", "p", ",", "\"\< = \>\"", ",",
            "gradePclif"}], "]"}]}]}], "\n", "\t", "]"}], ";", "\n", "\n", 
      "\t", "gradePclif"}]}], "\n", "\t", "]"}]}], "    ", 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "GradePTermG", " ", "Module"}], "  ", 
   "*)"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InitializeG", "[", "clifInput_", "]"}], ":=", "    ", "\n", " ", 
   RowBox[{"(*", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"INPUT", ":", "\n", "\t", "clifInput"}], " ", "=", " ", 
      RowBox[{"A", " ", "multivector", "\n", "\n", 
       RowBox[{"PROCESS", ":", "\n", "\t", 
        RowBox[{
        "Internal", " ", "function", " ", "called", " ", "only", " ", "by", 
         " ", "ExpandG"}]}]}]}], ",", " ", 
     RowBox[{
     "which", " ", "in", " ", "turn", " ", "is", " ", "called", " ", "by", 
      " ", "CollectG", "\n", "\t", "Modifies", " ", "multivector", " ", 
      "clifInput", " ", "according", " ", "to", " ", 
      RowBox[{"user", "'"}], "s", " ", "initialization", " ", "rules", " ", 
      "for", " ", "terms", " ", 
      SuperscriptBox[
       SubscriptBox["e", "i"], "2"]}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
      "set", " ", "up", " ", "either", " ", "in", " ", "Palette", " ", "or", 
       " ", "manually", "  ", "\n", "\t", 
       RowBox[{"algebraType", ":", " ", "1"}]}], " ", "=", " ", 
      RowBox[{"Clifford", " ", "algebra"}]}], ",", "  ", 
     RowBox[{"2", " ", "=", " ", 
      RowBox[{
       RowBox[{"Grassmann", " ", "algebra", "\n", "\t", 
        RowBox[{"signatureType", ":", " ", "1"}]}], " ", "=", " ", 
       RowBox[{"Mathematicians", " ", "-", " ", 
        RowBox[{"+", " ", 
         RowBox[{"+", " ", "+"}]}]}]}]}], " ", ",", "  ", 
     RowBox[{
      RowBox[{"-", "1"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"Physicists", " ", "+", " ", 
        RowBox[{"-", " ", 
         RowBox[{"-", " ", 
          RowBox[{"-", " ", "\n", "\t", "numTimelike"}]}]}]}], " ", "=", " ", 
       
       RowBox[{
        RowBox[{"Number", " ", "of", " ", "timelike", " ", 
         RowBox[{"dimensions", ".", " ", "\n", "\t\t", "0"}]}], " ", "=", " ", 
        RowBox[{
         RowBox[{"Pure", " ", "Space", "   ", "1"}], " ", "=", " ", 
         RowBox[{
         "Spacetime", "   ", "2", " ", "or", " ", "more", " ", "time", " ", 
          "dimensions", " ", "are", " ", "allowed"}]}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "time", " ", "always", " ", "using", "\n", "\t\t", "the", " ", 
        "lowest", " ", "ubscripts", "\n", "\n", 
        RowBox[{"OUTPUT", ":", "  ", "clifOutput"}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{"Multivector", " ", "with", " ", "any", " ", "square", " ", 
         SubscriptBox["e", "i"], " ", "terms", " ", 
         RowBox[{"reduced", ":"}]}], "\n", "\t\t\t\t\t", "=", " ", 
        RowBox[{"0", " ", "if", " ", "Grassmann", " ", "algebra"}]}]}], ";", 
      "\n", "\t\t\t   ", 
      RowBox[{"else", " ", "=", " ", 
       RowBox[{
        RowBox[{"signatureType", " ", "if", " ", "u"}], " ", "\[LessEqual]", 
        " ", "numTimelike"}]}], ";", " ", "\n", "\t\t\t   ", 
      RowBox[{"else", " ", "=", " ", 
       RowBox[{"signatureType", "\n", "\t\t\t   ", "\n", "CONTEXT", " ", 
        RowBox[{"SHADOWING", ":", "\n", "\t", 
         RowBox[{
         "The", " ", "context", " ", "of", " ", "this", " ", "package", " ", 
          "is", " ", "GeomAlgPkg`", " ", "or", " ", "whatever", " ", "is", 
          " ", "in", " ", "BeginPackage"}]}]}]}]}], ",", " ", 
     RowBox[{
     "above", "\n", "\t", "If", " ", "user", " ", "calls", " ", "this", " ", 
      "package", " ", "from", " ", "his", " ", "environment", " ", "having", 
      " ", "a", " ", "diffenet", " ", "context"}], ",", " ", 
     RowBox[{"say", " ", "ContextUser`"}], ",", " ", "\n", "\t\t", 
     RowBox[{
      RowBox[{"then", " ", "e"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
       "GeomAlgPkg`Private`e", " ", "but", " ", "we", " ", "need", " ", "e"}],
        " ", "=", " ", 
       RowBox[{
        RowBox[{"ContextUser`e", " ", "in", " ", "order", " ", "for"}], " ", "/.", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["e", "u_"], "2"], "\[Rule]", 
         RowBox[{
         "1", " ", "to", " ", "work", "\n", "\t", "The", " ", "user", " ", 
          "only", " ", "enters", " ", "clif1", " ", 
          RowBox[{"(", 
           RowBox[{"and", " ", "possibly", " ", "clif2"}], ")"}]}]}]}]}]}], 
     ",", " ", 
     RowBox[{
      RowBox[{"leading", " ", "here", " ", "to", " ", 
       RowBox[{"clifInput", ".", " ", "He"}], " ", "does", " ", "not", " ", 
       "input", " ", "\n", "\t\t", "either", " ", "e", " ", "or", " ", "his", 
       " ", 
       RowBox[{"context", ".", "\n", "\t", "Here"}], " ", "is", " ", "how", 
       " ", "we", " ", "find", " ", 
       RowBox[{"both", ":", " ", "\n", "\t\t", 
        RowBox[{"Suppose", " ", "clifInput"}]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"1", " ", "+", " ", 
        RowBox[{"2", 
         SubscriptBox["e", 
          RowBox[{"1", " "}]]}], "+", " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["e", "1"], "2"], 
         SubscriptBox["e", "2"], "\n", "\t\t", "leaves"}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{"Level", "[", 
         RowBox[{"clifInput", ",", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}]}], "]"}], " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "e", ",", "1", ",", "e", ",", "1", ",", "2", ",",
           "e", ",", "2"}], "}"}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"the", " ", "leaves", " ", 
       RowBox[{"(", 
        RowBox[{"or", " ", "atomic", " ", "elements"}], ")"}], " ", "of", " ",
        "clifInput", "\n", "\t\t\t", "Note", " ", "1"}], ":", " ", 
      RowBox[{
      "The", " ", "leaves", " ", "list", " ", "memebers", " ", "have", " ", 
       "context", " ", "ContextUser`"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"what", " ", "we", " ", "are", " ", 
        RowBox[{"after", ".", "\n", "\t\t\t", "Note"}], " ", "2"}], ":", " ", 
       
       RowBox[{
       "The", " ", "symbol", " ", "\"\<leaves\>\"", " ", "does", " ", 
        RowBox[{"not", ".", " ", "It"}], " ", "has", " ", "context", " ", 
        RowBox[{"GeomAlgPkg`Private`", ".", "\n", "\t\t", "symbols1"}]}]}], 
      " ", "=", " ", 
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{"leaves", ",", "_Symbol"}], "]"}], " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"e", ",", "e", ",", "e"}], "}"}]}]}], ",", " ", 
     RowBox[{"lists", " ", "the", " ", "symbols"}], ",", " ", 
     RowBox[{"if", " ", "any"}], ",", " ", 
     RowBox[{
      RowBox[{"among", " ", "the", " ", "leaves", "\n", "\t\t", "symbols2"}], 
      " ", "=", " ", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"symbols1", ",", "e"}], "]"}], "\t ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"e", ",", "e", ",", "e", ",", "e"}], "}"}], " ", "appends", 
        " ", "an", " ", "e", " ", "to", " ", "the", " ", "end", "\n", 
        "\t\t\t", "The", " ", "appended", " ", "e", " ", "has", " ", 
        "context", " ", "GeomAlgPkg`Private`"}]}]}], ",", " ", 
     RowBox[{
     "which", " ", "is", " ", "NOT", " ", "what", " ", "we", " ", "want", 
      "\n", "\t\t\t", "However"}], ",", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "appended", " ", "e", " ", "will", " ", "only", " ", "be", 
       " ", "chosen", " ", "if", " ", "symbols1", " ", "is", " ", "an", " ", 
       "empty", " ", "list"}], ";", " ", 
      RowBox[{"that", " ", "is"}]}], ",", " ", 
     RowBox[{"clifInput", " ", "\n", "\t\t\t", "has", " ", "no", " ", 
      SubscriptBox["e", "i"], "terms", "\n", "\t\t\t\t", "If", " ", "ithere", 
      " ", "are", " ", "no", " ", 
      SubscriptBox["e", "i"], " ", "terms"}], ",", " ", 
     RowBox[{
      RowBox[{"then", " ", 
       SuperscriptBox[
        SubscriptBox["e", "i"], "2"]}], "\[Rule]", 
      RowBox[{"1", " ", 
       RowBox[{"doesn", "'"}], "t", " ", "do", " ", "anything"}]}], ",", " ", 
     
     RowBox[{"so", " ", "no", " ", "harm", " ", "occurs"}], ",", " ", 
     RowBox[{
      RowBox[{
      "but", " ", "\n", "\t\t\t\t", "also", " ", "no", " ", "warning", " ", 
       "message", " ", "occurs", " ", "due", " ", "to", " ", "operating", " ",
        "on", " ", "an", " ", "empty", " ", "symbols1", " ", 
       RowBox[{"list", ".", "\n", "\t\t", "symbolA"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"First", "[", "symbol2", "]"}], " ", "=", " ", 
       RowBox[{"e", "\n", "\t\t\t", 
        RowBox[{"Note", ":", " ", 
         RowBox[{
         "As", " ", "in", " ", "Notes", " ", "1", " ", "and", " ", 
          "2"}]}]}]}]}], ",", " ", "above", ",", " ", 
     RowBox[{
      RowBox[{
      "e", " ", "has", " ", "the", " ", "context", " ", "we", " ", "want"}], 
      ";", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"symbolA", " ", "does", " ", 
         RowBox[{"not", ".", "\n", "\t\t\t\t  ", "But"}]}], "..."}], " ", 
       "the", " ", "rhs", " ", "e", " ", "is", " ", "not", " ", "available", 
       " ", "for", " ", "processing"}], ";", " ", 
      RowBox[{
       RowBox[{
       "we", " ", "only", " ", "have", " ", "access", " ", "to", " ", "lhs", 
        " ", "symbolA", "\n", "\t\t", "e"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"Evaluate", "[", "symbolA", "]"}], "\n", "\t\t\t", "e", " ", 
        "is", " ", "rhs", " ", "e", " ", 
        RowBox[{"(", 
         RowBox[{"of", " ", "symbolA"}], ")"}], " ", "and", " ", "has", " ", 
        "the", " ", 
        RowBox[{"user", "'"}], "s", " ", "context"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "one", " ", "we", " ", "want", "\n", "\t\t", 
       "contextUser"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"Context", "[", "symbolUser", "]"}], " ", "is", " ", "the", 
       " ", 
       RowBox[{"user", "'"}], "s", " ", "context", " ", "in", " ", "list", 
       " ", "form", "\n", "\t\t", "Since", " ", "contextUser", " ", "is", " ",
        "a", " ", "list"}]}], ",", " ", 
     RowBox[{"eList", " ", "=", " ", 
      RowBox[{
       RowBox[{"contextUser", "<>", "\"\<e\>\""}], " ", "is", " ", "a", " ", 
       "list", " ", "containing", " ", 
       RowBox[{"user", "'"}], "s", " ", "e"}]}], ",", " ", 
     RowBox[{
      RowBox[{"and", "\n", "\t\t", 
       RowBox[{"ToExpression", "[", "eList", "]"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"e", " ", "in", " ", 
        RowBox[{"user", "'"}], "s", " ", "context", "\n", "\t\t", "\n", "\t", 
        "The", " ", "3", " ", "init", " ", "symbols", " ", 
        RowBox[{"(", 
         RowBox[{"algebraType", ",", " ", "signatureType", ",", " ", 
          RowBox[{"and", " ", "numTimelike"}]}], ")"}], " ", "similarly", " ",
         "will", " ", "have", " ", "GeomAlgPkg`private`", " ", "\n", "\t\t", 
        "context", " ", "the", " ", "first", " ", "time", " ", "InitializeG", 
        " ", "is", " ", "called", " ", "within", " ", "a", " ", 
        RowBox[{"session", ".", " ", "In"}], " ", "that", " ", "case", " ", 
        "the", " ", "first", " ", "\"\<Head\>\"", "\n", "\t\t", "if"}], "-", 
       RowBox[{
       "test", " ", "will", " ", "be", " ", "true", " ", "and", " ", "the", 
        " ", "ccontext", " ", "shadow", " ", "is", " ", "set", " ", "not", 
        " ", "only", " ", "for", " ", "e", " ", "but", " ", "for", " ", "the",
         " ", "init", " ", "symbols"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"also", ".", "\n", "\t", "The"}], " ", "user", " ", "may", " ", 
      "or", " ", "may", " ", "not", " ", "have", " ", "previously", " ", 
      "used", " ", "the", " ", "palette", " ", "to", " ", "set", " ", "the", 
      " ", "init", " ", 
      RowBox[{"symbols", ".", " ", "If"}], " ", "he", " ", 
      RowBox[{"hasn", "'"}], "t"}], ",", " ", 
     RowBox[{
      RowBox[{
      "then", "\n", "\t\t", "the", " ", "2", "nd", " ", "\"\<Head\>\"", " ", 
       "if"}], "-", 
      RowBox[{
      "test", " ", "will", " ", "be", " ", "true", " ", "and", " ", "default",
        " ", "values", " ", "are", " ", 
       RowBox[{"set", ".", "\n", "\t", "In"}], " ", "subsequent", " ", 
       "calls", " ", "of", " ", "InitializeG", " ", "these", " ", "if"}], "-", 
      RowBox[{
      "tests", " ", "will", " ", "be", " ", "false", " ", "and", " ", "so", 
       " ", "redundant", " ", "shadow", " ", "\n", "\t\t", "correcting", " ", 
       "will", " ", "not", " ", 
       RowBox[{"occur", ".", "\n", "\t", "Finally"}]}]}], ",", " ", 
     RowBox[{
     "we", " ", "need", " ", "e", " ", "and", " ", "contextUser", " ", "to", 
      " ", "be", " ", "global", " ", "within", " ", "context", " ", 
      "GeomPkg`Private`so", " ", "they", " ", "can", " ", "be", " ", "used", 
      " ", "\n", "\t\t", "repeatedly", " ", "duricng", " ", "a", " ", 
      "session", " ", "\n", "\t", "We", " ", "need", " ", "the", " ", "3", 
      " ", "init", " ", "symbols", " ", "to", " ", "be", " ", "global", " ", 
      "and", " ", "available", " ", "to", " ", "the", " ", 
      RowBox[{"user", "'"}], "s", " ", "context", " ", "because", " ", "the", 
      " ", "palette", "\n", "\t\t", "settings", " ", "are", " ", "dynamic", 
      " ", "and", " ", "will", " ", "change", " ", "or", " ", "be", " ", 
      "changed", " ", "in", " ", "sync", " ", "with", " ", "the", " ", "init",
       " ", "symbols", " ", "here"}]}], "\n", "*)"}], "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "algebraType", ",", "signatureType", ",", "numTimelike", ",", 
       "clifOutput"}], "}"}], ",", "\n", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "signatureType", "]"}], "\[Equal]", "Symbol"}], 
        ",", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"If", " ", "true"}], ",", " ", 
          RowBox[{
          "this", " ", "signatureType", " ", "symbol", " ", "has", " ", 
           "GeomAlgPkg", " ", "context"}]}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"algebraType", "=", "Global`algebraType"}], ";", "\n", 
         "\t\t", 
         RowBox[{"signatureType", "=", "Global`signatureType"}], ";", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "context", " ", "to", " ", "Global`", " ", "for", 
           " ", "init", " ", "symbols"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"numTimelike", "=", "Global`numTimelike"}]}]}], "\n", "\t", 
       "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "signatureType", "]"}], "\[Equal]", "Symbol"}], 
        ",", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"If", " ", "true"}], ",", " ", 
          RowBox[{
          "then", " ", "Global`", " ", "signatureType", " ", "has", " ", 
           "not", " ", "yet", " ", "been", " ", "set"}]}], " ", "*)"}], "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"InitializeG", "::", "warning"}], "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"Global`algebraType", "=", "1"}], ";", "  ", "\n", "\t\t\t", 
         
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
            "\"\<Evaluate\>\"", " ", "causes", " ", "Global`algebraType"}], 
            " ", "=", " ", "2"}], ";", " ", 
           RowBox[{
            RowBox[{
            "else", " ", "would", " ", "set", " ", "GeomAlgPkg`algebraType"}],
             " ", "=", " ", "2"}]}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"Global`signatureType", "=", "1"}], ";", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Set", " ", "values", " ", "for", " ", "init", " ", "variables"}], 
          " ", "*)"}], "\n", "\t\t", 
         RowBox[{"Global`numTimelike", "=", "0"}]}]}], "\t", "\n", "\t", 
       "]"}], ";", " ", "\n", "\n", "\t", 
      RowBox[{"clifOutput", "=", 
       RowBox[{"clifInput", "/.", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubsuperscriptBox["e", "u_", "2"], "/;", 
            RowBox[{"algebraType", "\[Equal]", "2"}]}], ":>", "0"}], ",", 
          RowBox[{
           RowBox[{
            SubsuperscriptBox["e", "u_", "2"], "/;", 
            RowBox[{"u", "\[LessEqual]", "numTimelike"}]}], ":>", 
           RowBox[{"-", "signatureType"}]}], ",", 
          RowBox[{
           SubsuperscriptBox["e", "u_", "2"], ":>", "signatureType"}]}], 
         "}"}]}]}], ";", "\n", "\t\t", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug1", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<InitializeG: algebraType = \>\"", ",", "algebraType", ",", 
           "\"\<, signatureType = \>\"", ",", "\n", "\t\t\t", "signatureType",
            ",", "\"\<, and numTimelike = \>\"", ",", "numTimelike"}], "]"}], 
         ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Context of e: \>\"", ",", 
           RowBox[{"Context", "[", "e", "]"}]}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Clif Input = \>\"", ",", "clifInput", ",", 
           "\"\<, and Clif Ouput = \>\"", ",", "clifOutput"}], "]"}]}]}], 
       "\n", "\t", "]"}], ";", "\n", "\t", "clifOutput"}]}], "\n", "]"}]}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "InitializeG", " ", "function"}], "   ", 
   "*)"}], "\t\t\t\t\t\t", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"ShadowSymbol", "[", "symbol_", "]"}], ":=", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"contextUser", "<>", 
      RowBox[{"ToString", "[", "symbol", "]"}]}], "]"}]}], " ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"MaxDimG", "[", "clif_", "]"}], ":=", "    ", 
  RowBox[{"(*", " ", "\n", "\t", 
   RowBox[{
    RowBox[{"INPUT", ":", " ", "clif"}], " ", "\[Dash]", " ", 
    RowBox[{
     RowBox[{"A", " ", "users", " ", 
      RowBox[{"clif", ".", " ", "Coefficients"}], " ", "can", " ", "be", " ", 
      "either", " ", "values", " ", "or", " ", "symbols", "\n", "\t", 
      RowBox[{"PROCESS", ":", " ", 
       RowBox[{
       "Flatten", " ", "the", " ", "subscript", " ", "list", " ", "and", " ", 
        "find", " ", "the", " ", "maximum", "\n", "\t", "OUTPUT"}], ":", " ", 
       "maxDim"}]}], " ", "=", " ", 
     RowBox[{
     "largest", " ", "subscript", " ", "value", " ", "on", " ", "any", " ", 
      RowBox[{
       SubscriptBox["e", "i"], ".", " ", "Used"}], " ", "when", " ", 
      "collecting", " ", "terms", " ", "in", " ", "clif", " ", "output"}]}]}],
    "  ", "*)"}], "\n", "\t", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"flatSubscriptList", ",", "maxDim"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"flatSubscriptList", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"SubscriptListG", "[", "clif", "]"}], "]"}]}], ";", " ", "\n", 
     "\t\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Want", " ", "maxDim"}], " ", "\[GreaterEqual]", " ", 
        RowBox[{"1.", " ", "Thus"}]}], ",", 
       RowBox[{
        RowBox[{
        "c", " ", "use", " ", "clif", " ", "rather", " ", "than", " ", 
         "clif"}], " ", "-", " ", "const"}]}], "  ", "*)"}], "\n", "\t\t", 
     RowBox[{"maxDim", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Max", "[", "flatSubscriptList", "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Extra", " ", "max", " ", "takes", " ", "care", " ", "of", " ", 
        "clif"}], " ", "=", " ", "0"}], " ", "*)"}], "\n", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"debug2", ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Print", "[", "]"}], ";", "\n", "\t\t\t", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<MaxDim: Flattened list of subscripts = flatSubscriptList = \
\>\"", ",", "\n", "\t\t\t\t", "flatSubscriptList"}], "]"}], ";", "\n", 
        "\t\t\t", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Max dim = largest subscript = \>\"", ",", "maxDim"}], 
         "]"}]}]}], "\n", "\t\t", "]"}], ";", "\n", "\t", "maxDim"}]}], "\n", 
   "\t", "]"}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "MaxDimG", " ", "Module"}], "\t", 
   "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691073072029634*^9, 3.691073593702551*^9, 
   3.691073646277369*^9, 3.691073715183025*^9, 3.691073841869029*^9, 
   3.691073879917136*^9, {3.6910742437762337`*^9, 3.691074246906845*^9}, 
   3.691074290856971*^9, {3.69107437586687*^9, 3.691074402029483*^9}, {
   3.691086119521948*^9, 3.6910861791913633`*^9}, {3.691087874687943*^9, 
   3.6910878857564077`*^9}, {3.691106026077119*^9, 3.6911060448791103`*^9}, {
   3.691106126194209*^9, 3.691106167168133*^9}, {3.69110725558745*^9, 
   3.691107257249641*^9}, {3.691107328838606*^9, 3.691107366853805*^9}, {
   3.691107406148611*^9, 3.691107551656928*^9}, {3.6911076492996187`*^9, 
   3.6911076538262177`*^9}, {3.691108305707941*^9, 3.6911083336409807`*^9}, {
   3.691108384830194*^9, 3.691108384844342*^9}, 3.69110855844882*^9, {
   3.691162434128428*^9, 3.6911624376145887`*^9}, {3.691165259193399*^9, 
   3.69116531333857*^9}, {3.691170784687316*^9, 3.691170784705866*^9}, {
   3.6911844920771093`*^9, 3.691184506083955*^9}, {3.691184543087542*^9, 
   3.691184869867704*^9}, {3.691184901517408*^9, 3.691184982453807*^9}, {
   3.691185016936391*^9, 3.691185018542036*^9}, {3.691187000586645*^9, 
   3.691187097367346*^9}, 3.691187352826626*^9, 3.691189678442358*^9, {
   3.69118972529593*^9, 3.691189745896708*^9}, 3.6911899567312717`*^9, 
   3.6911905329056892`*^9, {3.6911909041481037`*^9, 3.6911909272743473`*^9}, {
   3.6911915032907*^9, 3.691191514376099*^9}, {3.691191655459311*^9, 
   3.691191660905697*^9}, {3.691192459676022*^9, 3.691192461521668*^9}, 
   3.6911926671532173`*^9, {3.691192732171939*^9, 3.6911927619791183`*^9}, {
   3.691192797616927*^9, 3.69119281008963*^9}, {3.691193993454647*^9, 
   3.69119401237532*^9}, {3.6912387141105213`*^9, 3.6912387504485483`*^9}, 
   3.691238817725787*^9, {3.6913466447964983`*^9, 3.6913466976751204`*^9}, 
   3.691346768195716*^9, {3.69134943074549*^9, 3.6913494761669807`*^9}, {
   3.691619122347864*^9, 3.691619123545745*^9}, {3.6916191651113777`*^9, 
   3.69161918110955*^9}, {3.691619213035741*^9, 3.6916192220318003`*^9}, {
   3.691619265847233*^9, 3.6916193631557093`*^9}, {3.691619426715089*^9, 
   3.691619582194633*^9}, {3.691619614032544*^9, 3.6916197616711206`*^9}, {
   3.6916198074684134`*^9, 3.691619910760448*^9}, {3.6916200039828*^9, 
   3.691620018617032*^9}, {3.691620209983103*^9, 3.691620355010838*^9}, {
   3.691620387511203*^9, 3.691620638439378*^9}, {3.691620679537183*^9, 
   3.691620698796571*^9}, {3.691620751729542*^9, 3.6916208157827*^9}, {
   3.691620866223737*^9, 3.691620961955102*^9}, {3.691621031004074*^9, 
   3.6916211140792437`*^9}, {3.691621202688745*^9, 3.691621258473289*^9}, {
   3.6916213222679033`*^9, 3.6916214153633833`*^9}, {3.6916214685384502`*^9, 
   3.69162206075952*^9}, {3.691622147402643*^9, 3.69162224402709*^9}, {
   3.691622274629278*^9, 3.691622388117031*^9}, {3.691622430160095*^9, 
   3.691622500040366*^9}, {3.691622530180078*^9, 3.69162263394518*^9}, {
   3.69162272884077*^9, 3.691623095917878*^9}, {3.691623158182355*^9, 
   3.691623341919158*^9}, {3.691623391454083*^9, 3.6916233933419228`*^9}, {
   3.691690720130065*^9, 3.6916907410515213`*^9}, {3.691690784824985*^9, 
   3.691690833517528*^9}, {3.691690865299103*^9, 3.691690866868834*^9}, {
   3.6916909723980722`*^9, 3.6916910597160883`*^9}, {3.69169110430298*^9, 
   3.6916911645396442`*^9}, {3.691691199216717*^9, 3.691691265862844*^9}, {
   3.69169129756851*^9, 3.6916913005183907`*^9}, {3.691691341540779*^9, 
   3.69169135698433*^9}, {3.691691404183031*^9, 3.691691444434626*^9}, {
   3.6916915163852587`*^9, 3.6916915633269367`*^9}, {3.691691652545977*^9, 
   3.691691700784278*^9}, {3.6916917389074497`*^9, 3.6916917910999737`*^9}, {
   3.69169182652103*^9, 3.691691827208766*^9}, {3.6916918657321568`*^9, 
   3.691692000055911*^9}, 3.691692037767359*^9, {3.6916968198093967`*^9, 
   3.691696828432233*^9}, {3.691696866049502*^9, 3.691696876002838*^9}, {
   3.691697448143045*^9, 3.691697450060754*^9}, {3.691698441982704*^9, 
   3.691698449392152*^9}, 3.6916987260928373`*^9, {3.691698789716948*^9, 
   3.691698793691825*^9}, {3.691699992073802*^9, 3.691700013303595*^9}, {
   3.691700047221971*^9, 3.691700079996254*^9}, {3.691700399886589*^9, 
   3.691700428999136*^9}, 3.691700804161604*^9, 3.6917009353888483`*^9, {
   3.691701351975751*^9, 3.691701369638299*^9}, {3.6917014883701267`*^9, 
   3.691701510245738*^9}, {3.691701758135697*^9, 3.691701823230007*^9}, {
   3.691701877373101*^9, 3.691701889305971*^9}, {3.691702064899274*^9, 
   3.691702144788375*^9}, {3.691702208491086*^9, 3.691702242845152*^9}, {
   3.691702441731718*^9, 3.6917024609153*^9}, {3.691702608706099*^9, 
   3.691702627814026*^9}, {3.691702814857513*^9, 3.6917028478114367`*^9}, {
   3.69170296665366*^9, 3.6917029667966433`*^9}, 3.691703214638547*^9, {
   3.69170338965217*^9, 3.691703408029749*^9}, {3.691703759969933*^9, 
   3.691703910050005*^9}, {3.691704357315938*^9, 3.6917043629283247`*^9}, {
   3.691704447481073*^9, 3.691704453551902*^9}, {3.691704665206128*^9, 
   3.691704738393385*^9}, {3.6917047999154243`*^9, 3.69170481539505*^9}, {
   3.6917049164256496`*^9, 3.6917049283960733`*^9}, {3.691705411845625*^9, 
   3.691705435424432*^9}, {3.691706024312407*^9, 3.691706041410658*^9}, {
   3.691706153025526*^9, 3.691706221979604*^9}, {3.6917063796902523`*^9, 
   3.691706386177301*^9}, {3.691706485400827*^9, 3.6917064918957376`*^9}, {
   3.691706552696*^9, 3.6917065970346947`*^9}, {3.691707045181465*^9, 
   3.6917070952812977`*^9}, {3.691707357298399*^9, 3.691707366065022*^9}, {
   3.6917074328103523`*^9, 3.691707519884851*^9}, 3.691707773869886*^9, {
   3.6917078376290216`*^9, 3.691707846090167*^9}, {3.6917079194261503`*^9, 
   3.691707960389214*^9}, {3.691708018393982*^9, 3.691708179234384*^9}, {
   3.691708255101763*^9, 3.6917082753851423`*^9}, {3.691708310553988*^9, 
   3.691708485330987*^9}, {3.691708516999538*^9, 3.691708527577738*^9}, {
   3.691708574809896*^9, 3.691708808128983*^9}, {3.691708879399397*^9, 
   3.691708881109161*^9}, {3.691708970608492*^9, 3.6917089825845613`*^9}, {
   3.691709032735952*^9, 3.6917090451053057`*^9}, 3.69170909584676*^9, {
   3.691709156997154*^9, 3.6917092328903427`*^9}, {3.691709283549612*^9, 
   3.691709329577991*^9}, 3.691709597661519*^9, {3.691709917249571*^9, 
   3.691709932840454*^9}, {3.691710099591851*^9, 3.69171016081443*^9}, {
   3.6917813061747828`*^9, 3.691781336135394*^9}, {3.691781905893354*^9, 
   3.6917819498885107`*^9}, {3.691782059373178*^9, 3.691782101720005*^9}, {
   3.69178242980579*^9, 3.691782430658231*^9}, {3.691782577391872*^9, 
   3.69178282845609*^9}, {3.6917828784155617`*^9, 3.69178296958751*^9}, {
   3.691784157046929*^9, 3.691784171701013*^9}, {3.691784208250478*^9, 
   3.691784268494217*^9}, {3.691784377345928*^9, 3.691784454260182*^9}, {
   3.691785861241477*^9, 3.691785892399961*^9}, {3.6917859914297113`*^9, 
   3.691786133609276*^9}, {3.691786761512298*^9, 3.691786769044132*^9}, {
   3.69178680428154*^9, 3.6917868092656927`*^9}, {3.6917868457998743`*^9, 
   3.691786876915346*^9}, {3.691786930445755*^9, 3.691787109905755*^9}, 
   3.691787146076046*^9, {3.6917918903637133`*^9, 3.691791895028263*^9}, 
   3.691864138465217*^9, {3.691864178447845*^9, 3.6918642614240294`*^9}, {
   3.691864314280423*^9, 3.691864332848571*^9}, {3.6918643925883303`*^9, 
   3.69186458447999*^9}, {3.6918855955672197`*^9, 3.691885609795807*^9}, {
   3.691960235880624*^9, 3.691960277660583*^9}, {3.6919633488443203`*^9, 
   3.6919634151352453`*^9}, 3.691963509289929*^9, {3.6919635560800323`*^9, 
   3.691963849368895*^9}, {3.691963945335637*^9, 3.691963996758793*^9}, {
   3.691964040598074*^9, 3.6919642480971746`*^9}, {3.691964299295141*^9, 
   3.691964317756186*^9}, {3.6919643572271137`*^9, 3.691964371351062*^9}, {
   3.691964462078627*^9, 3.691964469010771*^9}, {3.691964505473982*^9, 
   3.691964551401105*^9}, {3.691964700147852*^9, 3.691964714270238*^9}, 
   3.691964765354154*^9, {3.691964831982633*^9, 3.691964890580367*^9}, {
   3.691964972427051*^9, 3.691965008273418*^9}, 3.691965390142434*^9, {
   3.691965535683763*^9, 3.691965537218883*^9}, {3.6919656103465548`*^9, 
   3.691965610471467*^9}, {3.691970494033272*^9, 3.691970501139757*^9}, {
   3.691970547479467*^9, 3.691970586393201*^9}, {3.6919719830241423`*^9, 
   3.691972033613818*^9}, {3.691972068593614*^9, 3.691972125039908*^9}, {
   3.6919721823621273`*^9, 3.6919721904818363`*^9}, 3.69197230310515*^9, 
   3.691972345728516*^9, {3.692447649289019*^9, 3.692447652326179*^9}, {
   3.6924477230219927`*^9, 3.692447748856415*^9}, {3.6924479438283377`*^9, 
   3.6924479687534647`*^9}, 3.692448006317865*^9, {3.6924480427328863`*^9, 
   3.692448048644742*^9}, {3.692448154198873*^9, 3.6924482067484818`*^9}, {
   3.6924482583554783`*^9, 3.6924483266802597`*^9}, {3.692448401142524*^9, 
   3.6924484856254063`*^9}, {3.692448538640883*^9, 3.692448600442494*^9}, {
   3.6924488015291157`*^9, 3.6924488221622334`*^9}, {3.692448917003429*^9, 
   3.69244892148201*^9}, {3.692448962634309*^9, 3.692448966752129*^9}, {
   3.692450329598258*^9, 3.692450332585291*^9}, {3.692450431174185*^9, 
   3.692450432339942*^9}, {3.692450633974704*^9, 3.692450653681872*^9}, {
   3.692453219042562*^9, 3.692453221491519*^9}, {3.692454068130411*^9, 
   3.692454161563936*^9}, {3.692454199295353*^9, 3.692454203843739*^9}, {
   3.6924575209524317`*^9, 3.692457533686472*^9}, {3.692465120733327*^9, 
   3.6924651376721373`*^9}, 3.69246519779385*^9, {3.6924656719409323`*^9, 
   3.692465675259336*^9}, {3.6924666409955397`*^9, 3.6924666574915943`*^9}, {
   3.692466690692377*^9, 3.692466746394637*^9}, {3.69246796051506*^9, 
   3.692468000105192*^9}, {3.6924680940805283`*^9, 3.692468103394847*^9}, {
   3.692468209964491*^9, 3.692468224062688*^9}, {3.692485361788637*^9, 
   3.692485379173468*^9}, {3.692552181343501*^9, 3.692552184742218*^9}, {
   3.692552228991523*^9, 3.692552229606148*^9}, 3.692552311888756*^9, {
   3.692552657818406*^9, 3.692552685619437*^9}, 3.692552720082074*^9, {
   3.692553292259109*^9, 3.6925532946740313`*^9}, 3.692553825066975*^9, {
   3.6925586614601297`*^9, 3.6925587042893333`*^9}, {3.692561916073111*^9, 
   3.692561928257863*^9}, 3.692562208177814*^9, {3.692562735792757*^9, 
   3.692562736287281*^9}, 3.6925628694393883`*^9, {3.692563056947425*^9, 
   3.692563063850909*^9}, {3.6925633009036694`*^9, 3.692563338964587*^9}, 
   3.692564592357628*^9, {3.695772531243297*^9, 3.695772549512521*^9}, 
   3.69577320901786*^9, 3.695817231255636*^9, {3.69582890847761*^9, 
   3.6958289619793797`*^9}, {3.695845721039344*^9, 3.695845725812244*^9}, {
   3.695846196817499*^9, 3.695846197335943*^9}, {3.695849945616826*^9, 
   3.695849955760171*^9}, {3.6959143493700733`*^9, 3.695914379939509*^9}, {
   3.695914459737913*^9, 3.695914494782695*^9}, {3.695938699361771*^9, 
   3.695938700301414*^9}, {3.695940595964538*^9, 3.6959406055473213`*^9}, {
   3.6959408463412724`*^9, 3.6959408962660513`*^9}, {3.695940934929748*^9, 
   3.695940948549765*^9}, {3.695999350581571*^9, 3.6959993783339653`*^9}, {
   3.696015683177455*^9, 3.696015698801196*^9}, {3.696015795704211*^9, 
   3.6960158247794247`*^9}, {3.696098858977906*^9, 3.6960988641696463`*^9}, {
   3.69609908996027*^9, 3.696099095910396*^9}, {3.696099365956285*^9, 
   3.6960993692138023`*^9}, {3.6960994005056543`*^9, 
   3.6960994655004597`*^9}, {3.6960995856727448`*^9, 
   3.6960996441584797`*^9}, {3.696099681374023*^9, 3.696100289917819*^9}, {
   3.696100385378051*^9, 3.696100519665941*^9}, {3.696100557618184*^9, 
   3.696100619318768*^9}, {3.6961006534420013`*^9, 3.696100654669394*^9}, {
   3.6961079202848577`*^9, 3.6961079464077053`*^9}, {3.696108072528873*^9, 
   3.6961081002945213`*^9}, {3.6961094902465467`*^9, 3.696109532666628*^9}, {
   3.696198951519014*^9, 3.696198951529867*^9}, {3.696206140675846*^9, 
   3.696206152271223*^9}, {3.696206303928269*^9, 3.6962063189825363`*^9}, {
   3.6962063789391947`*^9, 3.6962063815097017`*^9}, {3.6962064520526*^9, 
   3.6962065921404343`*^9}, 3.696207111375762*^9, {3.696272994191226*^9, 
   3.696273083816949*^9}, {3.696273121099888*^9, 3.696273128559215*^9}, {
   3.6962731629345827`*^9, 3.696273171200124*^9}, {3.6962732177093678`*^9, 
   3.696273338056046*^9}, {3.69627337001744*^9, 3.696273393307851*^9}, {
   3.696273468446933*^9, 3.6962735779549503`*^9}, {3.69627364800111*^9, 
   3.696273700848666*^9}, {3.696273915795945*^9, 3.696273930575033*^9}, 
   3.696274095059104*^9, 3.696274131335472*^9, {3.696274254471304*^9, 
   3.69627426100101*^9}, {3.6962744410799522`*^9, 3.696274442634307*^9}, {
   3.696274495379098*^9, 3.696274496727165*^9}, {3.696274657255786*^9, 
   3.696274763011574*^9}, {3.696274797320148*^9, 3.696274805175572*^9}, {
   3.696275526550695*^9, 3.696275529215891*^9}, {3.6962761567773037`*^9, 
   3.696276161400321*^9}, {3.696617325563945*^9, 3.6966173635507193`*^9}, {
   3.6966173951424723`*^9, 3.6966173963251677`*^9}, {3.69661744511022*^9, 
   3.696617462214684*^9}, {3.696713967977241*^9, 3.696714032659342*^9}, {
   3.696720428600506*^9, 3.696720463964978*^9}, {3.696720660796727*^9, 
   3.696720687552085*^9}, {3.696720872179542*^9, 3.696720875261348*^9}, {
   3.696720965191297*^9, 3.6967209979224653`*^9}, {3.696721042380206*^9, 
   3.696721059453055*^9}, {3.696721091562389*^9, 3.696721127028336*^9}, 
   3.6967908156977253`*^9, {3.696790956020483*^9, 3.696790956680894*^9}, {
   3.6968847354827547`*^9, 3.696884746209524*^9}, {3.696894089292087*^9, 
   3.696894143580604*^9}, {3.69696789058985*^9, 3.696967894045889*^9}, {
   3.696967948443387*^9, 3.696967967404077*^9}, {3.697230069727665*^9, 
   3.697230073941134*^9}, {3.69723011026936*^9, 3.697230137287163*^9}, {
   3.6972308359207697`*^9, 3.697230893763961*^9}, {3.6972309541055737`*^9, 
   3.697230967004733*^9}, {3.6972310034883423`*^9, 3.697231296211484*^9}, {
   3.6972313316303368`*^9, 3.69723137974903*^9}, {3.6972314203040247`*^9, 
   3.697231507246801*^9}, {3.697231568613351*^9, 3.69723157213583*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["6 List Operations and Support", "Chapter",
 CellChangeTimes->{{3.691074300266736*^9, 3.691074310799621*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClifToListG", "[", "clif_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "conTerm", ",", "freeTerm", ",", "clifFreeList", ",", "clifList"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{"clifList", "=", 
      RowBox[{"ClifToListG", "[", 
       RowBox[{"clif", ",", "conTerm", ",", "freeTerm", ",", "clifFreeList"}],
        "]"}]}]}], "]"}]}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifToListG", "[", 
    RowBox[{"clif_", ",", "conTerm_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"freeTerm", ",", "clifList", ",", "clifFreeList"}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"clifList", "=", 
       RowBox[{"ClifToListG", "[", 
        RowBox[{
        "clif", ",", "conTerm", ",", "freeTerm", ",", "clifFreeList"}], 
        "]"}]}], ";", "clifList"}]}], "]"}]}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifToListG", "[", 
    RowBox[{
    "clif_", ",", "conTerm_", ",", "freeTerm_", ",", "clifFreeList_"}], "]"}],
    ":=", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Optional", " ", 
      RowBox[{"output", ":", " ", "conTerm"}]}], ",", " ", "freeTerm"}], " ", 
    "*)"}], "\n", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", 
      RowBox[{"A", " ", "clif", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"i", ".", "e"}], ",", " ", 
         RowBox[{"a", " ", "multivector"}]}], ")"}], "\n", "\t", "PROCESS"}], 
      ":", " ", 
      RowBox[{
      "Expand", " ", "the", " ", "list", " ", "to", " ", "simplify", " ", 
       "later", " ", 
       RowBox[{"multiplications", ".", "\n", "\t\t\t\t", "Want"}], " ", 
       "coefficients", " ", "of", " ", "blades", " ", "to", " ", "be", " ", 
       "single", " ", "terms", " ", 
       RowBox[{"(", 
        RowBox[{"not", " ", "sums"}], ")"}]}]}], ",", " ", 
     RowBox[{
     "to", " ", "greatly", " ", "reduce", " ", "the", " ", "\n", "\t\t\t\t", 
      "number", " ", "of", " ", "ways", " ", "a", " ", "product", " ", 
      "could", " ", "be", " ", "simplified"}], ",", " ", 
     RowBox[{
     "thus", " ", "simplifying", " ", "the", " ", "code", " ", "greatly", 
      "\n", "\t\t\t ", "Find", " ", "the", " ", "constant", " ", "term", 
      RowBox[{"(", "s", ")"}], " ", "by", " ", "setting", " ", "all", " ", 
      "other", " ", "terms", " ", "to", " ", "zero", "\n", "\t\t\t ", "Find", 
      " ", "the", " ", "list", " ", "of", " ", "constant", " ", "terms", " ", 
      "by", " ", "generating", " ", "the", " ", 
      RowBox[{"clif", "'"}], "s", " ", "list", " ", "and", " ", "setting", 
      " ", "all", " ", 
      SubscriptBox["e", "i"], " ", "terms", " ", "to", " ", "zero"}], ",", 
     "\n", "\t\t\t    ", 
     RowBox[{
      RowBox[{
      "and", " ", "then", " ", "deleting", " ", "zero", " ", "terms", " ", 
       "from", " ", "list", "\n", "\t\t\t\t", "Caution", " ", "1.", " ", 
       "Must", " ", "delete", " ", "both", " ", "infinite", " ", "and", " ", 
       "non"}], "-", 
      RowBox[{"infinite", " ", "precision", " ", 
       RowBox[{"0", "'"}], "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"i", ".", "e", "."}], ",", " ", 
         RowBox[{"0", " ", "and", " ", "0."}]}], ")"}], "\n", "\t\t\t\t", 
       "Caution", " ", "2.", " ", "It", " ", "might", " ", "seem", " ", 
       "easier", " ", "to", " ", "just", " ", "make", " ", "a", " ", "list", 
       " ", "from", " ", "the", " ", "already"}], "-", 
      RowBox[{"computed", " ", "constant", " ", "term", 
       RowBox[{"(", "s", ")"}], "\n", "\t\t\t\t\t", "But"}]}], ",", " ", 
     RowBox[{
     "if", " ", "some", " ", "terms", " ", "have", " ", "precision", " ", 
      "set", " ", "but", " ", "not", " ", "others"}], ",", " ", 
     RowBox[{
     "it", " ", "is", " ", "possible", " ", "for", "\n", "\t\t\t\t\t", 
      "Mathematica", " ", "to", " ", "combine", " ", "terms", " ", "in", " ", 
      "the", " ", "constant", " ", "but", " ", "not", " ", "in", " ", "the", 
      " ", 
      RowBox[{"list", ".", " ", "\n", "\t\t\t\t\t", "We"}], " ", "need", " ", 
      "the", " ", "constant", " ", "list", " ", "to", " ", "exactly", " ", 
      "match", " ", "the", " ", "constants", " ", "in", " ", "the", " ", 
      "whole", " ", "list", " ", "rather", " ", "than", " ", "\n", 
      "\t\t\t\t\t", "the", " ", "constants", " ", "in", " ", "the", " ", 
      "constant", " ", "term", "\n", "\t\t\t ", "Make", " ", "a", " ", "list",
       " ", "from", " ", "the", " ", "constant", " ", "term", 
      RowBox[{"(", "s", ")"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "separating", " ", "the", " ", "terms", " ", "by", " ", "commas", "\n", 
       "\t\t\t ", "To", " ", "make", " ", "a", " ", "list", " ", "from", " ", 
       "the", " ", "clif", " ", "where", " ", "all", " ", "constant", " ", 
       "terms", " ", "are", " ", "combined", " ", "to", " ", "be", " ", "the",
        " ", "1", "st", " ", 
       RowBox[{"element", ":", "\n", "\t\t\t    ", 
        RowBox[{
        "Make", " ", "a", " ", "list", " ", "from", " ", "the", " ", "clif", 
         "\n", "\t\t\t    ", "Drop", " ", "the", " ", "constant", " ", 
         "terms"}]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
       "the", " ", "first", " ", "n", " ", "terms", " ", "where", " ", "n"}], 
       " ", "=", " ", 
       RowBox[{
        RowBox[{
        "length", " ", "of", " ", "list", " ", "of", " ", "constant", " ", 
         "terms", "\n", "\t\t\t    ", "Prepend", " ", "the", " ", "constant", 
         " ", "term", 
         RowBox[{"(", "s", ")"}], " ", "as", " ", "a", " ", "single", " ", 
         "element", "\n", "\t\t\t ", "If", " ", "constant"}], " ", 
        "\[NotEqual]", " ", "0"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"the", " ", "free", " ", "term"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
         "the", " ", "clif", " ", "list", " ", "without", " ", "the", " ", 
          "first", " ", "term", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"i", ".", "e", "."}], ",", " ", 
            RowBox[{
             RowBox[{"w", "/", "o"}], " ", "the", " ", "constants"}]}], ")"}],
           "\n", "\t\t\t    ", "Unless"}], "..."}], " ", "the", " ", "clif", 
        " ", "itself", " ", "is", " ", "just", " ", "a", " ", 
        RowBox[{"constant", ".", "\n", "\t\t\t    ", "Then"}], " ", "the", 
        " ", "free", " ", "term"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
        "0", " ", "and", " ", "the", " ", "free", " ", "term", " ", "list"}], 
        " ", "=", " ", 
        RowBox[{
         RowBox[{"{", "0", "}"}], "\n", "\t\t\t ", 
         RowBox[{"Note", ":", " ", 
          RowBox[{
          "If", " ", "user", " ", "has", " ", "set", " ", "any", " ", 
           "precision", " ", "for", " ", "any", " ", "symbol"}]}]}]}]}]}], 
     ",", " ", 
     RowBox[{
     "then", " ", "0", " ", "receives", " ", "Machine", " ", "Precision", " ",
       "\n", "\t\t\t    ", "and", " ", "IF", " ", "TEST", " ", "for", " ", 
      "0", " ", "must", " ", "also", " ", "test", " ", "for", " ", "0.", " ", 
      
      RowBox[{"(", 
       RowBox[{
        RowBox[{
        "machine", " ", "precision", " ", "version", " ", "of", " ", "zero0", 
         "\n", "\t\t\t ", "\n", "\t", 
         RowBox[{"OUTPUT", ":", "  ", "clifList"}]}], ",", " ", 
        RowBox[{
         RowBox[{
         "a", " ", "list", " ", "of", " ", "the", " ", "separate", " ", 
          "elements", " ", "of", " ", "the", " ", "clif", " ", 
          RowBox[{"(", 
           RowBox[{"directly", " ", "returned"}], ")"}], "\n", "\t\t\t ", 
          "conTerm"}], " ", "=", " ", 
         RowBox[{"Constant", " ", "terms", " ", 
          RowBox[{"(", 
           RowBox[{"if", " ", "any"}], ")"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{
         "collected", " ", "into", " ", "1", "st", " ", "term", " ", "of", 
          " ", "list", " ", 
          RowBox[{"(", 
           RowBox[{"returned", " ", "via", " ", "arg", " ", "list"}], ")"}], 
          "\n", "\t\t\t ", "freeTerm"}], " ", "=", " ", 
         RowBox[{"Non", "-", 
          RowBox[{"constant", " ", "terms"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"if", " ", "any", " ", 
          RowBox[{"(", 
           RowBox[{"returned", " ", "via", " ", "arg", " ", "list"}], ")"}], 
          "\n", "\t\t\t ", "clifFreeList"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"a", " ", "list", " ", "of", " ", "the", " ", "non"}], "-", 
          
          RowBox[{
          "constant", " ", "terms", " ", "of", " ", "the", " ", "clif", "\n", 
           "\t\t\t ", "conTerm"}]}]}], ",", " ", "freeTerm", ",", " ", 
        RowBox[{
        "and", " ", "clifFreeList", " ", "are", " ", "optional", " ", 
         RowBox[{"outputs", ".", " ", "\n", "\t\t\t ", "Use"}], " ", "2", 
         "nd", " ", "definition", " ", "if", " ", "only", " ", "conTerm", " ",
          "is", " ", 
         RowBox[{"needed", ".", "\n", "\t\t\t ", "Use"}], " ", "first", " ", 
         "definition", " ", "if", " ", "neither", " ", "are", " ", 
         RowBox[{"needed", ".", "\n", "\t\t\t ", 
          RowBox[{"Note", ":", " ", 
           RowBox[{
           "Only", " ", "ReverseG", " ", "needs", " ", "more", " ", "than", 
            " ", "conTerm"}]}]}]}], ",", " ", 
        RowBox[{
        "and", " ", "it", " ", "needs", " ", "all", " ", "3", " ", "optional",
          " ", "outputs", "\n", "\t\t\t    ", "ReverseG", " ", "thus", " ", 
         "uses", " ", "the", " ", "3", " ", "definition", "\n", "\t\t\t    ", 
         "Three", " ", "definitions", " ", "are", " ", "used", " ", "in", " ",
          "order", " ", "to", " ", "avoid", " ", "redundant", " ", 
         "recomputing", " ", "of", " ", "the", " ", "optional", " ", 
         "outputs"}]}], "\n", "\t\t\t   "}]}]}], "*)"}], "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clif1", ",", "conList", ",", "len", ",", "clifList0", ",", 
       "clifList"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"clif1", "=", 
       RowBox[{"Expand", "[", "clif", "]"}]}], ";", "\n", "\t", 
      RowBox[{"conTerm", "=", 
       RowBox[{"clif1", "/.", 
        RowBox[{
         SubscriptBox["e", "u_"], "\[Rule]", "0"}]}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "clif1", "]"}], "===", "Plus"}], ",", 
        RowBox[{"clifList0", "=", 
         RowBox[{"List", "@@", "clif1"}]}], ",", 
        RowBox[{"clifList0", "=", 
         RowBox[{"List", "[", "clif1", "]"}]}]}], "]"}], ";", "\t\t", "\n", 
      "\t", 
      RowBox[{"conList", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"clifList0", "/.", 
            RowBox[{
             SubscriptBox["e", "u_"], "\[Rule]", "0"}]}], ",", "0"}], "]"}], 
         ",", "0."}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", "conList", "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"conTerm", "===", "0"}], "||", 
         RowBox[{"conTerm", "===", "0."}]}], ",", "\n", "  \t\t", 
        RowBox[{
         RowBox[{"clifList", " ", "=", " ", "clifList0"}], ";", "\n", 
         "  \t\t", 
         RowBox[{"freeTerm", " ", "=", " ", "clif1"}], ";", "\n", "  \t\t", 
         RowBox[{"clifFreeList", " ", "=", " ", "clifList"}]}], ",", "\n", 
        "  \t", "\n", "  \t\t", 
        RowBox[{
         RowBox[{"clifList", " ", "=", " ", 
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"clifList0", ",", " ", "len"}], "]"}], ",", " ", 
            "conTerm"}], "]"}]}], ";", "\n", "  \t\t", 
         RowBox[{"clifFreeList", " ", "=", " ", 
          RowBox[{"Drop", "[", 
           RowBox[{"clifList", ",", " ", "1"}], "]"}]}], ";", "\n", "  \t\t", 
         
         RowBox[{"freeTerm", " ", "=", " ", 
          RowBox[{"clifFreeList", " ", "/.", " ", 
           RowBox[{"List", " ", "->", " ", "Plus"}]}]}], ";", "\n", "  \t\t", 
         
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"freeTerm", "===", "0"}], "||", 
            RowBox[{"freeTerm", "===", "0."}]}], ",", 
           RowBox[{"clifFreeList", "=", 
            RowBox[{"{", "0", "}"}]}]}], "]"}]}]}], "\n", "  \t", "]"}], ";", 
      "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"debug9", "\[Equal]", "True"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<ClifToListG: Expanded clif = \>\"", ",", "clif1"}], 
          "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Constant term = \>\"", ",", "conTerm", ",", 
           "\"\<,  Constant-term  list = \>\"", ",", "  ", "conList", ",", 
           "\"\<,  Length of list = \>\"", ",", "len"}], "]"}], ";", "\n", 
         "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Precision of constant term = \>\"", ",", 
           RowBox[{"Precision", "[", "conTerm", "]"}]}], "]"}], ";", "\n", 
         "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Clif list with separated constant terms (if any) = \>\"", ",", 
           "clifList0"}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Clif list with combined constant terms (if any) = \>\"", ",", 
           " ", "clifList"}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Free term = \>\"", ",", " ", "freeTerm"}], "]"}], ";", 
         "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Free list = \>\"", ",", " ", "clifFreeList"}], 
          "]"}]}]}], "\n", "  \t", "]"}], ";", "\n", "\n", "\t", 
      "clifList"}]}], "\n", "]"}]}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "ClifToListG"}], "  ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstantToZeroG", "[", 
    RowBox[{"clif_", ",", "list_", ",", "const_"}], "]"}], ":=", "  ", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", "Clif"}], ",", " ", 
     RowBox[{
      RowBox[{
      "a", " ", "list", " ", "of", " ", "clif", " ", "subscripts", " ", "or", 
       " ", "e"}], "-", "subscripts"}], ",", " ", 
     RowBox[{
      RowBox[{
      "and", " ", "the", " ", "constant", " ", "term", " ", "of", " ", "the", 
       " ", "clif", "\n", "\t", 
       RowBox[{"OUTPUT", ":", " ", "list1"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
       "Clif", " ", "list", " ", "with", " ", "1", "st", " ", "term", " ", 
        "replaced", " ", "by", " ", "0", " ", "if", " ", "constant", " ", 
        "is", " ", "non"}], "-", "zero"}]}]}], "  ", "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "list1", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"const", "===", "0"}], "||", 
         RowBox[{"const", "===", "0."}]}], ",", 
        RowBox[{"list1", "=", "list"}], ",", 
        RowBox[{"list1", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"list", ",", 
           RowBox[{"1", "\[Rule]", "0"}]}], "]"}]}]}], "]"}], ";", "\n", "\t",
       "list1"}]}], "]"}]}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Sends", " ", "constant", " ", "term", " ", "of", " ", "list"}], 
    ",", " ", 
    RowBox[{"if", " ", "any"}], ",", " ", 
    RowBox[{"to", " ", "0"}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eSubscriptListG", "[", "0", "]"}], ":=", 
   RowBox[{"{", "0", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eSubscriptListG", "[", "clif_", "]"}], ":=", " ", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", "clif"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"A", " ", "multivector", "\n", "\t", 
       RowBox[{"PROCESS", ":", "\n", "\t", "OUTPUT", ":", " ", "eList"}]}], 
      " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"list", " ", "of", " ", 
           SubscriptBox["e", 
            RowBox[{"i", ",", "j", ",", "..."}]], "corresponding", " ", "to", 
           " ", 
           SubscriptBox["e", "i"], 
           SubscriptBox["e", "j"]}], "..."}], " ", "terms", " ", "in", " ", 
         "clif", "\n", "\t\t\t", "1", "st", " ", "term", " ", "is", " ", 
         "replaced", " ", "by", " ", "0", " ", "if", " ", "constant", " ", 
         "term", " ", "of", " ", "clif", " ", "is", " ", "non"}], "-", 
        RowBox[{"zero", " ", "\n", "\t\t\t", "eList"}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", " ", "0", " ", "}"}], " ", "if", " ", "clif"}], " ", 
        "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"0", "\n", "\t\t\t", 
           RowBox[{"Example", ":", " ", 
            RowBox[{"5", " ", "+", " ", 
             RowBox[{"3", " ", 
              SubscriptBox["e", "1"], 
              SubscriptBox["e", "2"]}]}]}]}], " ", "\[Rule]", " ", "eList"}], 
         " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           SubscriptBox["e", 
            RowBox[{"1", ",", "2"}]]}], "}"}]}]}]}]}]}], "  ", "*)"}], "\n", 
   "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"clifList", ",", "eList", ",", "const"}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"clifList", "=", 
       RowBox[{
        RowBox[{"ClifToListG", "[", 
         RowBox[{"clif", ",", "const"}], "]"}], "/.", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["e", "u_"], "2"], "\[Rule]", 
         SubscriptBox["e", 
          RowBox[{"u", ",", "u"}]]}]}]}], ";", " ", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Reduce", " ", "square", " ", "terms"}], ",", " ", 
        RowBox[{"if", " ", 
         RowBox[{"any", ".", " ", 
          RowBox[{"Example", ":", " ", 
           RowBox[{
            SubsuperscriptBox["e", "3", "2"], 
            SubsuperscriptBox["e", "4", "2"], " ", "changes", " ", "to", " ", 
            
            SubscriptBox["e", 
             RowBox[{"3", ",", "3"}]], " ", 
            SubscriptBox["e", 
             RowBox[{"4", ",", "4"}]], "  ", "\n", "\t\t\t", "Note"}], ":", 
           " ", 
           RowBox[{
           "The", " ", "only", " ", "time", " ", "there", " ", "may", " ", 
            "be", " ", "square", " ", "terms", " ", "is", " ", "during", " ", 
            "computation", " ", "of", " ", "geometric", " ", 
            "product"}]}]}]}]}], " ", "*)"}], "\n", "\t\t", 
      RowBox[{"eList", "=", 
       RowBox[{
        RowBox[{"ConstantToZeroG", "[", 
         RowBox[{"clif", ",", "clifList", ",", "const"}], "]"}], "\n", 
        "\t\t\t", "//.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["e", "u__"], 
            SubscriptBox["e", "v__"]}], "->", 
           SubscriptBox["e", 
            RowBox[{"u", ",", "v"}]]}], ",", 
          RowBox[{
           RowBox[{"w_", " ", 
            SubscriptBox["e", "u__"]}], "\[Rule]", 
           SubscriptBox["e", "u"]}], ",", 
          RowBox[{
           SubscriptBox["e", "u__"], "\[RuleDelayed]", 
           RowBox[{"Subscript", "[", 
            RowBox[{"e", ",", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"Sort", "[", 
               RowBox[{"List", "[", "u", "]"}], "]"}]}]}], "]"}]}]}], 
         "}"}]}]}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
         "The", " ", "repeated", " ", "replace", " ", "changes", " ", "clif", 
          " ", "list", " ", "into", " ", "a", " ", "e"}], "-", 
         RowBox[{
         "subscript", " ", "list", " ", "with", " ", "sorted", " ", 
          "subscripts", "\n", "\t\t\t", "ConStantToZeroG", " ", "changees", 
          " ", "the", " ", "1", "st", " ", "element", " ", "in", " ", "the", 
          " ", "list", " ", "to", " ", "0", " ", "if", " ", "constant", " ", 
          "term"}]}], " ", "\[NotEqual]", " ", "0"}], "    ", "*)"}], "\n", 
      "\t\t", "eList"}]}], "\n", "\t", "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "eSubscriptListG"}], " ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GradePTermG", "[", "0", "]"}], ":=", 
   RowBox[{"{", "0", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GradeListG", "[", "clif_", "]"}], ":=", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"User", "'"}], "s", " ", "Clif", " ", "is", " ", 
       SubscriptBox["c", "0"]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["c", "1"], " ", 
       SubscriptBox["e", "1"]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["c", 
        RowBox[{"1", ",", "2"}]], " ", 
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"]}], " ", "+"}], " ", "..."}], "  ", "*)"}], "\n",
    "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"INPUTS", ":", "\n", "\t", "clifC"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"a", " ", "Clif", "\n", "\n", "\t", 
        RowBox[{"PROCESS", ":", "\n", "\t", 
         RowBox[{
         "This", " ", "is", " ", "an", " ", "internal", " ", "function", " ", 
          "called", " ", "by", " ", "GradePTermG", " ", "and", " ", 
          "ReverseG", "\n", "\t", "It", " ", "creates", " ", "a", " ", "list",
           " ", "of", " ", "the", " ", "grades", " ", "of", " ", "the", " ", 
          "terms", "\n", "\t", "The", " ", "process", " ", "starts", " ", 
          "by", " ", "grabbing", " ", "the", " ", "subscript", " ", "list", 
          " ", "using", " ", "SubscriptListG", "\n", "\t", "The", " ", 
          "length", " ", "of", " ", 
          SubscriptBox["e", 
           RowBox[{"i", ",", "j", ",", "..."}]]}]}]}], " ", "=", " ", 
       RowBox[{"1", " ", "+", " ", 
        RowBox[{
        "#", " ", "of", " ", "subscripts", " ", "since", " ", "base", " ", 
         "e", " ", "is", " ", "part", " ", "of", " ", "the", " ", "length", 
         "\n", "\t", "The", " ", "constant", " ", "term", 
         RowBox[{"(", "s", ")"}], " ", "could", " ", "be", " ", "of", " ", 
         "various", " ", "lengths"}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "so", " ", "its", " ", "grade", " ", "is", " ", "simply", " ", "set", 
       " ", "to", " ", "zero", "\n", "\n", "\t", 
       RowBox[{"OUTPUT", ":", "\n", "\t", "gradeList"}]}], " ", "=", " ", 
      RowBox[{"A", " ", "list"}]}], ",", " ", 
     RowBox[{"matching", " ", "the", " ", "ordering", " ", "of", " ", 
      RowBox[{"ClifToListG", "[", "clif", "]"}]}], ",", " ", 
     RowBox[{
     "of", " ", "the", " ", "grades", " ", "of", " ", "\n", "\t\t\t\t", 
      "each", " ", "term"}]}], "\n", "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"clif1", ",", "gradeList", ",", "const"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"clif1", "=", 
       RowBox[{"Expand", "[", "clif", "]"}]}], ";", "\n", "\t", 
      RowBox[{"const", "=", 
       RowBox[{"ConstantG", "[", "clif1", "]"}]}], ";", "\n", "\t", 
      RowBox[{"gradeList", "=", 
       RowBox[{"ConstantToZeroG", "[", 
        RowBox[{"clif1", ",", 
         RowBox[{
          RowBox[{"Length", "/@", 
           RowBox[{"eSubscriptListG", "[", "clif1", "]"}]}], "-", "1"}], ",", 
         "const"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"(*", "  ", 
       RowBox[{
       "List", " ", "of", " ", "grades", " ", "of", " ", "clif", " ", "terms",
         " ", 
        RowBox[{"(", 
         RowBox[{"=", " ", 
          RowBox[{
          "number", " ", "of", " ", "subscripts", " ", "on", " ", "e", " ", 
           "terms"}]}], ")"}], "\n", "\t\t\t", "Constant", " ", "1", "st", 
        " ", "term", " ", 
        RowBox[{"(", 
         RowBox[{"if", " ", "any"}], ")"}], " ", "gets", " ", "assigned", " ",
         "value", " ", "of", " ", "0", " \t\t", "\n", "\t\t\t", "For", " ", 
        "other", " ", "terms", " ", "subtract", " ", "1", " ", "because", " ",
         "Length", " ", "counts", " ", "base", " ", "e", " ", "along", " ", 
        "with", " ", "\n", "\t\t\t\t", "subscripts"}], " ", "*)"}], "\n", 
      "\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug4", ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<GradeListG: List of grades of terms of \>\"", ",", "clif1", 
          ",", "\"\< = \>\"", ",", "gradeList"}], "]"}]}], "]"}], ";", "\n", 
      "\n", "\t", "gradeList"}]}], "\n", "\t", "]"}]}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "GradeListG", " ", "Module"}], "  ", "*)"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ListToClifG", "[", "clifList_", "]"}], ":=", 
   RowBox[{"clifList", "/.", 
    RowBox[{"List", "\[Rule]", "Plus"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SignatureG", "[", "list_", "]"}], ":=", "\n", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", 
      RowBox[{"A", " ", "list", " ", "of", " ", "integers"}]}], ",", " ", 
     RowBox[{"letters", " ", "or", " ", "word"}], ",", " ", 
     RowBox[{
      RowBox[{
      "or", " ", "other", " ", "items", " ", "that", " ", "Mathematica", " ", 
       "\n", "\t\t\t", "can", " ", "sort", " ", "by", " ", "structure", " ", 
       "\n", "\n", "\t", 
       RowBox[{"PROCESS", ":", "  ", 
        RowBox[{
         RowBox[{
         "Find", " ", "the", " ", "list", " ", "of", " ", "permutations", " ",
           "cycles", " ", "that", " ", "convert", " ", "this", " ", "list", 
          " ", "to", " ", "an", " ", "ordered", " ", "one", "\n", "\t\t\t  ", 
          "Replace", " ", "each", " ", "cycle", " ", "by", " ", "its", " ", 
          "length", "\n", "\t\t\t  ", "Replace", " ", "even", " ", "lengths", 
          " ", "with"}], " ", "-", 
         RowBox[{"1", " ", "and", " ", "odd", " ", "lengths", " ", "with"}], 
         " ", "+", 
         RowBox[{
          RowBox[{
          "1", "\n", "\t\t\t  ", "The", " ", "signature", " ", "is", " ", 
           "the", " ", "product", " ", "of", " ", "the"}], " ", 
          "\[PlusMinus]", 
          RowBox[{
           RowBox[{"1", "'"}], "s", "\n", "\n", "\t", "OUTPUT"}]}]}], ":", 
        " ", 
        RowBox[{"The", " ", "signature", " ", "of", " ", "the", " ", 
         RowBox[{"list", ":", "\n", "\t\t\t\t", 
          RowBox[{"Let", " ", "n"}]}]}]}]}], " ", "=", " ", 
      RowBox[{
      "minimum", " ", "#", " ", "of", " ", "pairwise", " ", "permutations", 
       " ", "required", " ", "to", " ", "put", " ", "the", " ", "list", " ", 
       "\n", "\t\t\t\t\t", "in", " ", "order", "\n", "\t\t\t\t", 
       RowBox[{"Note", ":", " ", 
        RowBox[{"If", " ", "an", " ", "integer", " ", "repeats"}]}]}]}], ",", 
     " ", 
     RowBox[{
      RowBox[{
      "this", " ", "means", " ", "not", " ", "to", " ", "permute", " ", 
       "adjacent", " ", "equal", " ", "items", "\n", "\t\t\t\t", 
       "Signature"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"+", "1"}], " ", "if", " ", "n", " ", "is", " ", "even", "\n",
         "\t\t\t\t", "Signature"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"-", "1"}], " ", "if", " ", "n", " ", "is", " ", 
        "odd"}]}]}]}], " ", "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cycles", ",", "listOfCycles", ",", "permLength", ",", "evenOddLength", 
       ",", "evenOddLength2", ",", "signature"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"cycles", "=", 
       RowBox[{"FindPermutation", "[", "list", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"(*", "  ", 
       RowBox[{
        RowBox[{
        "We", " ", "desire", " ", "the", " ", "cycles", " ", "length", " ", 
         "to", " ", "make", " ", "this", " ", "list", " ", 
         RowBox[{"ordered", ".", "\n", "\t\t\t", "This"}], " ", "is", " ", 
         "the", " ", "list", " ", "of", " ", "permutation", " ", "cycles", 
         " ", "that", " ", "convert", " ", "this", " ", "list", " ", "to", 
         " ", "an", " ", "ordered", " ", "one", "\n", "\t\t\t", 
         RowBox[{"Note", ":", " ", "Technically"}]}], ",", " ", 
        RowBox[{
        "this", " ", "converts", " ", "an", " ", "ordered", " ", "list", " ", 
         "into", " ", "this", " ", "one"}], ",", " ", 
        RowBox[{
        "but", " ", "the", " ", "\n", "\t\t\t\t", "result", " ", "is", " ", 
         "the", " ", "same"}]}], "\n", "\t\t ", "*)"}], "\n", "\t\t", 
      RowBox[{"listOfCycles", "=", 
       RowBox[{
        RowBox[{"List", "@@", "cycles"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"{", "u__", "}"}], "}"}], "}"}], "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"{", "u", "}"}], "}"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "u__", "}"}], ",", "v__"}], "}"}], "}"}], 
           "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "u", "}"}], ",", "v"}], "}"}]}]}], "}"}]}]}], ";", 
      "\n", "\t\t\t", 
      RowBox[{"(*", "  ", 
       RowBox[{"Replace", " ", "head", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", ".", "e", "."}], ",", " ", "\"\<Cycles\>\""}], ")"}], 
        " ", "with", " ", "\"\<List\>\"", "\n", "\t\t\t\t", "Then", " ", 
        "reduce", " ", "one", " ", "level", " ", "of", " ", "braces"}], " ", 
       "*)"}], "\n", "\t\t", 
      RowBox[{"permLength", "=", 
       RowBox[{
        RowBox[{"Length", "/@", "listOfCycles"}], "/.", " ", 
        RowBox[{
         RowBox[{"u_", "/;", 
          RowBox[{"u", "\[Equal]", "0"}]}], "\[Rule]", "1"}]}]}], ";", "\n", 
      "\t\t\t", 
      RowBox[{"(*", "  ", 
       RowBox[{
       "Find", " ", "the", " ", "lengths", " ", "of", " ", "the", " ", 
        "cycles", " ", "in", " ", "the", " ", "list", "\n", "\t\t\t\t", 
        RowBox[{"Note", ":", " ", 
         RowBox[{
         "null", " ", "cycles", " ", "map", " ", "to", " ", "zero", " ", "so",
           " ", "we", " ", "change", " ", "them", " ", "to", " ", "1.", " ", 
          "See", " ", "example"}]}]}], "   ", "*)"}], "\n", "\t\t", 
      RowBox[{"evenOddLength", "=", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"Mod", "[", 
          RowBox[{"permLength", ",", "2"}], "]"}]}], "-", "1"}]}], ";", "\n", 
      "\t\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Map", " ", "even", " ", "length", " ", "cycles", " ", "to"}],
         " ", "-", 
        RowBox[{
        "1", " ", "and", " ", "odd", " ", "length", " ", "cycles", " ", 
         "to"}], " ", "+", "1"}], " ", "*)"}], "\n", "\t\t", 
      RowBox[{"signature", "=", 
       RowBox[{"evenOddLength", "/.", " ", 
        RowBox[{"List", "\[Rule]", "Times"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Remove", " ", "one", " ", "level", " ", "of", " ", "brackets", " ", 
         "\n", "\n", "\t\t", 
         RowBox[{"Ex", " ", ".", "   ", "list"}]}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "1", ",", " ", "2", ",", " ", "4"}], " ", 
           "}"}], "   ", "This", " ", "list", " ", "shows", " ", "that", " ", 
          "null", " ", "cycles", " ", "have", " ", "to", " ", "be", " ", 
          "handled", "\n", "\t\t\t\t", "cycles"}], " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Cycles", "[", 
            RowBox[{"{", "}"}], "]"}], "\n", "\t\t\t\t", "listOfCycles"}], 
          " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", " ", 
             RowBox[{"{", " ", "}"}], " ", "}"}], "\n", "\t\t\t\t", 
            "permLength"}], " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "1", "}"}], "\n", "\t\t\t\t", "evenOddLength"}], 
            " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"{", "1", "}"}], "\n", "\t\t\t\t", "signature"}], " ", 
             "=", " ", 
             RowBox[{
              RowBox[{"1", " ", "\n", "\n", "\t\t", "Ex", "      ", "list"}], 
              "=", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "2", ",", " ", "3", ",", " ", "4", ",", " ", "1", ",", " ", 
                  "2"}], " ", "}"}], "  ", "\n", "\t\t\t\t\t", "This", " ", 
                "list", " ", "shows", " ", "that", " ", "a", " ", "simple", 
                " ", "product", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["e", "2"], 
                  SubscriptBox["e", "3"], 
                  RowBox[{
                   SubscriptBox["e", "4"], "\[Wedge]", 
                   SubscriptBox["e", "1"]}], 
                  SubscriptBox["e", "2"]}], ")"}], "can", " ", "have", " ", 
                "more", " ", "than", " ", "1", " ", "cycle", "\n", "\t\t\t\t",
                 "cycles"}], " ", "=", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cycles", "[", " ", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", " ", "4", ",", " ", "2"}], "}"}], ",", 
                   " ", 
                   RowBox[{"{", " ", 
                    RowBox[{"3", ",", " ", "5"}], "}"}]}], " ", "]"}], "\n", 
                 "\t\t\t\t", "listOfCycles"}], " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", " ", 
                   RowBox[{
                    RowBox[{"{", " ", 
                    RowBox[{"1", ",", " ", "4", ",", " ", "2"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", " ", 
                    RowBox[{"3", ",", " ", "5"}], "}"}]}], " ", "}"}], "\n", 
                  "\t\t\t\t", "permLength"}], " ", "=", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}], "\n", "\t\t\t\t", 
                   "evenOddLength"}], " ", "=", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], "\n", "\t\t\t\t", 
                    "signature"}], " ", "=", " ", 
                   RowBox[{"-", "1"}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "\n", 
       "*)"}], "\t", "\n", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<SignatureG: List of Product Blade = \>\"", ",", "list", ",", 
           "\"\<,  Cycles of list: \>\"", ",", "cycles"}], "]"}], ";", "\n", 
         "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Cycles sans head (Cycles): \>\"", ",", "listOfCycles", ",", 
           "\"\<, Length of cycles: \>\"", ",", "permLength"}], "]"}], ";", 
         "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Even cycle -> -1, odd -> +1: \>\"", ",", "evenOddLength", ",", 
           "\"\<, Signature = Product of \[PlusMinus]1's: \>\"", ",", "\n", 
           "\t\t\t\t", "signature"}], "]"}]}]}], "\t\t", "\n", "\t\t", "]"}], 
      ";", "\n", "\t\t", "signature"}]}], "\t\t", "\n", "]"}]}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "SignatureG", " ", "Module"}], " ", "*)"}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"SubscriptListG", "[", "clif_", "]"}], ":=", "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"INPUT", ":", " ", "Clif"}], " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"A", " ", "multivector", "\n", "\t", 
           RowBox[{"PROCESS", ":", "\n", "\t\t", 
            RowBox[{
             RowBox[{
             "Use", " ", "eSubscriptList", " ", "to", " ", "obtain", " ", "a",
               " ", "list", " ", "of", " ", "e"}], "-", 
             RowBox[{
             "subscripts", " ", "of", " ", "terms", " ", "of", " ", "clif", 
              "\n", "\t\t\t", "Example"}]}], ":", " ", 
            RowBox[{"2", " ", "+", " ", 
             RowBox[{"3", " ", 
              SubscriptBox["e", 
               RowBox[{"2", " "}]], 
              SubscriptBox["e", "4"]}]}]}]}], " ", "\[Rule]", " ", 
          RowBox[{
           RowBox[{"{", " ", 
            RowBox[{"0", ",", " ", 
             SubscriptBox["e", 
              RowBox[{"2", ",", "4"}]]}], " ", "}"}], "\n", "\t\t", "Use"}]}],
          " ", "/.", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
           "replace", " ", "all", " ", "to", " ", "change", " ", "e"}], "-", 
           RowBox[{"subscripts", " ", "like", " ", 
            SubscriptBox["e", "2"], 
            SubscriptBox["e", "4"], " ", "to", " ", "a", " ", "list", " ", 
            "of", " ", "subscripts", " ", "like", " ", 
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], "\n", "\t\t", "If", " ", 
            "constant", " ", "term"}]}], " ", "\[NotEqual]", " ", "0"}]}]}], 
       ",", " ", 
       RowBox[{
        RowBox[{
        "change", " ", "1", "st", " ", "term", " ", "of", " ", "list", " ", 
         "from", " ", "0", " ", "to", " ", 
         RowBox[{"{", "0", "}"}], "\n", "\t\t", "If", " ", "entire", " ", 
         "clif"}], " ", "=", " ", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"make", " ", "subscript", " ", "list"}], " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{"{", "0", "}"}], " ", "}"}], "\n", "\t", 
          RowBox[{"OUTPUT", ":", " ", "subList1"}]}], " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
           "List", " ", "of", " ", "the", " ", "subscripts", " ", "of", " ", 
            "the", " ", "e"}], "-", 
           RowBox[{"terms", " ", "\n", "\t\t\t", "1", "st", " ", "term"}]}], 
          " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", "0", "}"}], " ", "if", " ", "either", " ", 
             "constant", " ", "is", " ", "non"}], "-", 
            RowBox[{"zero", " ", "or", " ", "entire", " ", "clif"}]}], " ", 
           "=", " ", 
           RowBox[{
            RowBox[{"0", " ", "\n", "\t\t\t", 
             RowBox[{"Example", ":", " ", 
              RowBox[{"5", " ", "+", " ", 
               RowBox[{"3", " ", 
                SubscriptBox["e", "1"], 
                SubscriptBox["e", "2"]}]}]}]}], " ", "\[Rule]", " ", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"{", "0", " ", "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}]}], " "}]}]}]}]}]}]}], ")"}], 
     " ", "\n", "\t\t\t", 
     RowBox[{"Example", ":", " ", "0"}]}], " ", "\[Rule]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"{", "0", "}"}], " ", "}"}], "  ", "\n", "\t\t\t", 
      RowBox[{"Example", ":", " ", 
       RowBox[{"3", " ", 
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"]}]}]}], " ", "\[Rule]", " ", 
     RowBox[{"{", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], " ", "}"}]}]}], "   ", "*)"}], "\n", 
  "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"subList0", ",", "subList1"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"subList0", "=", 
      RowBox[{
       RowBox[{"eSubscriptListG", "[", "clif", "]"}], "/.", 
       RowBox[{
        SubscriptBox["e", "u__"], "\[Rule]", 
        RowBox[{"{", "u", "}"}]}]}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ConstantG", "[", "clif", "]"}], "===", "0"}], "||", 
        RowBox[{
         RowBox[{"ConstantG", "[", "clif", "]"}], "===", "0."}]}], ",", 
       RowBox[{"subList1", "=", "subList0"}], ",", 
       RowBox[{"subList1", "=", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{"subList0", ",", 
          RowBox[{"1", "\[Rule]", 
           RowBox[{"{", "0", "}"}]}]}], "]"}]}]}], "]"}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"clif", "===", "0"}], "||", 
        RowBox[{"clif", "===", "0."}]}], ",", 
       RowBox[{"subList1", "=", 
        RowBox[{"{", 
         RowBox[{"{", "0", "}"}], "}"}]}]}], "]"}], ";", "\n", "\t\t", 
     "subList1"}]}], "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691073072029634*^9, 3.691073593702551*^9, 
   3.691073646277369*^9, 3.691073715183025*^9, 3.691073841869029*^9, 
   3.691073879917136*^9, {3.6910742437762337`*^9, 3.691074246906845*^9}, {
   3.691074290856971*^9, 3.691074316518396*^9}, {3.6910744297152367`*^9, 
   3.691074443783609*^9}, {3.691162438368594*^9, 3.691162439095743*^9}, {
   3.691170784724188*^9, 3.691170784737091*^9}, {3.691172107600281*^9, 
   3.69117210875049*^9}, {3.69117217676159*^9, 3.69117217756246*^9}, {
   3.691186175811736*^9, 3.691186240509141*^9}, {3.6911863220181017`*^9, 
   3.691186342619071*^9}, {3.691186860551017*^9, 3.691186885817286*^9}, {
   3.6911869374333963`*^9, 3.691186957803356*^9}, {3.691187267589674*^9, 
   3.691187269091288*^9}, 3.6911876076994667`*^9, 3.691194078836825*^9, {
   3.69123905595233*^9, 3.691239088063758*^9}, {3.6912396252805967`*^9, 
   3.6912396595078773`*^9}, {3.6913468213348417`*^9, 3.691346822963201*^9}, 
   3.69134686343079*^9, {3.6919605972351103`*^9, 3.6919605985651608`*^9}, {
   3.691964605845388*^9, 3.691964662916381*^9}, 3.691964821186797*^9, {
   3.691965053055522*^9, 3.691965054206366*^9}, {3.691966447426881*^9, 
   3.691966484567197*^9}, {3.691967520794083*^9, 3.6919675585617228`*^9}, {
   3.6925522526829567`*^9, 3.692552262554408*^9}, {3.692552773240591*^9, 
   3.692552773991585*^9}, {3.692552804201651*^9, 3.69255280513661*^9}, {
   3.692558758533824*^9, 3.692558827881638*^9}, 3.692564762791512*^9, 
   3.6925666114553967`*^9, {3.6925672580099583`*^9, 3.692567393184073*^9}, {
   3.692567425965393*^9, 3.6925676479457617`*^9}, 3.692567720117198*^9, {
   3.692567896272674*^9, 3.69256790928052*^9}, 3.6934106839781847`*^9, {
   3.693411986954101*^9, 3.693411988757691*^9}, {3.693417359168449*^9, 
   3.6934175236812973`*^9}, {3.693417557086903*^9, 3.69341763378249*^9}, {
   3.6934176783021793`*^9, 3.69341782175448*^9}, {3.693418103596665*^9, 
   3.6934181102791643`*^9}, {3.693443146160388*^9, 3.693443186745969*^9}, {
   3.693443548164789*^9, 3.6934435594356194`*^9}, {3.6934436886072607`*^9, 
   3.693443717962111*^9}, {3.693490456395357*^9, 3.6934905717656*^9}, {
   3.6934913056357822`*^9, 3.6934914448614283`*^9}, {3.693491491895162*^9, 
   3.693491537749947*^9}, {3.693492667380725*^9, 3.6934926825194273`*^9}, {
   3.6934968008187*^9, 3.69349681394088*^9}, {3.693497501118395*^9, 
   3.69349751018495*^9}, {3.6934978562789583`*^9, 3.6934978645326557`*^9}, 
   3.693497972594495*^9, {3.6934980060771503`*^9, 3.693498066229618*^9}, {
   3.6934981182511063`*^9, 3.69349828395382*^9}, 3.693498347529374*^9, 
   3.69349838044261*^9, 3.693498422994424*^9, 3.6934985670874567`*^9, {
   3.693498618360155*^9, 3.69349865227641*^9}, {3.693498684079303*^9, 
   3.6934987639094276`*^9}, {3.693499309336701*^9, 3.693499612707046*^9}, {
   3.693500448678697*^9, 3.693500469251882*^9}, {3.693500533671541*^9, 
   3.6935005771228027`*^9}, {3.693500823866571*^9, 3.69350083530978*^9}, {
   3.6935024583206997`*^9, 3.693502473223585*^9}, {3.695732480854957*^9, 
   3.6957324880714073`*^9}, {3.695734132320497*^9, 3.695734165831356*^9}, 
   3.695744699760768*^9, {3.695771628866851*^9, 3.6957717596908207`*^9}, {
   3.695772348781991*^9, 3.695772358110436*^9}, {3.695772418037466*^9, 
   3.6957724439927273`*^9}, {3.6957728698124027`*^9, 3.695772871908252*^9}, {
   3.695818987207073*^9, 3.695819126448515*^9}, {3.6958191582355537`*^9, 
   3.695819780442247*^9}, {3.6958198632271633`*^9, 3.695819867799015*^9}, 
   3.69581991329774*^9, {3.6958199486090107`*^9, 3.69582002104081*^9}, {
   3.695820087154109*^9, 3.695820136559053*^9}, {3.695820258665784*^9, 
   3.6958203616080933`*^9}, {3.695820392358898*^9, 3.6958204073670187`*^9}, {
   3.695820461533586*^9, 3.6958205222839108`*^9}, {3.6958214522022142`*^9, 
   3.695821481503334*^9}, {3.695822111203779*^9, 3.6958222102344646`*^9}, {
   3.695822245876869*^9, 3.695822253690641*^9}, 3.69582702881758*^9, {
   3.695828502413268*^9, 3.695828800129489*^9}, {3.6958290917200108`*^9, 
   3.6958291355736217`*^9}, {3.695829175597875*^9, 3.695829212883546*^9}, {
   3.6958429905868073`*^9, 3.695843147978652*^9}, {3.695843209498517*^9, 
   3.695843281810257*^9}, {3.6958433238679934`*^9, 3.695843328865196*^9}, {
   3.695843371424499*^9, 3.695843448649987*^9}, 3.695845757536249*^9, {
   3.695845867452508*^9, 3.695846018810631*^9}, {3.695846080287752*^9, 
   3.69584608701797*^9}, {3.695846164021183*^9, 3.695846165532172*^9}, 
   3.6958463230976543`*^9, 3.695846422278957*^9, {3.695846628352573*^9, 
   3.695846832338709*^9}, {3.695846872342218*^9, 3.695846897903164*^9}, {
   3.6958470279161377`*^9, 3.695847028945857*^9}, {3.69584852180669*^9, 
   3.695848544152446*^9}, {3.695848767934144*^9, 3.695848883506884*^9}, {
   3.695849261029049*^9, 3.695849476686075*^9}, {3.695849556546075*^9, 
   3.695849631367141*^9}, {3.695849662025731*^9, 3.695849663434252*^9}, {
   3.695849777255155*^9, 3.695849779222843*^9}, {3.695850880477881*^9, 
   3.6958508837858257`*^9}, {3.695850944472471*^9, 3.6958509469048758`*^9}, {
   3.695914230062276*^9, 3.695914261128736*^9}, {3.695999947361558*^9, 
   3.69599996022007*^9}, {3.696000688932384*^9, 3.696000729967718*^9}, {
   3.696077451991584*^9, 3.6960774714248323`*^9}, 3.696077506171508*^9, {
   3.696079191227707*^9, 3.696079243169139*^9}, {3.6960798318532543`*^9, 
   3.696079862259411*^9}, {3.6960800176486273`*^9, 3.696080040698516*^9}, {
   3.696080077108054*^9, 3.696080078954493*^9}, {3.696080683388695*^9, 
   3.696080765408646*^9}, {3.6960808229347677`*^9, 3.696080832050459*^9}, {
   3.6960813661513977`*^9, 3.696081368828742*^9}, {3.6960832969098387`*^9, 
   3.696083573127898*^9}, {3.6960836204468184`*^9, 3.696083634472033*^9}, {
   3.696083710785329*^9, 3.696083971130752*^9}, 3.696084003829397*^9, {
   3.696092724460294*^9, 3.696092765241118*^9}, {3.6960941601733437`*^9, 
   3.696094199247642*^9}, {3.696095429987636*^9, 3.696095441990737*^9}, {
   3.696095581681726*^9, 3.6960956077677526`*^9}, 3.696095732753447*^9, 
   3.696095845811886*^9, 3.696095900684404*^9, 3.69609602167353*^9, 
   3.696096192899143*^9, {3.696096261005837*^9, 3.696096267845666*^9}, {
   3.696096341092718*^9, 3.696096344172612*^9}, 3.696097295128721*^9, {
   3.69609752315829*^9, 3.696097553673802*^9}, {3.696098016126671*^9, 
   3.696098018403373*^9}, {3.696098107686864*^9, 3.69609813636646*^9}, {
   3.6960982640562572`*^9, 3.696098265319688*^9}, {3.6960991419793043`*^9, 
   3.69609929013301*^9}, {3.696105996528091*^9, 3.696106029050375*^9}, {
   3.6961064815884943`*^9, 3.6961064985733547`*^9}, {3.696106559630352*^9, 
   3.696106570807624*^9}, 3.6961066275346193`*^9, {3.6961067061453533`*^9, 
   3.696106772161428*^9}, {3.696107448379942*^9, 3.696107449119595*^9}, 
   3.696107556143742*^9, {3.696107590644492*^9, 3.696107595878331*^9}, {
   3.6961076489518414`*^9, 3.696107781891183*^9}, {3.696108236511135*^9, 
   3.6961082705853653`*^9}, {3.6961083550316896`*^9, 3.6961083753345213`*^9}, 
   3.696108868455888*^9, {3.6961095699742727`*^9, 3.696109583995894*^9}, {
   3.696109623412315*^9, 3.696109700457329*^9}, {3.696109758956052*^9, 
   3.696109768001793*^9}, {3.696115021540352*^9, 3.696115073008628*^9}, {
   3.696116068411652*^9, 3.696116078458647*^9}, {3.696116135893812*^9, 
   3.696116147204878*^9}, {3.696116199907048*^9, 3.69611628655879*^9}, {
   3.6961165133245907`*^9, 3.696116515503356*^9}, {3.696116560813384*^9, 
   3.6961165864880743`*^9}, {3.69611678952264*^9, 3.6961169057615*^9}, {
   3.696204706942729*^9, 3.696204763748204*^9}, {3.69620479805543*^9, 
   3.696204804511096*^9}, {3.696204935753037*^9, 3.696205018021299*^9}, {
   3.696205053745636*^9, 3.696205111703528*^9}, {3.696205211533939*^9, 
   3.696205296285767*^9}, {3.696206059646842*^9, 3.696206091712418*^9}, {
   3.696206796496337*^9, 3.69620680087278*^9}, {3.696272822845186*^9, 
   3.696272971561103*^9}, {3.6962848887017403`*^9, 3.6962848965492268`*^9}, {
   3.6962915504015493`*^9, 3.696291555336377*^9}, {3.6962916032501917`*^9, 
   3.696291670230001*^9}, {3.696291765660165*^9, 3.696291835616476*^9}, {
   3.6962919890585337`*^9, 3.696291995521372*^9}, {3.696292040384646*^9, 
   3.696292046320023*^9}, {3.6962920965108433`*^9, 3.696292114499303*^9}, {
   3.696292166058732*^9, 3.696292311499179*^9}, {3.69629270478833*^9, 
   3.696292709054996*^9}, {3.69636534219699*^9, 3.696365362711913*^9}, {
   3.696365408274908*^9, 3.6963657199616337`*^9}, {3.6963657602088346`*^9, 
   3.696365761568491*^9}, {3.696365845633854*^9, 3.696365981402483*^9}, 
   3.6963660250052853`*^9, 3.6963661267142267`*^9, {3.696366159493038*^9, 
   3.696366170037991*^9}, {3.6963666047367153`*^9, 3.696366610560445*^9}, 
   3.696366641357057*^9, 3.696367211677112*^9, {3.696367246925178*^9, 
   3.696367437925397*^9}, {3.696548884036927*^9, 3.696548885121347*^9}, {
   3.696552602347845*^9, 3.6965526140995007`*^9}, {3.6966172957725677`*^9, 
   3.6966172971196413`*^9}, {3.696617543681409*^9, 3.696617545117868*^9}, {
   3.696617587466963*^9, 3.6966176499101467`*^9}, {3.696617692034759*^9, 
   3.6966178125525513`*^9}, {3.696852954105671*^9, 3.696852957077058*^9}, {
   3.696853043439715*^9, 3.696853092917054*^9}, {3.69685319286651*^9, 
   3.696853235938266*^9}, {3.696853331082515*^9, 3.696853413877496*^9}, {
   3.6968560003692627`*^9, 3.696856014825593*^9}, {3.696856082935842*^9, 
   3.696856085796195*^9}, {3.696856199957531*^9, 3.696856200811823*^9}, {
   3.696856265740015*^9, 3.696856270146689*^9}, 3.696856301485545*^9, {
   3.696967970669462*^9, 3.696967977461548*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "7 Secondary Geometric Algebra Operations:\n",
 StyleBox["\tHodge Dual, Norm, Gorm, Reverse, Inverse", "Subchapter"]
}], "Chapter",
 CellChangeTimes->{{3.6910744651461782`*^9, 3.691074524520515*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GormG", "[", "clif_", "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"ScalarPrdtG", "[", 
     RowBox[{
      RowBox[{"ReverseG", "[", "clif", "]"}], ",", "clif"}], "]"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HodgeDualG", "[", 
    RowBox[{"clif_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"clif", "\[SmallCircle]", 
    RowBox[{"PseudoScalarG", "[", "n", "]"}]}]}], "  ", 
  RowBox[{"(*", "\n", "\n", 
   RowBox[{
    RowBox[{"INPUTS", ":", " ", 
     RowBox[{
     "A", " ", "clif", " ", "and", " ", "space", " ", "dimension", " ", "n", 
      "\n", "\n", "METHOD"}], ":", " ", 
     RowBox[{"The", " ", "Hodge", " ", "Dual", " ", 
      RowBox[{"(", 
       RowBox[{"or", " ", "Hodge", " ", "Star"}], ")"}], " ", "of", " ", "a", 
      " ", "clif"}]}], ",", " ", "clif2", ",", " ", 
    RowBox[{
     RowBox[{"of", " ", "grade", " ", "p"}], " ", "\[LessEqual]", 
     RowBox[{
     "n", " ", "is", " ", "the", " ", "unique", " ", "\n", "\t", "clif"}]}], 
    ",", " ", 
    RowBox[{"\[Star]", "clif2"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"that", " ", "satisfies", "\n", "\t\t", 
       RowBox[{"clif1", " ", "\[Wedge]"}]}], " ", "\[Star]", "clif2"}], " ", 
     "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"clif1", " ", "\[CenterDot]", " ", "clif2"}], ")"}], " ", 
       "\[SmallCircle]", " ", "i"}], "  ", "for", " ", "every", " ", "clif1", 
      " ", "of", " ", "same", " ", "grade", " ", "as", " ", "clif2"}]}], ",", 
    "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
        "where", " ", "i", " ", "is", " ", "the", " ", "PseudoScalar", " ", 
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"]}], "..."}], 
       SubscriptBox["e", "n"], "\n", "\t", "\n", "\t", "This", " ", 
       "definition", " ", "extends", " ", "linearly", " ", "to", " ", "a", 
       " ", "general", " ", "clif", " ", "of", " ", "dimension", " ", "n", 
       " ", "which", "\n", "\t", "is", " ", "the", " ", "sum", " ", "of", " ",
        "clifs", " ", "of", " ", "grades", " ", "0"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"n", ".", "\n", "\t", "\n", "\t", "This"}], " ", "package", 
       " ", "can", " ", "be", " ", "used", " ", "to", " ", "check", " ", 
       "that", " ", "the", " ", "following", " ", "definition", " ", 
       "satisfies", " ", "\n", "\t", "the", " ", 
       RowBox[{"condition", ":", "\n", "\t\t", 
        RowBox[{"*", "clif2"}]}]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"clif2", " ", "\[SmallCircle]", " ", "i"}], "\n", "\t", "\n", 
      "\t", 
      RowBox[{"Note", ":", " ", 
       RowBox[{"i", " ", "\[SmallCircle]", " ", "clif2"}]}]}]}], ",", " ", 
    RowBox[{
     SuperscriptBox["i", 
      RowBox[{"-", "1", " "}]], "\[SmallCircle]", " ", "clif2"}], ",", " ", 
    RowBox[{"and", " ", 
     RowBox[{"clif2", " ", "\[SmallCircle]", " ", 
      SuperscriptBox["i", 
       RowBox[{"-", "1"}]]}], " ", "all", " ", "fail", " ", "to", " ", 
     "satisfy", " ", "this", " ", "condition", "\n", "\t\t", "The", " ", "3", 
     "rd", " ", "product", " ", "is", " ", "the", " ", "alternate", " ", 
     "definition"}], ",", " ", 
    RowBox[{"below", "\n", "\n", 
     RowBox[{"OUTPUT", ":", " ", 
      RowBox[{
      "The", " ", "Hodge", " ", "Dual", " ", "of", " ", "clif"}]}]}]}], "  ", 
   "*)"}], "\n", "  ", "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "HodgeDualG"}], "  ", "*)"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"HodgeDual2G", "[", 
    RowBox[{"clif_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"clif", "\[SmallCircle]", 
    RowBox[{"InverseG", "[", 
     RowBox[{"PseudoScalarG", "[", "n", "]"}], "]"}]}]}], " ", "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"Alternate", " ", "version"}], " ", "*)"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseG", "[", "clif_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gormClif", ",", "clifInv"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"gormClif", "=", 
       RowBox[{"GormG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"gormClif", "===", "0"}], "||", 
           RowBox[{"gormClif", "===", "0."}]}], ")"}], "&&", 
         RowBox[{"NumberQ", "[", "gormClif", "]"}]}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"clifInv", "=", "1"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Caution: Inverse of \>\"", ",", "clif", ",", 
           "\"\< may not exist\>\""}], "]"}]}], ",", "\n", "\t\t\t", 
        RowBox[{"clifInv", "=", 
         RowBox[{
          RowBox[{"ReverseG", "[", "clif", "]"}], "/", "gormClif"}]}]}], "\n",
        "\t\t", "]"}], ";", "\n", "\t\t", "clifInv"}]}], "\n", "\t", "]"}]}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NormG", "[", "clif_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Abs", "[", 
     RowBox[{"GormG", "[", "clif", "]"}], "]"}], "]"}]}], "   ", 
  RowBox[{"(*", 
   RowBox[{"/;", 
    RowBox[{
     RowBox[{"NumberQ", "[", 
      RowBox[{"GormG", "[", "clif", "]"}], "]"}], "\[Equal]", "True"}]}], 
   "*)"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReverseG", "[", "0", "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReverseG", "[", "clif_", "]"}], ":=", "\n", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", 
      RowBox[{"A", " ", "clif", "  ", "Example"}], ":", " ", 
      RowBox[{"3", " ", "+", " ", 
       SubscriptBox["e", "2"], " ", "+", " ", 
       RowBox[{
        SubscriptBox["e", "2"], 
        SubscriptBox[
         RowBox[{"e", " "}], "3"]}], " ", "+", " ", 
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"], 
        SubscriptBox["e", "3"], 
        SubscriptBox["e", "4"]}], " ", "+", " ", 
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "3"], 
        SubscriptBox["e", "5"], "\n", "\t", 
        RowBox[{"PROCESS", ":", "\n", "\t\t", 
         RowBox[{
         "Use", " ", "ClifToListG", " ", "to", " ", "get", " ", "a", " ", 
          "list", " ", "of", " ", "clif", " ", "terms"}]}]}]}]}], ",", " ", 
     RowBox[{"like", " ", 
      RowBox[{"{", 
       RowBox[{"3", ",", 
        SubscriptBox["e", "2"], ",", 
        RowBox[{
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "3"]}], ",", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "3"], " ", 
         SubscriptBox["e", "4"]}], ",", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "3"], " ", 
         SubscriptBox["e", "5"]}]}], "}"}], "\n", "\t\t", "Use", " ", 
      "SubscriptListG", " ", "to", " ", "get", " ", "list", " ", "of", " ", 
      "subscripts"}], ",", " ", 
     RowBox[{"like", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", " ", 
        RowBox[{"{", "2", "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "3"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2", ",", " ", "3", ",", " ", "4"}], "}"}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "3", ",", " ", "5"}], "}"}]}], "}"}], "\n", 
      "\t\t", "Use", " ", "Reverse", " ", "to", " ", "get", " ", "reversed", 
      " ", "list", " ", "of", " ", "subscripts"}], ",", " ", 
     RowBox[{"like", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{"{", "2", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "3", ",", "1"}], "}"}]}], "}"}], "\n", "\t\t", 
      "Use", " ", "Signature", " ", "to", " ", "determine", " ", "whether", 
      " ", "reversed", " ", "members", " ", "are", " ", "even", " ", 
      RowBox[{"(", 
       RowBox[{"+", "1"}], ")"}], " ", "or", " ", "odd", " ", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], " ", "permustiions", "\n", "\t\t", 
      "Multiply", " ", "the", " ", "clif", " ", "list", " ", "by", " ", "the",
       " ", "signature", " ", "list", " ", "and", " ", "convert", " ", 
      "result", " ", "to", " ", "a", " ", "multivector", " ", "expression", 
      " ", "\n", "\t", 
      RowBox[{"OUTPUT", ":", " ", 
       RowBox[{"The", " ", "reverse", " ", "clif"}]}]}]}], "\n", "*)"}], "\n",
    "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clifList", ",", "subscriptList", ",", "reverseList", ",", 
       "signatureList", ",", "reverseClif"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"clifList", "=", 
       RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"subscriptList", "=", 
       RowBox[{"SubscriptListG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"reverseList", "=", 
       RowBox[{"Reverse", "/@", "subscriptList"}]}], ";", "\n", "\t\t", 
      RowBox[{"signatureList", "=", 
       RowBox[{"Signature", "/@", "reverseList"}]}], ";", "\n", "\t\t", 
      RowBox[{"reverseClif", "=", 
       RowBox[{"signatureList", ".", "clifList"}]}], ";", "\n", "\n", "\t\t", 
      
      RowBox[{"If", "[", 
       RowBox[{"debug7", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<ReverseG: List of \>\"", ",", "clif", ",", "\"\< = \>\"", ",", 
           "clifList"}], "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Subscript list = \>\"", ",", "subscriptList"}], "]"}], 
         ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<List of reversed subscripts = \>\"", ",", "reverseList"}], 
          "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Signature List = \>\"", ",", "signatureList", ",", 
           "\"\< is \[PlusMinus]1, measuring # of pairwise transpositions \
\>\"", ",", "\n", "\t\t\t\t  ", 
           "\"\<to restore reverse list to original\>\""}], "]"}], ";", "\n", 
         "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Reverse of clif = \>\"", ",", "reverseClif"}], 
          "]"}]}]}], "\n", "\t\t", "]"}], ";", "\n", "\t\t", 
      "reverseClif"}]}], "\n", "\t", "]"}]}], 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "ReverseG", " ", "Module"}], "  ", 
   "*)"}]}], "\n", 
 RowBox[{"\t\t"}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691073072029634*^9, 3.691073593702551*^9, 
   3.691073646277369*^9, 3.691073715183025*^9, 3.691073841869029*^9, 
   3.691073879917136*^9, {3.6910742437762337`*^9, 3.691074246906845*^9}, {
   3.691074290856971*^9, 3.691074316518396*^9}, {3.6910744297152367`*^9, 
   3.691074443783609*^9}, 3.691074602123973*^9, 3.6910746412377787`*^9, 
   3.691162439749679*^9, 3.6911707847484303`*^9, {3.691239783051281*^9, 
   3.6912398212811213`*^9}, {3.691239898618672*^9, 3.691239981128207*^9}, {
   3.691346925733223*^9, 3.69134692898641*^9}, {3.691794215825245*^9, 
   3.691794232320211*^9}, 3.6917943056426888`*^9, 3.6924783516797247`*^9, {
   3.692486101079296*^9, 3.6924861300656633`*^9}, {3.692486225188567*^9, 
   3.6924862592737827`*^9}, {3.6925522732831287`*^9, 3.692552287060831*^9}, {
   3.692552820556539*^9, 3.69255283101068*^9}, {3.692552919113789*^9, 
   3.692552935368544*^9}, {3.6957475999325943`*^9, 3.695747632417718*^9}, {
   3.695820792813661*^9, 3.695820799061962*^9}, {3.69582086515193*^9, 
   3.6958209416138887`*^9}, {3.695820986949973*^9, 3.695820989092721*^9}, {
   3.695821045899899*^9, 3.695821111449418*^9}, {3.6958211611208277`*^9, 
   3.695821184327961*^9}, {3.6958226576993923`*^9, 3.6958226605376577`*^9}, {
   3.695827454326144*^9, 3.6958274584079123`*^9}, {3.695829238949929*^9, 
   3.6958292979730177`*^9}, {3.695847124732131*^9, 3.6958472694464397`*^9}, {
   3.6958473536178102`*^9, 3.695847354561248*^9}, {3.695847601124522*^9, 
   3.695847614345902*^9}, {3.695847717671761*^9, 3.695847718382951*^9}, {
   3.695848114415719*^9, 3.69584818645916*^9}, {3.695848950848604*^9, 
   3.695849035745556*^9}, {3.695849104693282*^9, 3.6958491719580927`*^9}, {
   3.695850254555883*^9, 3.695850402314972*^9}, 3.695999963121153*^9, {
   3.696000741630728*^9, 3.696000748004396*^9}, {3.696108486545052*^9, 
   3.696108501059379*^9}, {3.696116337101284*^9, 3.696116360636071*^9}, {
   3.696284321562648*^9, 3.696284359003634*^9}, {3.6968072880913963`*^9, 
   3.696807292377239*^9}, {3.6968081444257383`*^9, 3.696808150919499*^9}, {
   3.696856550026471*^9, 3.696856577050351*^9}, {3.6968568844912663`*^9, 
   3.6968569091655607`*^9}, {3.6968712561572113`*^9, 3.696871337270104*^9}, {
   3.69687184472225*^9, 3.6968718970706663`*^9}, {3.696871967178689*^9, 
   3.696872303860433*^9}, {3.69687233470337*^9, 3.696872344219792*^9}, {
   3.696872375712117*^9, 3.696872772140077*^9}, {3.696884823967904*^9, 
   3.696884829901882*^9}, {3.6970253363654413`*^9, 3.6970253846098824`*^9}, {
   3.697026777390379*^9, 3.697026807895303*^9}, {3.6970268796534777`*^9, 
   3.697026884393711*^9}, {3.697026928707107*^9, 3.697026943630897*^9}, {
   3.697026974780508*^9, 3.697027001989422*^9}, {3.697027075514344*^9, 
   3.697027085099351*^9}, {3.69702712918753*^9, 3.697027232395236*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "8 Geometric Algebra Operations\n",
 StyleBox["\tGeometric Product, Dot Product, Wedge Product, \n\tLeft \
Contraction", "Subchapter"]
}], "Chapter",
 CellChangeTimes->{{3.691074731420932*^9, 3.691074785577688*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrdtG", "[", 
   RowBox[{"0", ",", "x_", ",", "p_"}], "]"}], ":=", "0"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PrdtG", "[", 
    RowBox[{"x_", ",", "0", ",", "p_"}], "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PrdtG", "[", 
    RowBox[{"clif1_", ",", "clif2_", ",", "prdtType_"}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"INPUTS", ":", "\n", "\t\t", "clif1"}], ",", " ", 
     RowBox[{"clif2", ":", " ", 
      RowBox[{"Two", " ", "clifs", " ", "whose", " ", 
       RowBox[{
        RowBox[{"dot", "/", "wedge"}], "/", "left"}], " ", "or", " ", "right",
        " ", "contraction", " ", "product", " ", "is", " ", "to", " ", "be", 
       " ", "taken", "\n", "\t\t", "prdtType"}], ":", " ", 
      RowBox[{"The", " ", "type", " ", "of", " ", 
       RowBox[{"product", ":", " ", "wedge"}]}]}], ",", " ", "dot", ",", " ", 
     
     RowBox[{
      RowBox[{
      "right", " ", "or", " ", "left", " ", "contraction", "\n", "\t\t", "\n",
        "\t  ", 
       RowBox[{"PROCESS", ":", "\n", "\t    ", "Example", ":", " ", 
        RowBox[{"Wedge", " ", "Product", " ", "of", " ", "clif1"}]}]}], " ", 
      "=", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["e", 
         RowBox[{"1", " "}]], "+", " ", 
        RowBox[{
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "3"], " ", "and", " ", "clif2"}]}], " ", "=", " ", 
       
       RowBox[{
        RowBox[{"4", " ", "-", " ", 
         RowBox[{
          SubscriptBox["e", 
           RowBox[{"3", " "}]], 
          SubscriptBox["e", "4"], "\n", "\t    ", "Make", " ", "lists", " ", 
          "of", " ", "the", " ", "terms", " ", "of", " ", "the", " ", "2", 
          " ", 
          RowBox[{"clifs", ":", " ", "clifList1"}]}]}], " ", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{
            SubscriptBox["e", 
             RowBox[{"1", ","}]], " ", 
            SubscriptBox["e", "2"], " ", 
            SubscriptBox["e", "3"]}], " ", "}"}], " ", "and", " ", 
          "clifList2", " ", 
          RowBox[{"{", " ", 
           RowBox[{"4", ",", " ", 
            RowBox[{
             RowBox[{"-", " ", 
              SubscriptBox["e", 
               RowBox[{"3", " "}]]}], 
             SubscriptBox["e", "4"]}]}], " ", "}"}], "\n", "\t\t", "Use", " ",
           "Outer", " ", "to", " ", "take", " ", "the", " ", "Geometric", " ",
           "Product", " ", "of", " ", "every", " ", "term", " ", "from", " ", 
          "clif1", " ", "with", " ", "every", " ", "term", " ", "from", " ", 
          "clif2", "\n", "\t\t   ", "prdtBladeList"}], " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"4", " ", 
              SubscriptBox["e", "1"]}], ",", " ", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["e", "1"]}], " ", 
              SubscriptBox["e", "3"], " ", 
              SubscriptBox["e", "4"]}], ",", " ", 
             RowBox[{"4", " ", 
              SubscriptBox["e", "2"], " ", 
              SubscriptBox["e", "3"]}], ",", " ", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["e", "2"]}], " ", 
              SubscriptBox["e", "4"]}]}], "}"}], "\n", "\t\t", 
           RowBox[{"Notice", ":", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "every", " ", "term", " ", "is", " ", "a", " ", "simple", " ", 
               "blade", " ", "a", " ", 
               SubscriptBox["e", "1"], 
               SubscriptBox["e", "2"]}], "..."}], 
             SubscriptBox["e", "n"], "\n", "\t\t", "Find", " ", "the", " ", 
             "eSubscripts", " ", "and", " ", "then", " ", "the", " ", "grade",
              " ", "of", " ", "each", " ", "blade"}], ":", " ", "\n", 
            "\t\t   ", "eSubscripts", ":", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                SubscriptBox["e", "1"], "}"}], ",", 
               RowBox[{"{", 
                SubscriptBox["e", 
                 RowBox[{"2", ",", "3"}]], "}"}]}], "}"}], " ", "and", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "0", "}"}], ",", 
               RowBox[{"{", 
                SubscriptBox["e", 
                 RowBox[{"3", ",", "4"}]], "}"}]}], "}"}], "\n", "\t\t   ", 
             "grades"}], ":", " ", 
            RowBox[{
             RowBox[{"{", " ", 
              RowBox[{"1", ",", " ", "2"}], " ", "}"}], " ", "and", " ", 
             RowBox[{"{", " ", 
              RowBox[{"0", ",", " ", "2"}], " ", "}"}], "\n", "\t\t   ", 
             RowBox[{"Note", ":", " ", 
              RowBox[{"grade", " ", "of", " ", 
               SubscriptBox["e", 
                RowBox[{"2", ",", "4"}]]}]}]}]}]}], " ", "=", " ", 
          RowBox[{"2", " ", "=", " ", 
           RowBox[{
            RowBox[{"Length", " ", "[", " ", 
             SubscriptBox["e", 
              RowBox[{"2", ",", "4"}]], " ", "]"}], " ", "-", " ", 
            RowBox[{"1", "\n", "\t\t   ", 
             RowBox[{"Note", ":", " ", 
              RowBox[{
              "length", " ", "of", " ", "a", " ", 
               "constant"}]}]}]}]}]}]}]}]}]}], ",", " ", 
     RowBox[{"like", " ", "5"}], ",", " ", 
     RowBox[{"is", " ", "0"}], ",", " ", 
     RowBox[{
      RowBox[{
      "so", " ", "subtracting", " ", "1", " ", "gives", " ", "a", " ", 
       "grade", " ", "of"}], " ", "-", 
      RowBox[{
      "1.", "\n", "\t\t         ", "The", " ", "correct", " ", "grade", " ", 
       "is", " ", "0"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"so", " ", "Length"}], " ", "-", " ", 
       RowBox[{"1", " ", "is", " ", "clipped", " ", "to", " ", "be"}]}], " ", 
      "\[GreaterEqual]", " ", 
      RowBox[{
      "0", "\n", "\t\t", "Use", " ", "Outer", " ", "to", " ", "make", " ", 
       "a", " ", "list", " ", "of", " ", "the", " ", "target", " ", "grades", 
       " ", "of", " ", "every", " ", "term", " ", "from", " ", "clif1", " ", 
       "with", " ", "every", " ", "term", " ", "from", " ", "clif2", "\n", 
       "\t\t\t", "Target", " ", "grade", " ", "for", " ", "Wedge", " ", 
       "Product", " ", "of", " ", "2", " ", "blades", " ", "is", " ", "sum", 
       " ", "of", " ", "the", " ", "two", " ", "grades", "\n", "\t\t\t", 
       "Thus"}]}], ",", " ", 
     RowBox[{"targetGradeList", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", " ", "+", " ", "0"}], ",", " ", 
         RowBox[{"1", " ", "+", " ", "2"}], ",", " ", 
         RowBox[{"2", " ", "+", " ", "0"}], ",", " ", 
         RowBox[{"2", " ", "+", " ", "2"}]}], "}"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"1", ",", " ", "3", ",", " ", "2", ",", " ", "4"}], " ", 
         "}"}], "\n", "\t\t\t", 
        RowBox[{"Caution", ":", " ", 
         RowBox[{"For", " ", "left", " ", "contraction"}]}]}]}]}], ",", " ", 
     RowBox[{"desire", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"grade2", " ", "-", " ", "grade1"}], ")"}], ".", " ", "\n", 
       "\t\t\t\t", "But"}]}], ",", " ", 
     RowBox[{
     "to", " ", "mimic", " ", "the", " ", "outer", " ", "order", " ", "of", 
      " ", "prdtBlade"}], ",", " ", 
     RowBox[{
     "we", " ", "must", " ", "enter", " ", "blade", " ", "1", " ", "first", 
      "\n", "\t\t\t\t", "That", " ", "is"}], ",", " ", 
     RowBox[{"we", " ", "cannot", " ", "enter", " ", 
      RowBox[{"Outer", " ", "[", " ", 
       RowBox[{"Subtract", ",", " ", "gradeList2", ",", " ", "gradeList1"}], 
       " ", "]"}], "\n", "\t\t\t\t", "Rather"}], ",", " ", 
     RowBox[{
      RowBox[{"we", " ", "enter", " ", "this", " ", "as"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"Outer", " ", "[", " ", 
        RowBox[{"Subtract", ",", " ", "gradeList1", ",", " ", "gradeList2"}], 
        " ", "]"}], "\n", "\t\t\t\t", "The", " ", "latter", " ", "gives"}]}], 
     ",", " ", 
     RowBox[{"of", " ", "course"}], ",", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "opposite", " ", "sign", " ", "from", " ", "grade", " ", 
       "1"}], " ", "-", " ", 
      RowBox[{
      "grade", " ", "2", " ", "for", " ", "every", " ", "subtraction", "\n", 
       "\t\t", "Use", " ", "Inner", " ", "to", " ", "make", " ", "a", " ", 
       "list", " ", "of", " ", "pairs"}]}], ",", " ", 
     RowBox[{
      RowBox[{"where", ":", "\n", "\t\t\t", 
       RowBox[{
       "First", " ", "element", " ", "of", " ", "pair", " ", "is", " ", "the",
         " ", "geometric", " ", "product", " ", "of", " ", "2", " ", "blades",
         "\n", "\t\t\t", "Second", " ", "element", " ", "of", " ", "pair", 
        " ", "is", " ", "the", " ", "target", " ", "grade", " ", "for", " ", 
        "that", " ", "geometric", " ", "product", "\n", "\t\t\t", 
        "bladeGradePairList"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"4", " ", 
            SubscriptBox["e", "1"]}], ",", " ", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["e", "1"]}], " ", 
            SubscriptBox["e", "3"], " ", 
            SubscriptBox["e", "4"]}], ",", " ", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"4", " ", 
            SubscriptBox["e", "2"], " ", 
            SubscriptBox["e", "3"]}], ",", " ", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["e", "2"]}], " ", 
            SubscriptBox["e", "4"]}], ",", " ", "4"}], "}"}]}], "}"}], "\n", 
       "\t\t", "Use", " ", "GradePTerm", " ", "to", " ", "extract", " ", 
       "the", " ", "part", " ", "of", " ", "each", " ", "geometric", " ", 
       "product"}]}], ",", " ", 
     RowBox[{"if", " ", "any"}], ",", " ", 
     RowBox[{
     "having", " ", "the", " ", "target", " ", "grade", "\n", "\t\t\t", 
      RowBox[{"Note", ":", " ", 
       RowBox[{"We", " ", "need", " ", "a", " ", "list", " ", "of", " ", 
        RowBox[{"GradePTerm", "[", 
         RowBox[{"blade", ",", " ", 
          RowBox[{"tgt", " ", "grade"}]}], "]"}], " ", "so", " ", "we", " ", 
        "APPLY", " ", "GradePTerm", " ", "at", " ", "level", " ", "1", "\n", 
        "\t\t\t", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"4", 
           SubscriptBox["e", "1"]}], ",", " ", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["e", "1"]}], " ", 
           SubscriptBox["e", "3"], " ", 
           SubscriptBox["e", "4"]}], ",", " ", 
          RowBox[{"4", " ", 
           SubscriptBox["e", "2"], " ", 
           SubscriptBox["e", "3"]}], ",", " ", "0"}], " ", "}"}], "\n", 
        "\t\t", "Lastly"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "we", " ", "change", " ", "the", " ", "list", " ", "of", " ", "target", 
       " ", "pieces", " ", "into", " ", "its", " ", "series", " ", 
       "expression", "\n", "\t\t\t", "Wedge", " ", "Product"}], " ", "=", " ", 
      RowBox[{"targetPrdt", " ", "=", " ", 
       RowBox[{
        RowBox[{"4", " ", 
         SubscriptBox["e", 
          RowBox[{"1", " "}]]}], " ", "+", 
        RowBox[{"4", " ", 
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "3"]}], " ", "-", " ", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "3"], " ", 
         SubscriptBox["e", "4"], "\n", "\t\t", "\n", "\t  ", 
         RowBox[{"OUTPUT", ":", "\n", "\t\t", 
          RowBox[{"The", " ", 
           RowBox[{
            RowBox[{"dot", "/", "wedge"}], "/", "contraction"}], " ", 
           "product", " ", "of", " ", "the", " ", "two", " ", 
           "clifs"}]}]}]}]}]}], ",", " ", 
     RowBox[{
     "defined", " ", "as", " ", "the", " ", "sum", " ", "of", " ", "the", " ",
       "products", " ", "of", " ", "\n", "\t\t", "every", " ", "term", " ", 
      "from", " ", "clif1", " ", "with", " ", "every", " ", "term", " ", 
      "from", " ", "clif2"}]}], "  ", "*)"}], "\n", "\t\t", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dummy1", ",", "dummy2", ",", "dummy3", ",", "dummy4", ",", "clifList1",
        ",", "clifList2", ",", "prdtBladeList", ",", "eSubscriptList1", ",", 
       "eSubscriptList2", ",", "gradeList1", ",", "\n", "\t\t\t", 
       "gradeList2", ",", "targetGradeList", ",", "bladeGradePairList", ",", 
       "targetPrdt"}], "}"}], ",", "\n", "\n", "\t\t", 
     RowBox[{
      RowBox[{"clifList1", "=", 
       RowBox[{"ClifToListG", "[", "clif1", "]"}]}], ";", 
      RowBox[{"clifList2", "=", 
       RowBox[{"ClifToListG", "[", "clif2", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"prdtBladeList", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Outer", "[", 
         RowBox[{"GeomPrdtG", ",", "clifList1", ",", "clifList2"}], "]"}], 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"eSubscriptList1", "=", 
       RowBox[{"eSubscriptListG", "/@", "clifList1"}]}], ";", "\n", "\t\t", 
      RowBox[{"eSubscriptList2", "=", 
       RowBox[{"eSubscriptListG", "/@", "clifList2"}]}], ";", "\n", "\t\t", 
      RowBox[{"gradeList1", "=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@@@", "eSubscriptList1"}], "-", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"gradeList2", "=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@@@", "eSubscriptList2"}], "-", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prdtType", " ", "==", " ", "\"\<Wedge\>\""}], ",", 
        RowBox[{"targetGradeList", "=", 
         RowBox[{"Outer", "[", 
          RowBox[{"Plus", ",", "gradeList1", ",", "gradeList2"}], "]"}]}]}], 
       "]"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prdtType", " ", "==", " ", "\"\<Dot\>\""}], ",", 
        RowBox[{"targetGradeList", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{"Outer", "[", 
           RowBox[{"Subtract", ",", "gradeList1", ",", "gradeList2"}], "]"}], 
          "]"}]}]}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prdtType", " ", "==", " ", "\"\<LC\>\""}], ",", 
        RowBox[{"targetGradeList", "=", 
         RowBox[{"-", 
          RowBox[{"Outer", "[", 
           RowBox[{"Subtract", ",", "gradeList1", ",", "gradeList2"}], 
           "]"}]}]}]}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prdtType", " ", "==", " ", "\"\<RC\>\""}], ",", 
        RowBox[{"targetGradeList", "=", 
         RowBox[{"Outer", "[", 
          RowBox[{"Subtract", ",", "gradeList1", ",", "gradeList2"}], 
          "]"}]}]}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"targetGradeList", "=", 
       RowBox[{"Flatten", "[", "targetGradeList", "]"}]}], ";", "\n", "\t\t", 
      
      RowBox[{"bladeGradePairList", "=", 
       RowBox[{"Inner", "[", 
        RowBox[{
        "List", ",", "prdtBladeList", ",", "targetGradeList", ",", "List"}], 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"targetPrdt", "=", 
       RowBox[{"CollectG", "[", 
        RowBox[{
         RowBox[{"Apply", "[", 
          RowBox[{"GradePTermG", ",", "bladeGradePairList", ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], "/.", 
         RowBox[{"List", "\[Rule]", "Plus"}]}], "]"}]}], ";", "\n", "\t\t", 
      "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"debug6", "==", "True"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<clif lists: \>\"", ",", "clifList1", ",", "\"\<,  \>\"", ",", 
           "clifList2"}], "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<e-Subscript lists: \>\"", ",", "eSubscriptList1", ",", 
           "\"\<,  \>\"", ",", "eSubscriptList2"}], "]"}], ";", "\n", 
         "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<grade lists: \>\"", ",", "gradeList1", ",", "\"\<,  \>\"", ",",
            "gradeList2"}], "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Blade geom prdt list: \>\"", ",", "prdtBladeList"}], 
          "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Target grade list: \>\"", ",", "targetGradeList"}], 
          "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<List of {blade geom prdt, tgt grade}: \>\"", ",", 
           "bladeGradePairList"}], "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"prdtType", ",", "\"\< product = \>\"", ",", "targetPrdt"}],
           "]"}]}]}], "\n", "\t\t", "]"}], ";", "\t", "\n", "\t\t", 
      "targetPrdt"}]}], "\t", "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"DotPrdtG", "[", 
   RowBox[{"clif1_", ",", "clif2_"}], "]"}], ":=", "\t\t", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "dotPrdt", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"dotPrdt", "=", 
      RowBox[{"PrdtG", "[", 
       RowBox[{"clif1", ",", "clif2", ",", "\"\<Dot\>\""}], "]"}]}], ";", 
     "\n", "\t\t", "dotPrdt"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"DotPrdtG", "[", 
   RowBox[{"u_", ",", "v_", ",", "w__"}], "]"}], ":=", 
  RowBox[{"DotPrdtG", "[", 
   RowBox[{
    RowBox[{"DotPrdtG", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DotPrdtG", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"u", "\[Equal]", "0"}], "||", 
     RowBox[{"v", "\[Equal]", "0"}]}]}]}], "\n", "\t", 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "DotPrdtG", " ", "Module"}], "  ", "*)"}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtBladeG", "[", 
    RowBox[{"blade1_", ",", "blade2_"}], "]"}], ":=", " ", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUTS", ":", " ", 
      RowBox[{"2", " ", "simple", " ", "blades"}]}], ",", " ", 
     RowBox[{
      RowBox[{"blade1", " ", "&"}], " ", "bladd2", "  ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"e", ".", "g", ".", " ", "blade1"}], " ", "=", " ", 
        StyleBox[
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "4"]}],
         FontWeight->"Plain"]}], 
       StyleBox[")",
        FontWeight->"Plain"]}], 
      StyleBox["\n",
       FontWeight->"Plain"], 
      StyleBox["\t",
       FontWeight->"Plain"], 
      StyleBox[
       RowBox[{"PROCESS", ":", " ", "\n", "\t\t", 
        RowBox[{
        "Combine", " ", "the", " ", "2", " ", "subscript", " ", "lists"}]}],
       FontWeight->"Plain"]}], 
     StyleBox[",",
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     RowBox[{
      RowBox[{
       StyleBox["preserving",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["blade1",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["subscripts",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["before",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["blade2",
        FontWeight->"Plain"], 
       StyleBox["\n",
        FontWeight->"Plain"], 
       StyleBox["\t\t",
        FontWeight->"Plain"], 
       StyleBox["Use",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["SignatureG",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["to",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["get",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["the",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["signature",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["of",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["the",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["combined",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["list",
        FontWeight->"Plain"], 
       StyleBox["\n",
        FontWeight->"Plain"], 
       StyleBox["\t",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["OUTPUT",
         FontWeight->"Plain"], 
        StyleBox[":",
         FontWeight->"Plain"], 
        StyleBox["\n",
         FontWeight->"Plain"], 
        StyleBox["\t",
         FontWeight->"Plain"], "\t", "bladePrdt"}]}], " ", "=", " ", 
      RowBox[{"algebraic", " ", "product", " ", "of", " ", "signature"}]}], 
     ",", " ", "blade1", ",", " ", 
     RowBox[{"and", " ", "blade", " ", "2", "\n", 
      StyleBox["\t",
       FontWeight->"Plain"], "\t", 
      RowBox[{"Note", ":", " ", 
       RowBox[{
        SubsuperscriptBox["e", "i", "2"], " ", "terms", " ", "are", " ", 
        "NOT", " ", "reduced", " ", "until", " ", "after", " ", "this", " ", 
        "function", " ", "is", " ", "called", " ", "by", " ", 
        "GeomPrdtG"}]}]}]}], 
    StyleBox["\t",
     FontWeight->"Plain"], "\t\t\t", "\n", "*)"}], "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "maxDim", ",", "subscriptList1", ",", "subscriptList2", ",", 
       "subscriptList12", ",", "signature12", ",", "bladePrdt"}], "}"}], ",", 
     "\n", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtBLADEG: Blade1 = \>\"", ",", "blade1", ",", 
           "\"\<, Blade2 = \>\"", ",", "blade2"}], "]"}]}]}], "\n", "\t\t\t", 
       "]"}], ";", "\n", "\t\t", "\n", "\t\t\t\t", 
      RowBox[{"subscriptList1", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"SubscriptListG", "[", "blade1", "]"}], "]"}]}], ";", " ", 
      "\n", "\t\t\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{" ", 
         RowBox[{
          RowBox[{"Example", ":", " ", 
           RowBox[{"5", " ", "+", " ", 
            RowBox[{"3", " ", 
             SubscriptBox["e", "1"], 
             SubscriptBox["e", "2"]}]}]}], " ", "\[Rule]", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"{", "0", "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], " "}]}], ")"}], " ", "\[Rule]",
         " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1", ",", " ", "2"}], "}"}]}], "  ", "*)"}], 
      "\n", "\t\t", 
      RowBox[{"maxDim", "=", 
       RowBox[{"Max", "[", "subscriptList1", "]"}]}], ";", " ", 
      RowBox[{"(*", "  ", 
       RowBox[{
        RowBox[{"Example", ":", " ", "maxDim"}], " ", "=", " ", "3"}], "  ", 
       "*)"}], "\n", "\t\t", 
      RowBox[{"subscriptList2", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"SubscriptListG", "[", "blade2", "]"}], "/.", 
         RowBox[{
          RowBox[{"u_", "/;", 
           RowBox[{"u", "\[Equal]", "0"}]}], "\[Rule]", "maxDim"}]}], "]"}]}],
       ";", " ", "\n", "\t\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Example", ":", "  ", "4"}], " ", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"{", "0", "}"}], " ", "\[Rule]", " ", 
         RowBox[{"{", "3", "}"}]}]}], "   ", "*)"}], "\n", "\n", "\t\t", 
      RowBox[{"subscriptList12", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"subscriptList1", ",", "subscriptList2"}], "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{"Example", ":", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "4"}], "}"}]}], "  ", "*)"}], "\n", 
      "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtBLADEG: Flattened list of Blade1 subscripts = \>\"", 
           ",", " ", "subscriptList1", ",", "\n", "\t\t\t\t", 
           "\"\<, Flattened list of Blade2 subscripts = \>\"", ",", 
           "subscriptList2"}], "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Joined flatten subscript lists = \>\"", ",", 
           "subscriptList12"}], "]"}]}]}], "\n", "\t\t", "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"signature12", "=", 
       RowBox[{"SignatureG", "[", "subscriptList12", "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Example", ":", " ", "signature"}], " ", "=", " ", 
        RowBox[{"+", "1"}]}], "  ", "*)"}], "\n", "\n", "\t\t", 
      RowBox[{"bladePrdt", "=", 
       RowBox[{"signature12", " ", "blade1", " ", "blade2"}]}], ";", "\n", 
      "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", "\n", "\t\t\t", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<GeomPrdtBLADEG: Signature = \>\"", ",", "signature12", ",", 
          "\"\<, product blade = \>\"", ",", "bladePrdt"}], "]"}]}], "\n", 
       "\t\t", "]"}], ";", "\n", "\n", "\t\t", "bladePrdt"}]}], "\n", "\t", 
    "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"GeomPrdtG", "[", 
   RowBox[{"0", ",", "y_"}], "]"}], ":=", "0"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{"x_", ",", "0"}], "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{"clif1_", ",", "clif2_"}], "]"}], ":=", "   ", 
   RowBox[{"(*", " ", "\n", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUTS", ":", "\n", "\t\t", "clif1"}], ",", " ", "clif2", " ", 
     "\[Dash]", " ", 
     RowBox[{"Users", " ", "input", " ", "clifs"}], ",", " ", 
     RowBox[{
     "with", " ", "either", " ", "numeric", " ", "or", " ", "symbolic", " ", 
      "coefficients", "\n", "\t", 
      RowBox[{"PROCESS", ":", " ", "\n", "\t\t", 
       RowBox[{
       "1.", " ", "Put", " ", "the", " ", "2", " ", "clifs", " ", "into", " ",
         "lists", "\n", "\t\t", "2.", " ", "Take", " ", "outer", " ", 
        "product", " ", "of", " ", "function", " ", "GeopmPrdtBladeG", " ", 
        "applied", " ", "to", " ", "the", " ", "lists", " ", "to", " ", 
        "create", " ", "the", " ", "\n", "\t\t\t", "list", " ", "of", " ", 
        "geometric", " ", "products", " ", "between", " ", "all", " ", 
        "terms", " ", 
        RowBox[{"(", "blades", ")"}], " ", "of", " ", "clif1", " ", "with", 
        " ", "all", " ", "terms", " ", "of", " ", "clif2", "\n", "\t\t", "3.",
         " ", "Convert", " ", "the", " ", "list", " ", "back", " ", "to", " ",
         "an", " ", "expression", " ", "\n", "\t\t", "4.", " ", "Use", " ", 
        "CollectG", " ", "to", " ", "evaluate", " ", "all", " ", "terms", " ", 
        SuperscriptBox[
         SubscriptBox["e", "i"], "2"], " ", "and", " ", "to", " ", "collect", 
        " ", "terms", " ", "by", " ", "blades", "\n", "\t", "OUPUT"}], ":", 
       "\n", "\t ", "clif12", ":", " ", 
       RowBox[{"The", " ", "geometric", " ", "product", " ", "clif"}]}]}]}], 
    " ", "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dummy1", ",", "dummy2", ",", "dummy3", ",", "dummy4", ",", "clif1a", 
       ",", "clif2a", ",", "clifList1", ",", "clifList2", ",", "clifList12", 
       ",", "clif12"}], "}"}], ",", "\n", "\n", "\t\t", 
     RowBox[{
      RowBox[{"clif1a", "=", 
       RowBox[{"Expand", "[", "clif1", "]"}]}], ";", 
      RowBox[{"clif2a", "=", 
       RowBox[{"Expand", "[", "clif2", "]"}]}], ";", "\t", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtG: clif1 = \>\"", ",", "clif1a", ",", 
           "\"\<, Clif2 = \>\"", ",", "clif2a"}], "]"}]}]}], "]"}], ";", "\n",
       "\t\t", "\n", "\t\t", 
      RowBox[{"clifList1", "=", 
       RowBox[{"ClifToListG", "[", "clif1a", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"clifList2", "=", 
       RowBox[{"ClifToListG", "[", "clif2a", "]"}]}], ";", "\t", "\n", "\n", 
      "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtG: Clif1 List = \>\"", ",", "clifList1", ",", 
           "\"\<,  Clif2 List = \>\"", ",", "clifList2"}], "]"}]}]}], "]"}], 
      ";", "\n", "\n", "\t\t", 
      RowBox[{"clifList12", "=", 
       RowBox[{"Outer", "[", 
        RowBox[{"GeomPrdtBladeG", ",", "clifList1", ",", "clifList2"}], 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"clif12", " ", "=", " ", 
       RowBox[{"CollectG", "[", 
        RowBox[{"clifList12", "/.", 
         RowBox[{"List", "\[Rule]", "Plus"}]}], "]"}]}], ";", "\n", "\t\t", 
      "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtG: Product clif list = \>\"", ",", "clifList12"}], 
          "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Product clif = \>\"", ",", "clif12"}], "]"}]}]}], "\n",
        "\t\t", "]"}], ";", "\n", "\t\t", "clif12"}]}], "\n", "\t", "]"}]}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{"u_", ",", "v_", ",", "w__"}], "]"}], ":=", 
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{
     RowBox[{"GeomPrdtG", "[", 
      RowBox[{"u", ",", "v"}], "]"}], ",", "w"}], "]"}]}], "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"Enables", " ", "expressions", " ", "like", " ", 
    RowBox[{"GeomPrdtG", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "u", ",", "v"}], "]"}]}], "  ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"u", "\[Equal]", "0"}], "||", 
     RowBox[{"v", "\[Equal]", "0"}]}]}]}], "\n", "\n", "\t ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "GeomPrdtG", " ", "Module"}], "  ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"LeftContractionG", "[", 
   RowBox[{"clif1_", ",", "clif2_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "leftContraction", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"leftContraction", "=", 
      RowBox[{"PrdtG", "[", 
       RowBox[{"clif1", ",", "clif2", ",", "\"\<LC\>\""}], "]"}]}], ";", "\n",
      "\t\t", "leftContraction"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"LeftContractionG", "[", 
   RowBox[{"u_", ",", "v_", ",", "w__"}], "]"}], ":=", 
  RowBox[{"LeftContractionG", "[", 
   RowBox[{
    RowBox[{"LeftContractionG", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LeftContractionG", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"u", "\[Equal]", "0"}], "||", 
     RowBox[{"v", "\[Equal]", "0"}]}]}]}], "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "Function", " ", "LeftContractionG"}], "  ",
    "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"RightContractionG", "[", 
   RowBox[{"clif1_", ",", "clif2_"}], "]"}], ":=", "\t\t", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "rightContraction", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"rightContraction", "=", 
      RowBox[{"PrdtG", "[", 
       RowBox[{"clif1", ",", "clif2", ",", "\"\<RC\>\""}], "]"}]}], ";", "\n",
      "\t\t", "rightContraction"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RightContractionG", "[", 
   RowBox[{"u_", ",", "v_", ",", "w__"}], "]"}], ":=", 
  RowBox[{"RightContractionG", "[", 
   RowBox[{
    RowBox[{"RightContractionG", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RightContractionG", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"u", "\[Equal]", "0"}], "||", 
     RowBox[{"v", "\[Equal]", "0"}]}]}]}], "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "Function", " ", "RightContractionG"}], 
   "  ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarPrdtG", "[", 
    RowBox[{"clif1_", ",", "clif2_"}], "]"}], ":=", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\n", "\n", 
      RowBox[{
       RowBox[{"INPUT", ":", " ", 
        RowBox[{"multivectors", "\n", "PROCESS"}], ":", "\n", "\t", 
        RowBox[{"As", " ", "with", " ", "function", " ", "PrdtG"}]}], ",", 
       " ", 
       RowBox[{
       "prdtBladeList", " ", "is", " ", "a", " ", "list", " ", "of", " ", 
        "blades", " ", "in", " ", "the", " ", "geometric", " ", "product", 
        "\n", "\t", "Similar", " ", "to", " ", "function", " ", "PrdtG"}], 
       ",", " ", 
       RowBox[{
        RowBox[{
        "eSubscriptList", " ", "is", " ", "a", " ", "list", " ", "of", " ", 
         "the", " ", "e"}], "-", 
        RowBox[{
        "subscripted", " ", "terms", " ", "of", " ", "the", " ", "blades", 
         "\n", "\t", "However"}]}], ",", " ", 
       RowBox[{
       "when", " ", "eSubscriptListG", " ", "is", " ", "MAPPED", " ", 
        RowBox[{"(", "/@", ")"}], " ", "to", " ", "prdtBladeList"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"we", " ", "can", " ", "get", " ", "duplicate", " ", "e"}], 
         "-", 
         RowBox[{"subscripts", ":", "\n", "\t\t", 
          RowBox[{"If", " ", "clifList"}]}]}], " ", "=", " ", 
        RowBox[{"{", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", " ", "+", " ", 
             RowBox[{"\[Sqrt]", "2"}]}], ")"}], " ", 
           SubscriptBox["e", "1"]}], " "}]}]}]}], "}"}], ",", " ", 
     RowBox[{
      RowBox[{
      "then", " ", "eSubscriptList", " ", "computes", " ", "to", " ", 
       RowBox[{"{", " ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["e", "1"], ",", " ", 
          SubscriptBox["e", "1"]}], "}"}], " ", "}"}], "\n", "\t", "Map", " ",
        "DeleteDuplicates", " ", "to", " ", "get", " ", "eList"}], " ", "=", 
      " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", " ", 
           SubscriptBox["e", "1"], " ", "}"}], " \t\t", "\n", "\t", 
          RowBox[{"Apply", " ", "[", " ", 
           RowBox[{"Length", ",", " ", "eSubscriptList", ",", " ", 
            RowBox[{"{", "1", "}"}]}], " ", "]"}], " ", "to", " ", "get", " ",
           "the", " ", "list", " ", "of", " ", "lengths", " ", "of", " ", 
          "the", " ", "e"}], "-", 
         RowBox[{
         "subscripted", " ", "terms", "\n", "\t", "Subtract", " ", "one", " ",
           "to", " ", "send", " ", "grade", " ", "0", " ", "terms", " ", 
          "to"}], " ", "-", 
         RowBox[{"1", " ", "and", " ", "all", " ", "other", " ", "terms", " ", 
          RowBox[{"to", " ", "[", " ", 
           RowBox[{"0", ",", " ", "\[Infinity]"}], " ", "]"}], "\n", "\t", 
          "Clip", " ", "the", " ", "non"}], "-", 
         RowBox[{
         "grade", " ", "0", " ", "terms", " ", "to", " ", "make", " ", "them",
           " ", "all", " ", "0"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"and", " ", "multiply", " ", "by"}], " ", "-", 
          RowBox[{
          "1", " ", "to", " ", "make", " ", "the", " ", "grade", " ", "zero", 
           " ", "terms"}]}], " ", "=", " ", 
         RowBox[{
          RowBox[{"+", "1"}], "\n", "\t", "The", " ", "scalar", " ", 
          "product", " ", "is", " ", "the", " ", "grade", " ", "zero", " ", 
          "terms", " ", "in", " ", "the", " ", "geometric", " ", 
          RowBox[{"product", ":", " ", "\n", "\t\t", 
           RowBox[{
            RowBox[{"prdtBladeList", " ", ".", " ", "zeroOnegradeList"}], " ",
             "\n", "OUTPUT"}], ":", " ", 
           RowBox[{"The", " ", "scalar", " ", "product"}]}]}]}]}], " "}]}]}], 
    "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clifList1", ",", "clifList2", ",", "prdtBladeList", ",", 
       "eSubscriptList", ",", "eList", ",", "zeroOnegradeList", ",", 
       "scalarPrdt"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"clifList1", "=", 
       RowBox[{"ClifToListG", "[", "clif1", "]"}]}], ";", 
      RowBox[{"clifList2", "=", 
       RowBox[{"ClifToListG", "[", "clif2", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"prdtBladeList", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Outer", "[", 
         RowBox[{"GeomPrdtG", ",", "clifList1", ",", "clifList2"}], "]"}], 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"eSubscriptList", "=", 
       RowBox[{"eSubscriptListG", "/@", "prdtBladeList"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"eList", "=", 
       RowBox[{"DeleteDuplicates", "/@", "eSubscriptList"}]}], ";", " ", "\n",
       "\t\t", 
      RowBox[{"zeroOnegradeList", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"Clip", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@@@", "eList"}], "-", "1"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "0"}], "}"}]}], "]"}]}]}], ";", 
      "\n", "\t\t", 
      RowBox[{"scalarPrdt", " ", "=", " ", 
       RowBox[{"prdtBladeList", ".", "zeroOnegradeList"}]}], ";", "\n", 
      "\t\t", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"debug8", " ", "==", " ", "True"}], ",", "\n", "  \t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", " ", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<clif lists: \>\"", ",", " ", "clifList1", ",", " ", 
           "\"\<,  \>\"", ",", " ", "clifList2"}], "]"}], ";", "\n", 
         "  \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Blade geom prdt list: \>\"", ",", " ", "prdtBladeList"}], 
          "]"}], ";", "\n", "  \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<e-Subscript list: \>\"", ",", " ", "eSubscriptList"}], 
          "]"}], ";", "\n", "  \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Reduced e-Subscript list: \>\"", ",", "eList"}], "]"}],
          ";", "\n", "  \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<grade list: \>\"", ",", " ", "zeroOnegradeList"}], 
          "]"}], ";", "\n", "  \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Scalar product = \>\"", ",", " ", "scalarPrdt"}], 
          "]"}]}]}], "]"}], ";", "\n", "\t\t", "scalarPrdt"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"ScalarPrdtG", "[", 
   RowBox[{"u_", ",", "v_", ",", "w__"}], "]"}], ":=", 
  RowBox[{"ScalarPrdtG", "[", 
   RowBox[{
    RowBox[{"ScalarPrdtG", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarPrdtG", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"u", "\[Equal]", "0"}], "||", 
     RowBox[{"v", "\[Equal]", "0"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"WedgePrdtG", "[", 
   RowBox[{"clif1_", ",", "clif2_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"INPUTS", ":", "\n", "\t\t", 
     RowBox[{
     "The", " ", "two", " ", "clifs", " ", "whose", " ", "Wedge", " ", 
      "product", " ", "is", " ", "to", " ", "be", " ", "taken", "\n", "\t  ", 
      "PROCESS"}], ":", "\n", "\t\t", 
     RowBox[{"See", " ", "Function", " ", "PrdtG", "\t", "\n", "\t  ", 
      RowBox[{"OUTPUT", ":", "\n", "\t\t", 
       RowBox[{
       "The", " ", "Wedge", " ", "product", " ", "of", " ", "the", " ", "two",
         " ", "clifs"}]}]}]}], ",", " ", 
    RowBox[{
    "defined", " ", "as", " ", "the", " ", "sum", " ", "of", " ", "the", " ", 
     "Wedge", " ", "products", " ", "of", " ", "\n", "\t\t", "every", " ", 
     "term", " ", "from", " ", "clif1", " ", "with", " ", "every", " ", 
     "term", " ", "from", " ", "clif2"}]}], "  ", "*)"}], "\t", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "wedgePrdt", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"wedgePrdt", "=", 
      RowBox[{"PrdtG", "[", 
       RowBox[{"clif1", ",", "clif2", ",", "\"\<Wedge\>\""}], "]"}]}], ";", 
     "\n", "\t\t", "wedgePrdt"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"WedgePrdtG", "[", 
   RowBox[{"u_", ",", "v_", ",", "w__"}], "]"}], ":=", 
  RowBox[{"WedgePrdtG", "[", 
   RowBox[{
    RowBox[{"WedgePrdtG", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WedgePrdtG", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"u", "\[Equal]", "0"}], "||", 
     RowBox[{"v", "\[Equal]", "0"}]}]}]}], "\n", "\t", 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "WedgePrdtG", " ", "Module"}], "  ", "*)"}],
   " \t\t\t\t\t \t\t\t\t\t ", "\n", 
  "\t\t\t\t\t \t\t\t\t\t \t\t\t\t\t \t\t\t\t\t "}], "\n", 
 RowBox[{"End", "[", "]"}], "\n", 
 RowBox[{"EndPackage", "[", "]"}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691073072029634*^9, 3.691073593702551*^9, 
   3.691073646277369*^9, 3.691073715183025*^9, 3.691073841869029*^9, 
   3.691073879917136*^9, {3.6910742437762337`*^9, 3.691074246906845*^9}, {
   3.691074290856971*^9, 3.691074316518396*^9}, {3.6910744297152367`*^9, 
   3.691074443783609*^9}, 3.691074602123973*^9, 3.6910746412377787`*^9, 
   3.691078543570036*^9, {3.691078683711162*^9, 3.691078684356325*^9}, {
   3.6910792440833073`*^9, 3.6910793485492907`*^9}, 3.6910794263084793`*^9, {
   3.691081666079866*^9, 3.6910816728022137`*^9}, {3.6910868127036037`*^9, 
   3.691086816524938*^9}, {3.691086852695444*^9, 3.69108730079125*^9}, {
   3.691088142246874*^9, 3.6910881473503942`*^9}, {3.69108965991323*^9, 
   3.691089662772625*^9}, {3.691089703614811*^9, 3.691089726019471*^9}, {
   3.691100163780356*^9, 3.691100163997772*^9}, 3.691101693441506*^9, 
   3.691102054745184*^9, {3.69110253806456*^9, 3.691102544107403*^9}, {
   3.69110274595408*^9, 3.691102762078927*^9}, {3.691162440635715*^9, 
   3.6911624517511578`*^9}, {3.691170784773837*^9, 3.691170784904347*^9}, 
   3.691185295493452*^9, 3.69118533205576*^9, {3.6911886933933*^9, 
   3.6911888411366796`*^9}, {3.6911893583007402`*^9, 3.691189398266358*^9}, {
   3.6911942603665857`*^9, 3.691194321427699*^9}, {3.691239331953326*^9, 
   3.691239339112747*^9}, {3.691239389071517*^9, 3.6912394948334627`*^9}, 
   3.691240061635374*^9, 3.691240098964525*^9, {3.6912401318490543`*^9, 
   3.691240144289261*^9}, {3.691961346041582*^9, 3.691961536337552*^9}, {
   3.691961568907075*^9, 3.691961575018796*^9}, {3.6925565196550093`*^9, 
   3.692556599502963*^9}, {3.692556761181243*^9, 3.692556763923517*^9}, {
   3.6925568629698*^9, 3.692556890676179*^9}, {3.692556928239348*^9, 
   3.692556957796144*^9}, {3.692556993739172*^9, 3.692557017204183*^9}, {
   3.6930947967622137`*^9, 3.693094925431357*^9}, {3.6930949574989634`*^9, 
   3.6930949640521097`*^9}, 3.693157869599161*^9, {3.693157916099348*^9, 
   3.693157937515136*^9}, {3.693157996334387*^9, 3.693158009024383*^9}, {
   3.693158039108432*^9, 3.693158049709971*^9}, {3.693159487775304*^9, 
   3.693159522653681*^9}, {3.6931596268944798`*^9, 3.6931596460341578`*^9}, {
   3.693159800271092*^9, 3.6931598184976387`*^9}, {3.693159859188189*^9, 
   3.6931598942055483`*^9}, {3.693159962172081*^9, 3.6931600027830763`*^9}, {
   3.693162446912417*^9, 3.693162480210114*^9}, {3.693162556809153*^9, 
   3.693162565501215*^9}, {3.693162812585767*^9, 3.693163079895352*^9}, {
   3.693163163784606*^9, 3.693163241071212*^9}, {3.693163271859476*^9, 
   3.693163301784256*^9}, {3.693163584026546*^9, 3.693163752270506*^9}, {
   3.693163805682198*^9, 3.693163810193038*^9}, {3.6931638590901403`*^9, 
   3.6931638733842793`*^9}, {3.6931639058268833`*^9, 
   3.6931639857834177`*^9}, {3.693167009882056*^9, 3.693167053289686*^9}, 
   3.693167517034782*^9, {3.693167570280435*^9, 3.693167584864669*^9}, {
   3.693167711653553*^9, 3.6931677975308113`*^9}, {3.69316816727183*^9, 
   3.693168218044291*^9}, {3.6931682582133617`*^9, 3.693168264526608*^9}, {
   3.6931683384247437`*^9, 3.6931684347224083`*^9}, {3.693168545403654*^9, 
   3.693168570205267*^9}, {3.6931687854758673`*^9, 3.6931688035431337`*^9}, {
   3.6931730438042927`*^9, 3.693173110086031*^9}, {3.693173163780648*^9, 
   3.693173194141218*^9}, 3.6931732690302362`*^9, 3.693173309492524*^9, {
   3.693173351181334*^9, 3.69317343487112*^9}, 3.693173495693622*^9, {
   3.693173536973173*^9, 3.693173573091786*^9}, {3.693173609158586*^9, 
   3.693173670836788*^9}, {3.693173701966054*^9, 3.693173728965836*^9}, {
   3.6931737623375673`*^9, 3.6931738214856987`*^9}, {3.693173857111045*^9, 
   3.693173958098082*^9}, 3.6931740332772512`*^9, {3.693174289335577*^9, 
   3.6931743197255507`*^9}, {3.693174350816827*^9, 3.693174382178595*^9}, {
   3.69317442154405*^9, 3.693174531981256*^9}, {3.693176011813064*^9, 
   3.693176035529809*^9}, {3.693176474598074*^9, 3.6931764766609488`*^9}, {
   3.693177209491609*^9, 3.693177608480145*^9}, 3.693178273677513*^9, {
   3.6931784946389627`*^9, 3.693178538821056*^9}, {3.6931785812130013`*^9, 
   3.693178594133366*^9}, {3.6931786265571337`*^9, 3.693178684540944*^9}, {
   3.69317885912729*^9, 3.693178878791333*^9}, {3.6931790622284193`*^9, 
   3.693179088333304*^9}, 3.6931802009866*^9, {3.693180464870358*^9, 
   3.693180468317185*^9}, {3.69326069432651*^9, 3.693260734690015*^9}, {
   3.693261684677904*^9, 3.693261703595502*^9}, {3.693262186740831*^9, 
   3.693262189259218*^9}, {3.693262483520953*^9, 3.693262509173112*^9}, {
   3.693262545241049*^9, 3.693262558978775*^9}, {3.693263689951227*^9, 
   3.693263829761874*^9}, {3.6932638646052647`*^9, 3.6932638882321033`*^9}, {
   3.693263930280765*^9, 3.693263950664716*^9}, {3.693263991951735*^9, 
   3.693264024457337*^9}, {3.6932640684912443`*^9, 3.693264221140173*^9}, {
   3.693264262196002*^9, 3.6932644872053757`*^9}, {3.693264519044353*^9, 
   3.693264545155952*^9}, {3.693264713135708*^9, 3.693264746894786*^9}, {
   3.693264781589765*^9, 3.69326513254939*^9}, {3.693265163376211*^9, 
   3.69326521930089*^9}, {3.693265251817938*^9, 3.693265288435639*^9}, {
   3.693265322174404*^9, 3.693265439929451*^9}, {3.6932654740978203`*^9, 
   3.693265493504023*^9}, {3.693265523785355*^9, 3.6932656503440533`*^9}, {
   3.6932656957707663`*^9, 3.693265847487015*^9}, {3.693266600940958*^9, 
   3.6932666057632236`*^9}, 3.693268315169372*^9, {3.6932683959890957`*^9, 
   3.693268402635236*^9}, {3.693330988076668*^9, 3.693331367156193*^9}, {
   3.693331397729875*^9, 3.693331431671883*^9}, {3.693331955360961*^9, 
   3.6933319714448547`*^9}, {3.693335178515573*^9, 3.69333519800858*^9}, {
   3.693335238142386*^9, 3.693335460572918*^9}, {3.693335590762855*^9, 
   3.693335655770034*^9}, {3.693335708118774*^9, 3.693335718386497*^9}, {
   3.693336631273716*^9, 3.693336667362616*^9}, 3.693336869604546*^9, 
   3.693336901933909*^9, {3.693337064573103*^9, 3.693337066746696*^9}, {
   3.693348285301952*^9, 3.693348456568569*^9}, {3.693348779121284*^9, 
   3.693348834700083*^9}, {3.693348897585704*^9, 3.693348898608341*^9}, {
   3.6933489370254183`*^9, 3.693348952630456*^9}, {3.693348987129423*^9, 
   3.693349035777179*^9}, {3.6933490752602997`*^9, 3.693349188207924*^9}, {
   3.6933492214286633`*^9, 3.693349237388795*^9}, {3.69334933797865*^9, 
   3.693349374696658*^9}, {3.69335001874667*^9, 3.693350092954221*^9}, {
   3.693350229411983*^9, 3.693350418757063*^9}, {3.693350464851864*^9, 
   3.693350774271655*^9}, {3.69335083799397*^9, 3.693350887224595*^9}, {
   3.693350919147559*^9, 3.693350920607731*^9}, {3.6935008698196487`*^9, 
   3.693500894677354*^9}, {3.693501813655601*^9, 3.6935018174703293`*^9}, {
   3.6935018723326263`*^9, 3.6935018783540382`*^9}, {3.693502282344377*^9, 
   3.693502305864686*^9}, {3.693502346388733*^9, 3.69350240866192*^9}, {
   3.6935024845115957`*^9, 3.6935026420483103`*^9}, {3.693502754701024*^9, 
   3.693502766648789*^9}, {3.695759436716982*^9, 3.6957594558624973`*^9}, {
   3.695759528895535*^9, 3.695759687604369*^9}, {3.695759755871704*^9, 
   3.6957597636183567`*^9}, {3.6957599248350163`*^9, 3.695759926365704*^9}, 
   3.6957609802068663`*^9, {3.695829340031712*^9, 3.6958294342786503`*^9}, {
   3.695829471938121*^9, 3.695829541469689*^9}, {3.695829575874125*^9, 
   3.69582962586443*^9}, {3.695850456291814*^9, 3.695850505253055*^9}, {
   3.6958505375961237`*^9, 3.695850550970314*^9}, {3.695943662852612*^9, 
   3.695943702827373*^9}, {3.6959437809085073`*^9, 3.695943891346388*^9}, {
   3.695943953413384*^9, 3.6959439760252934`*^9}, {3.695944078976841*^9, 
   3.695944146447859*^9}, {3.695944185590232*^9, 3.6959441921473427`*^9}, {
   3.696108591709903*^9, 3.69610865923118*^9}, {3.696108695696309*^9, 
   3.696108747685027*^9}, {3.696200447231642*^9, 3.6962004574634933`*^9}, {
   3.696200585603277*^9, 3.696200611195912*^9}, 3.696276610741981*^9, 
   3.696277686957963*^9, {3.696547809064927*^9, 3.6965478125071774`*^9}, 
   3.69654846807143*^9, {3.696548534700799*^9, 3.696548537155109*^9}, 
   3.696621562400485*^9, {3.696623771807598*^9, 3.696623773112843*^9}, {
   3.696624360351742*^9, 3.696624372638538*^9}, {3.696624453180129*^9, 
   3.6966244838059607`*^9}, {3.6966246997179823`*^9, 
   3.6966247296494083`*^9}, {3.696624841807637*^9, 3.696624863982883*^9}, {
   3.69662491500448*^9, 3.696624921439241*^9}, {3.696685766893516*^9, 
   3.696685781031966*^9}, 3.696685817524303*^9, {3.696711401956622*^9, 
   3.696711412348818*^9}, {3.6968849291037617`*^9, 3.696884994706643*^9}, {
   3.6969679812335033`*^9, 3.696968003501008*^9}}],

Cell[BoxData["\<\"GeomAlg2017Feb`Private`\"\>"], "Output",
 CellChangeTimes->{
  3.696720808557671*^9, 3.696872823338694*^9, {3.696885047009742*^9, 
   3.696885047246996*^9}, 3.6968891330169764`*^9, 3.696894825445983*^9, 
   3.6969708514330177`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Version Changes", "Subsection",
 CellChangeTimes->{{3.69626687621152*^9, 3.696266879083363*^9}}],

Cell[TextData[{
 StyleBox["version 52d\n",
  FontWeight->"Bold"],
 "Simplified expressions for both Hodge duals (no change to calculations; \
functions are just more readable)",
 StyleBox["\n\nversion 52c\n",
  FontWeight->"Bold"],
 "Replaced multiple instances of list1 list2 /. List -> Plus with list1 . \
list2\nRenamed GradePpieceG to GradePTermG\nRenamed EijPieceG to EijTermG\n\
Corrected Hodge2G calculation",
 StyleBox["\n\nversion52b\n",
  FontWeight->"Bold"],
 "Added EvenClifG and EijPieceG functions",
 StyleBox["\n\nversion 52",
  FontWeight->"Bold"],
 "\nSwitched algebraType reference to match change in palette: Now, 1 = \
Clifford Algebra,  2 = Grassmann Algebra\nAdded function EiEjPieceG \n\
Corrected definition of Gorm to use scalar product rather than dot product\n\
Added \[OpenCurlyDoubleQuote]Simplify\[CloseCurlyDoubleQuote] to the Gorm \
result since it usually leads to clearer answers\nFixed ReverseG  which would \
make some incorrect calculation for grades 4 and higher\n\tThis fixed GormG \
and NormG, both of which use ReverseG",
 StyleBox["\n\nversion 51g\n",
  FontWeight->"Bold"],
 "Deleted all reference to SortG and ExpandSortG as they did not help in \
sorting the way I hoped",
 StyleBox["\n\nversion 51f",
  FontWeight->"Bold"],
 "\nCorrected ClifToList for cases where some parts of clif have different \
precision than other parts\n    Change manner of computing list of constant \
terms",
 StyleBox["\n\nVersion 51e",
  FontWeight->"Bold"],
 "\nReplaced ",
 StyleBox["Apply [ Length [ list, {1}",
  FontColor->RGBColor[0, 0, 1]],
 " ] by ",
 StyleBox["Length @@@ list",
  FontColor->RGBColor[0, 0, 1]],
 " in many places; (just a readability change)\nAdded internal SortG function \
to sort terms if multivector has 2 or more terms\nImprove sorting of output \
multivectors by applying Mathematica\[CloseCurlyQuote]s Sort function to \
multivectors with 2 or more terms\nCorrect freeTermList calculation when the \
multivector is a constant. freeTermList should be { 0 }, not { }\n\n",
 StyleBox["Version 51c",
  FontWeight->"Bold"],
 "\nCompletely rewrote logic for a core function, ClifToListG\n   Now handles \
multivector inputs that have had precision set by user (for example, to \
format output to 6 sig digits)\n   Rewrite extended to include ConstantG\n   \
Added FreeTermG function (multivector complement of ConstantG)\n   Added \
ExpandSortG, a sub-function to ensure that functions Expand and then sort \
multivectors in a consistent way \n"
}], "Text",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.695744609387519*^9, {3.695760209746813*^9, 3.695760210162202*^9}, {
   3.6957603080726337`*^9, 3.695760308487118*^9}, 3.695850783908825*^9, 
   3.695938723288273*^9, 3.696000575770636*^9, 3.696100675249209*^9, 
   3.6961097753144283`*^9, 3.69611692791289*^9, 3.696206673520265*^9, {
   3.696266833607954*^9, 3.696266854946567*^9}, {3.696266885164042*^9, 
   3.6962670176000557`*^9}, {3.696270337201293*^9, 3.696270338174457*^9}, {
   3.6962704003340263`*^9, 3.696270413688622*^9}, {3.696270496011858*^9, 
   3.696270834177812*^9}, {3.696270900785063*^9, 3.696270996301593*^9}, {
   3.696271038004101*^9, 3.696271084895358*^9}, {3.696274546726542*^9, 
   3.6962745819804373`*^9}, {3.696275148359068*^9, 3.696275217803705*^9}, {
   3.696292333243215*^9, 3.696292492139429*^9}, 3.696346459259693*^9, {
   3.696366277456326*^9, 3.696366408294386*^9}, {3.696617017853099*^9, 
   3.696617054873804*^9}, {3.6966171012817698`*^9, 3.696617144531569*^9}, {
   3.696714078507753*^9, 3.696714177413199*^9}, {3.69672090673711*^9, 
   3.696720916129018*^9}, 3.696721181947357*^9, {3.696807237099958*^9, 
   3.696807258046179*^9}, {3.6968103061330347`*^9, 3.6968103784089613`*^9}, {
   3.696872848702424*^9, 3.6968728752883987`*^9}, {3.696872948167762*^9, 
   3.696873073143141*^9}, 3.69687310896733*^9, {3.696884108448629*^9, 
   3.696884297390074*^9}, {3.696894366381856*^9, 3.696894410262027*^9}, {
   3.696894446724839*^9, 3.6968944483974457`*^9}, {3.69696775062811*^9, 
   3.696967754213435*^9}, {3.69696779229748*^9, 3.696967836599265*^9}, {
   3.6970254589963083`*^9, 3.69702548863729*^9}, {3.697027274363237*^9, 
   3.697027372102921*^9}, 3.697046050371374*^9, 3.697046404039707*^9}]
}, Closed]]
},
CellGrouping->Manual,
WindowSize->{845, 1355},
WindowMargins->{{Automatic, 263}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 1433, 20, 92, "Title"],
Cell[CellGroupData[{
Cell[1880, 39, 93, 1, 65, "Chapter"],
Cell[1976, 42, 2840, 43, 260, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[4853, 90, 102, 1, 54, "Chapter"],
Cell[CellGroupData[{
Cell[4980, 95, 94, 1, 63, "Subchapter"],
Cell[5077, 98, 2961, 62, 490, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[8075, 165, 2002, 27, 47, "Subchapter"],
Cell[10080, 194, 2834, 41, 49, "Text"],
Cell[12917, 237, 3690, 71, 205, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[16644, 313, 161, 2, 47, "Subchapter"],
Cell[16808, 317, 2981, 68, 379, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[19826, 390, 230, 3, 47, "Subchapter"],
Cell[20059, 395, 12319, 276, 907, "Code"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32427, 677, 127, 1, 65, "Chapter"],
Cell[32557, 680, 2085, 30, 52, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[34679, 715, 129, 2, 54, "Chapter"],
Cell[34811, 719, 5443, 114, 262, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[40291, 838, 295, 6, 135, "Chapter"],
Cell[40589, 846, 42365, 1050, 3737, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[82991, 1901, 116, 1, 54, "Chapter"],
Cell[83110, 1904, 60996, 1258, 5142, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[144143, 3167, 114, 1, 54, "Chapter"],
Cell[144260, 3170, 52115, 1117, 4249, "Code"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[196424, 4293, 216, 4, 102, "Chapter"],
Cell[196643, 4299, 15131, 327, 1440, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[211811, 4631, 232, 5, 128, "Chapter"],
Cell[CellGroupData[{
Cell[212068, 4640, 52249, 1186, 4417, "Code"],
Cell[264320, 5828, 249, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[264618, 5838, 102, 1, 36, "Subsection"],
Cell[264723, 5841, 4261, 78, 771, "Text"]
}, Closed]]
}
]
*)

