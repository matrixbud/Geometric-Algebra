(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    430334,       9251]
NotebookOptionsPosition[    425122,       9144]
NotebookOutlinePosition[    425972,       9171]
CellTagsIndexPosition[    425929,       9168]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Geometric Algebra", "Title",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722519822702`*^9, 3.6910723269774513`*^9, 3.7059445837618217`*^9, {
   3.711727492084939*^9, 3.711727501735587*^9}, 3.774370688063036*^9, 
   3.774370728127152*^9, 3.774983706669629*^9, 3.774983779805956*^9, 
   3.774983845960207*^9, {3.775079985213368*^9, 3.775079987348666*^9}, {
   3.779742518417289*^9, 3.779742523624219*^9}, {3.779742823722561*^9, 
   3.779742852958397*^9}},ExpressionUUID->"0eb99713-8fc1-4874-8ff2-\
e0c1082164a1"],

Cell[CellGroupData[{

Cell["Overview", "Chapter",
 CellChangeTimes->{{3.691079996566341*^9, 3.691080000246093*^9}, {
   3.7750750899898443`*^9, 3.775075091477372*^9}, {3.77514175878936*^9, 
   3.7751417601256943`*^9}, 3.777917320156111*^9, 
   3.7779244959078417`*^9},ExpressionUUID->"9a3f1805-1cbc-478d-be6f-\
792ebaddd51e"],

Cell[TextData[{
 "This Geometric Algebra (GA) package (a.k.a Clifford Algebra package) \
performs GA operations in n-dimensions for any n. This package does not \
perform symbolic manipulations (i.e., basis-free computations). Rather it is \
designed to  investigate GA equations and relationships using the orthonormal \
basis  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{
      SubscriptBox["e", "2"], "."}]}]}], TraditionalForm]],ExpressionUUID->
  "5ce24d4c-3aa8-4300-a0dd-06976e1390b1"],
 " ... , ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["e", "n"], "}"}], ".", " "}], TraditionalForm]],
  ExpressionUUID->"c731c7d3-938d-4a55-9487-8a29fd5a0fe7"],
 "It uses standard  mathematical notation (like 3",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "2"], TraditionalForm]],ExpressionUUID->
  "7713a509-aa4a-477b-ab49-2783527db271"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["e", "3"], " ", "or", " ", 
      SubscriptBox["b", 
       RowBox[{"2", ",", "3"}]], 
      SubscriptBox["e", "2"], 
      SubscriptBox["e", "3"]}], ")"}], " "}], TraditionalForm]],
  ExpressionUUID->"c8d99c6e-f125-43e0-987a-2b6d798ce0ce"],
 " rather thanSubscript[b,2,3] Subscript[e,2] Subscript[e,3] to make \
equations readable. (Manipulation of subscripts in Mathematica is ",
 StyleBox["terribly",
  FontSlant->"Italic"],
 " difficult and is handled behind-the-scenes by this package.) With regard \
to the basis, the package performs both  symbolic (e.g., ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["b", 
    RowBox[{"2", ",", "3"}]], 
   SubscriptBox["e", "2"], 
   SubscriptBox["e", "3"]}]],ExpressionUUID->
  "d90b3234-6409-48d3-8fed-3f95bfd4914d"],
 ") and numeric (e.g., 3",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["e", "3"], 
      SubscriptBox["e", "4"]}], ")"}], " ", 
    RowBox[{"computations", " ", "."}]}], TraditionalForm]],ExpressionUUID->
  "278e8ab4-35e1-42ff-b2e3-8b591786f94c"],
 " The GA can be configured for pure space to use either the  - - - -...  or  \
+ + + + ... conventions, or  for space-time to use either -+++ or +--- . The \
package allows for additional time dimensions for those who wish to explore \
that aspect. \n\nThe package has a palette to simplify entering of \
multivectors so that entering subscripts is made easy.  The palette also \
shows all the available functions, discusses them in tooltips (i.e., hover \
the mouse over a palette entry), and displays examples.  All commands can be \
entered using symbolic as well as numerical values. The palette automatically \
updates to reflect initialization options (---- vs ++++, space vs spacetime) \
which the user can change on-the-fly.\n\nQuick Start describes how to install \
the palette. To use the commands in this package, put the file \
GeomAlg2019Oct.m in one of the directories listed in your $Path. The \
preferred location is $UserBaseDirectory. After that, to use the package \
simple enter Needs[\"GeomAlg2019Oct`\"] at the top of a notebook and then \
start using any of these commands along with usual Mathematica commands."
}], "Text",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, {
   3.6910722815485487`*^9, 3.6910723157986307`*^9}, {3.6957443849259768`*^9, 
   3.6957443872132273`*^9}, {3.774457066377931*^9, 3.774457077591625*^9}, {
   3.7745544873585243`*^9, 3.77455452172013*^9}, {3.774983613920643*^9, 
   3.7749836189586773`*^9}, {3.777907598737049*^9, 3.7779076019926033`*^9}, {
   3.777987860914003*^9, 3.777987948268182*^9}, {3.777987993193996*^9, 
   3.777988029016594*^9}, {3.777988069270928*^9, 3.77798819504677*^9}, {
   3.777988233068687*^9, 3.777988691653831*^9}, {3.77798872586373*^9, 
   3.7779887873484364`*^9}, {3.777988852191525*^9, 3.7779891293814983`*^9}, {
   3.7779891601218567`*^9, 3.777989162711042*^9}, {3.777989215657858*^9, 
   3.777989264217979*^9}, {3.7779893128016443`*^9, 3.7779894992215233`*^9}, 
   3.777989533779916*^9, {3.778363245996778*^9, 3.7783632477686768`*^9}, {
   3.77836331058841*^9, 3.7783634921115417`*^9}, {3.778363569643927*^9, 
   3.7783635882953863`*^9}, {3.7783636204117727`*^9, 
   3.7783636219234333`*^9}, {3.778363669354789*^9, 3.778363736650908*^9}, {
   3.779396659493013*^9, 
   3.779396661319619*^9}},ExpressionUUID->"c1714432-7d90-43b9-bdce-\
7f8c2bf1eb38"]
}, Closed]],

Cell[CellGroupData[{

Cell["1 Begin Package", "Chapter",
 CellChangeTimes->{{3.691191133633431*^9, 
  3.6911911457483177`*^9}},ExpressionUUID->"66501c1f-93ac-4157-b1f6-\
4144dd1837af"],

Cell[CellGroupData[{

Cell["Set Up", "Subchapter",
 CellChangeTimes->{{3.696347248593136*^9, 
  3.696347250663979*^9}},ExpressionUUID->"bfdd283e-5130-49c3-82ad-\
f7a9980651e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Mathematica", " ", 
     RowBox[{"Package", "\n", "   ", ":", "Title", ":", 
      RowBox[{
       RowBox[{"Geometric", " ", "Alagebra", " ", "in", " ", "n"}], "-", 
       RowBox[{
       "Space", "\n", "   ", ":", "Context", ":", "GeomAlg2019Oct`", "\n", 
        "   ", ":", "Author", ":", 
        RowBox[{
         RowBox[{"Dr", ".", " ", "Bud"}], " ", 
         RowBox[{"Simrin", "\n", "   ", ":", "Date", ":", 
          RowBox[{"2019", "-", "08", "-", "11"}], "\n", " ", "\n", "   ", ":", 
          RowBox[{"Package", " ", "Version"}], ":", "0.3", "\n", "   ", ":", 
          RowBox[{"Mathematica", " ", "Version"}], ":", 
          RowBox[{"11.0", ".1"}], "\n", "   ", ":", "Copyright", ":", 
          RowBox[{
           RowBox[{"(", "c", ")"}], " ", "2019", " ", 
           RowBox[{"Dr", ".", " ", "Bud"}], " ", 
           RowBox[{"Simrin", "\n", "   ", ":", "Keywords", ":", " ", 
            RowBox[{"geometric", " ", "algeba"}]}]}]}]}]}]}]}]}], ",", " ", 
    RowBox[{"Clifford", " ", "algebra"}], ",", " ", 
    RowBox[{"wedge", " ", "product"}], ",", " ", 
    RowBox[{"dot", " ", "product"}], ",", " ", 
    RowBox[{"exterior", " ", "\n", "\t", "product"}], ",", " ", 
    RowBox[{"interior", " ", "product"}], ",", " ", 
    RowBox[{"Hodge", " ", "dual"}], ",", " ", "clif", ",", " ", "multivector",
     ",", " ", "bivector", ",", " ", "rotor", ",", " ", "rotation", ",", " ", 
    "\n", "\t", "spacetime", ",", " ", 
    RowBox[{"n", "-", "dimensional"}], ",", " ", 
    RowBox[{
     RowBox[{
     "quaternion", "\n", " ", "\n", "   ", ":", "Discussion", ":", "\n", "\n",
       "USAGE", ":", "\n", "\n", "\t", 
      RowBox[{"SetDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<GeomAlg2019Oct`*\>\"", "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"BeginPackage", "[", "\"\<GeomAlg2019Oct`\>\"", "]"}], ";"}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"SetOptions", "[", 
       RowBox[{"$FrontEnd", ",", 
        RowBox[{"InputAliases", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<rT\>\"", "\[Rule]", "\"\<\[RightFloor]\>\""}], ",", 
           RowBox[{"\"\<lT\>\"", "\[Rule]", "\"\<\[LeftFloor]\>\""}]}], 
          "}"}]}]}], "]"}], ";", "  ", "\n", 
      RowBox[{"Note", ":", " ", 
       RowBox[{
       "FrontEnd", " ", "implements", " ", "this", " ", "in", " ", "all", " ",
         "of", " ", "users", " ", "notebooks"}]}]}], ",", " ", 
     RowBox[{
     "limiting", " ", "his", " ", "usage", " ", "of", " ", "these", "\n", 
      "aliases", " ", "for", " ", "other", " ", 
      RowBox[{"contexts", ".", "  ", "Not"}], " ", 
      RowBox[{"good", ".", " ", "Must"}], " ", "run", " ", "SetOptions", " ", 
      "in", " ", "FrontEnd", " ", "again", " ", "to", " ", 
      RowBox[{"undo", "."}]}]}], " ", "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.691072406579616*^9, 3.6910724363613253`*^9}, 
   3.691170964657378*^9, {3.691172520460575*^9, 3.6911725999701433`*^9}, {
   3.691172635376563*^9, 3.691172662039344*^9}, 3.691172699111658*^9, {
   3.691172758994171*^9, 3.691172771331914*^9}, {3.691346315195692*^9, 
   3.691346344412607*^9}, {3.69134734084857*^9, 3.691347342087324*^9}, {
   3.693070656972659*^9, 3.693070668032612*^9}, {3.6930798668510113`*^9, 
   3.693079872868845*^9}, {3.695744361358244*^9, 3.695744389889625*^9}, 
   3.696347203580554*^9, {3.7059424806219587`*^9, 3.705942492660396*^9}, {
   3.7059425723500137`*^9, 3.7059425731565933`*^9}, {3.705945097780608*^9, 
   3.7059451024964113`*^9}, {3.774549352689558*^9, 3.774549382968*^9}, {
   3.7745499759837914`*^9, 3.7745499784493227`*^9}, {3.774554535584663*^9, 
   3.774554615066778*^9}, {3.774645730740798*^9, 3.774645755639316*^9}, {
   3.7749836224166727`*^9, 3.774983628921142*^9}, {3.77512497585236*^9, 
   3.775124988171036*^9}, {3.77512546962029*^9, 3.775125524232349*^9}, {
   3.775133564417799*^9, 3.775133572696433*^9}, {3.7779935007503557`*^9, 
   3.777993519379917*^9}, {3.779396664081962*^9, 3.779396666938374*^9}, {
   3.7797423688655653`*^9, 3.7797424273603563`*^9}, {3.7797436799156923`*^9, 
   3.7797436857189503`*^9}, {3.779791719298419*^9, 3.779791724269416*^9}, {
   3.779792114671939*^9, 3.779792114960587*^9}, {3.779792207093775*^9, 
   3.779792227255596*^9}, {3.779792829596704*^9, 3.77979288867542*^9}, {
   3.779793279757688*^9, 3.779793305949019*^9}, {3.779795336960256*^9, 
   3.779795348201017*^9}, {3.779810057747327*^9, 3.779810196288809*^9}},
 CellLabel->
  "In[1374]:=",ExpressionUUID->"c65fb9e5-a372-4be3-a098-944901ffd52b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Debug Flags (True = On, False = Off, Default = False)", "Subchapter",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, {
   3.691170901550271*^9, 3.691170925069228*^9}, {3.691171165424671*^9, 
   3.691171166415215*^9}, {3.6963473454108677`*^9, 
   3.696347375624837*^9}},ExpressionUUID->"0b6b0107-d707-4aa2-84e0-\
633ce91bf664"],

Cell["\<\
In case of trouble, one or more of these flags can be enabled to trace the \
flow of events. The output can be prodigious so try to only enable the ones \
you might need. This capability is coded. It is not the built-in Mathematica \
debug structure.\
\>", "Text",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, 
   3.691170901550271*^9, 3.691170931919511*^9, {3.691172262541596*^9, 
   3.691172280579797*^9}, {3.691184231285781*^9, 3.691184255799389*^9}, {
   3.6911843009750767`*^9, 3.691184303414172*^9}, {3.6911850616919937`*^9, 
   3.691185191375659*^9}, {3.691690494441842*^9, 3.691690522462504*^9}, 
   3.6918635764610147`*^9, 3.691864051439683*^9, {3.69186519347125*^9, 
   3.691865194446713*^9}, {3.691865255606691*^9, 3.691865265057385*^9}, {
   3.693262406806333*^9, 3.6932624411315813`*^9}, {3.693349940534522*^9, 
   3.693349945991884*^9}, {3.69582203448588*^9, 3.695822038756646*^9}, {
   3.696094353329114*^9, 3.6960943681836653`*^9}, 3.69619893534732*^9, 
   3.696347925760697*^9, {3.6963479684663*^9, 3.696348049583315*^9}, {
   3.6963480813150787`*^9, 
   3.696348182159792*^9}},ExpressionUUID->"a138d2aa-7b8e-4d91-9508-\
5664fb9215ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"debug0", ";"}], "  ", 
  RowBox[{"(*", " ", "InverseG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug1", ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Initialization", ",", " ", 
    RowBox[{
    "both", " ", "section", " ", "3", " ", "and", " ", "section", " ", 
     "5"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug2", ";"}], "  ", 
  RowBox[{"(*", " ", "MaxDimG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug3", ";"}], "  ", 
  RowBox[{"(*", " ", "GeomPrdtG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug4", ";"}], "  ", 
  RowBox[{"(*", " ", "GradePpieceG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug5", ";"}], "  ", 
  RowBox[{"(*", " ", "ClifFormatG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug6", ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "WedgePrdtG", ",", " ", "DotPrdtG", ",", " ", "LeftContractionG", ",", " ",
     "RightContractionG"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug7", ";"}], "  ", 
  RowBox[{"(*", " ", "ReverseG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug8", ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"ScalarPrdtG", ",", " ", "HodgeDualG"}], " ", "*)"}], " "}], "\n", 

 RowBox[{
  RowBox[{"debug9", ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"FreeTermG", ",", " ", "ConstantG", ",", " ", "ClifToListG"}], " ",
    "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, 
   3.691170901550271*^9, 3.691170931919511*^9, {3.691172262541596*^9, 
   3.691172280579797*^9}, {3.691184231285781*^9, 3.691184255799389*^9}, {
   3.6911843009750767`*^9, 3.691184303414172*^9}, {3.6911850616919937`*^9, 
   3.691185191375659*^9}, {3.691690494441842*^9, 3.691690522462504*^9}, 
   3.6918635764610147`*^9, 3.691864051439683*^9, {3.69186519347125*^9, 
   3.691865194446713*^9}, {3.691865255606691*^9, 3.691865265057385*^9}, {
   3.693262406806333*^9, 3.6932624411315813`*^9}, {3.693349940534522*^9, 
   3.693349945991884*^9}, {3.69582203448588*^9, 3.695822038756646*^9}, {
   3.696094353329114*^9, 3.6960943681836653`*^9}, 3.69619893534732*^9, 
   3.696347925760697*^9, {3.778415195794034*^9, 3.7784152104234047`*^9}, {
   3.779622157756878*^9, 3.779622160982108*^9}, {3.779641770056712*^9, 
   3.779641803674849*^9}},
 CellLabel->
  "In[1376]:=",ExpressionUUID->"b2bdf740-d97a-4118-9aa7-49a73fe5e38a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization Variables", "Subchapter",
 CellChangeTimes->{{3.691170942724934*^9, 3.691170953344343*^9}, {
  3.691171121385624*^9, 
  3.691171159839477*^9}},ExpressionUUID->"31efb45a-7932-43ba-83a8-\
a6cc2ae30fb8"],

Cell[TextData[{
 " ",
 StyleBox["signatureType",
  FontColor->RGBColor[0.5, 0, 0.5]],
 "\n \t\t-1 Physicists  + - - -   i.e., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["e", "k"], "2"], "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "1"}], " ", "if", " ", "k"}], " ", "\[LessEqual]", " ", 
      "numTimelike"}]}], ";", " ", 
    RowBox[{
     RowBox[{"else", " ", 
      SuperscriptBox[
       SubscriptBox["e", "k"], "2"]}], " ", "=", " ", 
     RowBox[{"-", "1"}]}]}], TraditionalForm]],ExpressionUUID->
  "e3b71d8d-3a15-48a5-8756-ecaf2d261a9f"],
 "\n \t\t+1 Mathematicians  - + + +   i.e., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["e", "k"], "2"], "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], " ", "if", " ", "k"}], " ", "\[LessEqual]", " ", 
      "numTimelike"}]}], ";", " ", 
    RowBox[{
     RowBox[{"else", " ", 
      SuperscriptBox[
       SubscriptBox["e", "k"], "2"]}], " ", "=", " ", 
     RowBox[{"+", "1"}]}]}], TraditionalForm]],ExpressionUUID->
  "e19a016c-710a-4022-bf03-fafe14d3c450"],
 "\n ",
 StyleBox["numTimelike",
  FontColor->RGBColor[0.5, 0, 0.5]],
 "\n \t\t0 Space \n \t\t1 Space-time\n \t\t2+ More than 1 time dimension, \
allowed for those who wish to explore this\n\n These are global symbols \
(i.e., context Global`) so they are not listed in the Usage section (e.g., \
context GeomAlg2019Oct`)\n If user forgets to initialize these variables, a \
warning will be issued and defaults will be implemented:\n \tDefaults are: \
Clifford, Mathematician ++++, Space\n\n The easiest way to initialize is by \
using the palette, but these two variables can also be set within a notebook\n\
 \n Caution: If user has set Notebook to use a unique context, then only \
execute initialization of these variables after package has \n      been \
invoked with Needs statement so that their context is already assigned to \
Global`"
}], "Text",
 CellChangeTimes->{{3.691170942724934*^9, 3.691170953344343*^9}, 
   3.691171175156817*^9, {3.691171213138802*^9, 3.691171252256806*^9}, {
   3.6911712945730667`*^9, 3.691171319391305*^9}, {3.69117186351514*^9, 
   3.691171869997806*^9}, {3.691192290180006*^9, 3.691192292331027*^9}, {
   3.691193332053104*^9, 3.691193333887773*^9}, 3.691193373353045*^9, {
   3.691193411235981*^9, 3.6911934461324387`*^9}, {3.691193481872799*^9, 
   3.691193598312434*^9}, {3.691967304104115*^9, 3.691967369824239*^9}, {
   3.692446763319111*^9, 3.692446768656983*^9}, {3.692446874407032*^9, 
   3.692446910164687*^9}, {3.69244699587866*^9, 3.6924470061464*^9}, 
   3.695744368840377*^9, {3.696347429927765*^9, 3.696347465114717*^9}, {
   3.6963475144814177`*^9, 3.6963478672083693`*^9}, {3.69679078132957*^9, 
   3.696790798090218*^9}, {3.774447944569234*^9, 3.774447996041226*^9}, {
   3.774448036581604*^9, 3.7744480377735453`*^9}, {3.7744481005692673`*^9, 
   3.774448122833088*^9}, {3.774448176616078*^9, 3.7744481870200644`*^9}, 
   3.774458528005186*^9, 3.774549407797592*^9, {3.774550031475377*^9, 
   3.774550057228994*^9}, {3.7745546321209993`*^9, 3.774554635439645*^9}, 
   3.7745550613735237`*^9, 3.774983632067971*^9, {3.777907545160461*^9, 
   3.7779075523043537`*^9}, 3.7779935344916697`*^9, 3.778363797005199*^9, 
   3.778363864883315*^9, {3.778363938842946*^9, 3.7783639681772537`*^9}, 
   3.779396670700588*^9},ExpressionUUID->"20a98674-b109-4d95-8d9c-\
5eea15db0abb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Usage and one Warning Statement", "Subchapter",
 CellChangeTimes->{{3.691170942724934*^9, 3.691170953344343*^9}, {
  3.6911912013084583`*^9, 3.6911912146556377`*^9}, {3.696347896347292*^9, 
  3.6963478971152267`*^9}, {3.711727139577194*^9, 
  3.711727149175679*^9}},ExpressionUUID->"d7d51bbd-350c-4d00-aa9f-\
f0cb00af5dd3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Context", "[", "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Outputs", " ", "current", " ", "context"}], ",", " ", 
    "GeomAlg2019Oct`"}], " ", "*)"}]}], "\n", 
 RowBox[{"e", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Makes", " ", "e", " ", "a", " ", "global", " ", "variable", " ", "with", 
     " ", 
     RowBox[{"Context", "[", "e", "]"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
     "GeomAlg2019Oct`", " ", "in", " ", "any", " ", "user", " ", "Notebook", 
      " ", "\n", "\t ", "Operations", " ", "like", " ", 
      SuperscriptBox[
       SubscriptBox["e", "u_"], "2"]}], "\[Rule]", 
     RowBox[{"1", " ", "work", " ", "correctly", " ", "because", " ", 
      RowBox[{"user", "'"}], 
      RowBox[{"s", " ", "'"}], 
      RowBox[{"e", "'"}], " ", "is", " ", "the", " ", "same", " ", "as", " ", 
      "this", " ", 
      RowBox[{"package", "'"}], "s", " ", 
      RowBox[{"private", " ", "'"}], 
      RowBox[{"e", "'"}]}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AtomCoefG", "::", "usage"}], "=", 
   "\"\<AtomCoefG[x,\!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\)] \
returns the components of x, if any, having \!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\) \
as a factor\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AtomG", "::", "usage"}], "=", 
   "\"\<AtomG[p,q,...,r] generates the 'Atom' \!\(\*SubscriptBox[\(e\), \
\(p\)]\)\!\(\*SubscriptBox[\(e\), \(q\)]\)...\!\(\*SubscriptBox[\(e\), \(r\)]\
\)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AtomListG", "::", "usage"}], "=", 
   "\"\<AtomListG[x]  a list of terms \!\(\*SubscriptBox[\(e\), \
\(i\)]\)\!\(\*SubscriptBox[\(e\), \(j\)]\)... corresponding to the components \
of multivector x\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AtomListToEijListG", "::", "usage"}], "=", 
   "\"\<Changes an \!\(\*SubscriptBox[\(e\), \(i, j,  ... \)]\) list to a \
\!\(\*SubscriptBox[\(e\), \(i\)]\)\!\(\*SubscriptBox[\(e\), \(j\)]\)... \
list\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BiVectorG", "::", "usage"}], "=", 
   "\"\<BiVectorG[n] is product of 2 vectors in n dimensions\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BladeG", "::", "usage"}], "=", 
   "\"\<BladeG[p,n] outputs a general blade of grade p in n dimensions\>\""}],
   ";"}], "\n", 
 RowBox[{"ClifFormatG", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifG", "::", "usage"}], "=", 
   "\"\<ClifG[a,n] generates a general symbolic n-dimensional multivector \
with coefficients \!\(\*SubscriptBox[\(a\), \(i, j,  ... \)]\) \>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifToListG", "::", "usage"}], "=", 
   "\"\<ClifToListG[x] converts multivector x into a list of its components\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CoeffListG", "::", "usage"}], "=", 
   "\"\<CoeffListG[clif] is a list of the coefficients of clif, including \
duplicates, matching ClifToListG\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CollectG", "::", "usage"}], "=", 
   "\"\<CollectG[x] groups the terms of multivector x by blades \
\!\(\*SubscriptBox[\(e\), \(i\)]\)\!\(\*SubscriptBox[\(e\), \(j ... \)]\)\!\(\
\*SubscriptBox[\(e\), \(k\)]\). It also reduces any \
\!\(\*SuperscriptBox[SubscriptBox[\(e\), \(i\)], \(2\)]\) terms that might be \
present\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ComplexG", "::", "usage"}], "=", 
   "\"\<ComplexG[a,b] generates a complex number a + b i, where i is the \
dimension 2 PseudoScalar\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstantG", "::", "usage"}], "=", 
   "\"\<ConstantG[x] picks out the constant term(s) of multivector x\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DotPrdtG", "::", "usage"}], "=", 
   "\"\<DotPrdtG[x,y,...,z] computes dot product of several \
multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EijListG", "::", "usage"}], "=", 
   "\"\<EijListG[x] computes a list of terms \!\(\*SubscriptBox[\(e\), \(i, \
j,  ... \)]\) corresponding to the components of multivector x\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EijListToAtomListG", "::", "usage"}], "=", 
   "\"\<Changes a \!\(\*SubscriptBox[\(e\), \(i\)]\)\!\(\*SubscriptBox[\(e\), \
\(j\)]\)... list to an \!\(\*SubscriptBox[\(e\), \(i, j,  ... \)]\) \
list\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvenClifG", "::", "usage"}], "=", 
   "\"\<EvenClifG[b,n] generates an n-dimensional multivector having only \
even-grade terms\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpandG", "::", "usage"}], "=", 
   "\"\<ExpandG[x] expands multivector x, including reduction of possible \
lingering \!\(\*SuperscriptBox[SubscriptBox[\(e\), \(i\)], \(2\)]\) \
terms\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FreeTermG", "::", "usage"}], "=", 
   "\"\<FreeTermG[x,c] computes clif, x, minus constant term, c\>\""}], 
  ";"}], "\n", 
 RowBox[{"GeomPrdtAtomG", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "::", "usage"}], "=", 
   "\"\<GeomPrdtG[x,y,...,z] computes the geometric (a.k.a. Clifford) product \
of several multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GormG", "::", "usage"}], "=", 
   "\"\<GormG[x] computes the gorm, \!\(\*SubscriptBox[\(x\), \(Reverse\)]\) \
\[CenterDot] x, of multivector x\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GradedClifG", "::", "usage"}], "=", 
   "\"\<GradedClifG[a,p,n] generates a general n-dimensional grade-p \
expression having coefficients \!\(\*SubscriptBox[\(a\), \(i, j,  ... \)]\)\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GradeListG", "::", "usage"}], "=", 
   "\"\<GradeListG[x] generates a list of grades matching the components of \
multivector x\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HodgeDual5G", "::", "usage"}], "=", 
   "\"\<HodgeDual5G[x,n] generates this author's preferred Hodge Dual. See \
file 'Examples'.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HodgeDualG", "::", "usage"}], "=", 
   "\"\<HodgeDualG[x,n] generates an alternative Hodge Dual, x \[SmallCircle] \
i, of multivector x, where i is the pseudovector of dimenstion n\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HodgeDual2G", "::", "usage"}], "=", 
   "\"\<HodgeDual2G[x,n] = x \[Wedge] \!\(\*SuperscriptBox[\(i\), \(-1\)]\)\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseG", "::", "usage"}], "=", 
   "\"\<InverseG[x] computes the inverse, if it exists, of multivector x. It \
is fast for numeric x for n \[LessEqual] 6 and symbolic x for n \[LessEqual] \
3\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LeftContractionG", "::", "usage"}], "=", 
   "\"\<LeftContractionG[x,y,...,z] computes the left contraction of several \
multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ListToClifG", "::", "usage"}], "=", 
   "\"\<ListToclifG[xList] converts a list into its corresponding multivector\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxDimG", "::", "usage"}], "=", 
   "\"\<MaxDimG[x] finds the maximum dimension among blades in the \
multivector\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxGradeG", "::", "usage"}], "=", 
   "\"\<MaxGradeG[x] finds the maximum grade among the terms of multivector x\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NormG", "::", "usage"}], "=", 
   "\"\<Norm[x] generates the norm of a multivector x when it exists\>\""}], 
  ";"}], "\n", 
 RowBox[{"PrdtG", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PseudoScalarG", "::", "usage"}], "=", 
   "\"\<PseudoScalarG[n] generates the dimension n positive unit pseudoscalar\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pSliceG", "::", "usage"}], "=", 
   "\"\<pSlice[x,p] finds the components of multivector x that are of grade p\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuaternionG", "::", "usage"}], "=", 
   "\"\<QuaternionG[a,b,c,d = a + bi + cj + dk = a + \
\!\(\*SubscriptBox[\(be\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\) - \
\!\(\*SubscriptBox[\(ce\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\) + \
\!\(\*SubscriptBox[\(de\), \(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReduceG", "::", "usage"}], "=", 
   "\"\<ReduceG[x] reduces any \!\(\*SuperscriptBox[SubscriptBox[\(e\), \
\(i\)], \(2\)]\) terms in multivector x according to user's initialization \
scheme\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReduceG", "::", "warning"}], "=", 
   "\"\<The default ++++ metric signature hs been set. Use Palette if you \
wish to change initialization.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReverseG", "::", "usage"}], "=", 
   "\"\<ReverseG[x] generates the reverse of multivector x. That is, it \
changes signs of even blades of grade > 0\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RightContractionG", "::", "usage"}], "=", 
   "\"\<RightContractionG[x,y,...,z] computes the right contraction of \
several multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RotorG", "::", "usage"}], "=", 
   "\"\<RotorG[m,n,\[Theta]} generates a rotor that spins the m n-axis \
counter-clockwise by \[Theta]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarPrdtG", "::", "usage"}], "=", 
   "\"\<ScalarPrdtG[x,y,...,z] computes the scalar product of several \
multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SignatureG", "::", "usage"}], "=", 
   "\"\<SignatureG[list] computes the signature of a list; i.e., \
\[PlusMinus]1 depending upon whether the number of adjacent transpositions to \
put the list in order is even or odd. SignatureG works the same as \
Mathematica's Signature function except that it also calculates signatures \
even if there are repeating elements in the list. While SignatureG is more \
general in nature than GA, it is used here to greatly simplify the \
antisymmetrization process required for the geometric product.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SubscriptListG", "::", "usage"}], "=", 
   "\"\<SubscriptListG[x] generates a list of subscripts of the terms in \
multivector x\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorG", "::", "usage"}], "=", 
   "\"\<VectorG[a,n] generates a general (1-dimensional) vector of dimension \
n with coefficients \!\(\*SubscriptBox[\(a\), \(i\)]\)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WedgePrdtG", "::", "usage"}], "=", 
   "\"\<WedgeProductG[x,y,...,z] computes the wedge (a.k.a exterior) product \
of multivectors x, y, ..., z\>\""}], ";"}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, 
   3.691170901550271*^9, 3.691170931919511*^9, 3.691191012184572*^9, {
   3.691191574857904*^9, 3.691191598506023*^9}, {3.6913488450185633`*^9, 
   3.691348845609715*^9}, {3.692447079216297*^9, 3.6924471231196547`*^9}, {
   3.692466346018285*^9, 3.69246635158994*^9}, {3.6924792339877777`*^9, 
   3.692479235697345*^9}, 3.6924918220692053`*^9, {3.6925515108435583`*^9, 
   3.6925515144652643`*^9}, 3.6925523727379313`*^9, {3.6925645231271973`*^9, 
   3.69256452496769*^9}, {3.6931799417333603`*^9, 3.6931800036341143`*^9}, {
   3.693180153515903*^9, 3.693180154513607*^9}, {3.693351095256298*^9, 
   3.693351177291225*^9}, {3.693351230299827*^9, 3.69335123186662*^9}, 
   3.695744339495956*^9, {3.6958205679318438`*^9, 3.695820664898106*^9}, 
   3.695849976726709*^9, 3.695850029484832*^9, {3.696198925565792*^9, 
   3.696198941990065*^9}, {3.696206195752206*^9, 3.6962062231960707`*^9}, {
   3.6962062535994368`*^9, 3.696206255205287*^9}, {3.696206716861391*^9, 
   3.6962067592672873`*^9}, {3.696274297025106*^9, 3.696274400997569*^9}, {
   3.696615976560133*^9, 3.696616030029272*^9}, 3.696616202136299*^9, {
   3.696617418434855*^9, 3.696617428388686*^9}, {3.6967205066222973`*^9, 
   3.6967206236157503`*^9}, {3.696883668136239*^9, 3.6968837779231567`*^9}, {
   3.696885267802205*^9, 3.6968852717601213`*^9}, {3.696885305355955*^9, 
   3.696885305875108*^9}, {3.696888961924432*^9, 3.696888988624432*^9}, {
   3.696894818104793*^9, 3.6968948689886923`*^9}, {3.696894907085924*^9, 
   3.696894908355514*^9}, {3.696967872606762*^9, 3.696967878366436*^9}, {
   3.696967938109671*^9, 3.696967942692211*^9}, {3.77444833740242*^9, 
   3.774448339361466*^9}, 3.774448449415064*^9, {3.774546602320857*^9, 
   3.774546667713036*^9}, {3.774546764462332*^9, 3.774546769140644*^9}, {
   3.77454680170467*^9, 3.774546839297427*^9}, 3.7745494178722267`*^9, {
   3.774554668481256*^9, 3.7745546718539257`*^9}, 3.774983635668571*^9, 
   3.775075460126781*^9, {3.775123190273097*^9, 3.7751231973968163`*^9}, {
   3.775123237268036*^9, 3.775123252220633*^9}, {3.775124097660597*^9, 
   3.7751241329927073`*^9}, 3.775124237830367*^9, {3.775124365113895*^9, 
   3.775124425022977*^9}, {3.77512454775596*^9, 3.775124554703045*^9}, {
   3.775125646819537*^9, 3.7751256485343637`*^9}, {3.775125794012031*^9, 
   3.775125802690913*^9}, {3.7751260855466013`*^9, 3.775126118105022*^9}, {
   3.775126210129208*^9, 3.7751262234918222`*^9}, {3.775126383769684*^9, 
   3.775126415115324*^9}, 3.775126519515176*^9, {3.775133615062565*^9, 
   3.7751336311449127`*^9}, 3.7751339543100767`*^9, {3.7755816245402117`*^9, 
   3.775581636480055*^9}, {3.77558220887508*^9, 3.775582242969562*^9}, 
   3.7755823392618113`*^9, {3.775582451432797*^9, 3.7755824617432213`*^9}, {
   3.775582664734206*^9, 3.775582674077622*^9}, {3.775584973040986*^9, 
   3.7755849737428493`*^9}, {3.775585019294463*^9, 3.7755850913060627`*^9}, {
   3.775585154170549*^9, 3.775585158299033*^9}, {3.775596215728896*^9, 
   3.775596248537055*^9}, {3.7756042614935513`*^9, 3.775604294110714*^9}, {
   3.775604380811844*^9, 3.7756043982870197`*^9}, {3.775645205741769*^9, 
   3.775645251152955*^9}, {3.7756460854417973`*^9, 3.77564608648853*^9}, {
   3.775646155786337*^9, 3.775646157472468*^9}, {3.7756470139648867`*^9, 
   3.775647106198036*^9}, {3.775647521749111*^9, 3.775647522930004*^9}, {
   3.776002453931438*^9, 3.776002471728344*^9}, {3.7760053393610153`*^9, 
   3.776005343006092*^9}, {3.776016135338503*^9, 3.7760161388351507`*^9}, {
   3.7760161912162323`*^9, 3.776016196923225*^9}, {3.776025376333159*^9, 
   3.776025425256933*^9}, {3.776025462701427*^9, 3.7760254990804853`*^9}, 
   3.776026083230489*^9, {3.7760269879114103`*^9, 3.776027071251017*^9}, {
   3.7760271151411953`*^9, 3.776027125147875*^9}, {3.776110174096887*^9, 
   3.776110259234088*^9}, {3.7761102971217403`*^9, 3.776110324664057*^9}, 
   3.77611035493078*^9, {3.776111278087606*^9, 3.7761112869488697`*^9}, {
   3.776111330640945*^9, 3.776111400413919*^9}, {3.776111533418598*^9, 
   3.776111555251718*^9}, {3.776111686017517*^9, 3.7761116929037952`*^9}, {
   3.776111767341218*^9, 3.776111800579113*^9}, {3.776112039588449*^9, 
   3.776112065309188*^9}, {3.776112109638021*^9, 3.7761121122211657`*^9}, {
   3.77611220297864*^9, 3.776112240020184*^9}, {3.776112279134726*^9, 
   3.776112280520583*^9}, 3.776112731866996*^9, {3.7779149253857727`*^9, 
   3.77791493790031*^9}, {3.777914995348982*^9, 3.777915002531622*^9}, {
   3.777915463117667*^9, 3.7779154699507303`*^9}, 3.7779155787447777`*^9, 
   3.777993547652903*^9, {3.778020936050255*^9, 3.778020958468236*^9}, {
   3.778021003690329*^9, 3.778021103394569*^9}, {3.778021150413027*^9, 
   3.778021261686409*^9}, {3.7780213043107357`*^9, 3.778021388923793*^9}, 
   3.778021427798431*^9, {3.778021535899979*^9, 3.778021618043756*^9}, {
   3.778021657165844*^9, 3.778021667248312*^9}, {3.778021769221641*^9, 
   3.7780217885745573`*^9}, {3.778021822404853*^9, 3.778021835284359*^9}, {
   3.778322416684012*^9, 3.778322436175239*^9}, {3.778322538724359*^9, 
   3.778322565410797*^9}, {3.778323725866781*^9, 3.778323756140038*^9}, {
   3.778323926724921*^9, 3.778323929237948*^9}, {3.7783240031317577`*^9, 
   3.778324033797185*^9}, {3.778324103016962*^9, 3.778324112402955*^9}, {
   3.778324171864393*^9, 3.778324182326674*^9}, {3.778326298441909*^9, 
   3.778326365302989*^9}, {3.778367226236074*^9, 3.7783672296225767`*^9}, {
   3.778435386652763*^9, 3.7784354998571787`*^9}, {3.7784355338721237`*^9, 
   3.778435589066433*^9}, {3.7790336253174686`*^9, 3.779033640107934*^9}, {
   3.779034167698654*^9, 3.7790341726033688`*^9}, {3.779039239553203*^9, 
   3.779039304779469*^9}, {3.779039335728099*^9, 3.779039449184662*^9}, {
   3.779039493658454*^9, 3.7790396069818983`*^9}, {3.779049209264248*^9, 
   3.7790492293365097`*^9}, {3.7793962623013763`*^9, 3.7793963023172398`*^9}, 
   3.77939667940602*^9, {3.7793997170114403`*^9, 3.779399785878401*^9}, {
   3.779444469760665*^9, 3.7794444889682817`*^9}, {3.779732782070847*^9, 
   3.779732887414556*^9}, {3.779736239031261*^9, 3.779736240096443*^9}, {
   3.7798250249636908`*^9, 3.779825045758562*^9}, {3.779825462189456*^9, 
   3.7798254749065857`*^9}, {3.779964130205675*^9, 3.779964150342907*^9}, {
   3.779964210775271*^9, 3.7799643646740723`*^9}, {3.77997397424161*^9, 
   3.779974198385721*^9}, {3.780002258653153*^9, 3.780002345666581*^9}, {
   3.780050086759481*^9, 3.78005008818626*^9}, {3.780050132171445*^9, 
   3.780050165262147*^9}, {3.780050223440199*^9, 3.780050278053871*^9}, {
   3.78005034763898*^9, 3.780050350873485*^9}, {3.7800503901203413`*^9, 
   3.780050392613562*^9}, {3.7801751812557373`*^9, 3.780175182047914*^9}},
 CellLabel->
  "In[1386]:=",ExpressionUUID->"bb95fb8d-d9f3-4598-863d-ce86f7c663a4"],

Cell[BoxData["\<\"GeomAlg2019Oct`\"\>"], "Output",
 CellChangeTimes->{
  3.77798835127761*^9, {3.777991793476377*^9, 3.777991793960154*^9}, {
   3.777993583276174*^9, 3.777993603180125*^9}, 3.7780221822756987`*^9, 
   3.7783226162848053`*^9, {3.778329169686346*^9, 3.778329170232748*^9}, {
   3.7783649894988823`*^9, 3.77836498999448*^9}, 3.778416108064514*^9, {
   3.778435306990715*^9, 3.77843530760784*^9}, 3.778435605701487*^9, 
   3.778844737794175*^9, {3.779039178256003*^9, 3.779039178798381*^9}, 
   3.779039655363309*^9, 3.779039876571334*^9, {3.779041959869493*^9, 
   3.77904196050359*^9}, {3.779048518907467*^9, 3.7790485195228453`*^9}, {
   3.7790495987902327`*^9, 3.7790495995638866`*^9}, {3.779393258158659*^9, 
   3.779393258770686*^9}, {3.779395116007536*^9, 3.7793951166264267`*^9}, 
   3.7793952900939407`*^9, {3.779395648556013*^9, 3.779395649137101*^9}, {
   3.779396835664999*^9, 3.7793968362002487`*^9}, 3.7793975842798157`*^9, {
   3.779400104984366*^9, 3.779400105584841*^9}, {3.779402298321652*^9, 
   3.779402298994639*^9}, 3.779402383063889*^9, {3.779444881675521*^9, 
   3.779444882277557*^9}, {3.779482639248047*^9, 3.7794826400373983`*^9}, 
   3.779482935088216*^9, 3.779483894082285*^9, {3.779485451654608*^9, 
   3.779485452258647*^9}, {3.779487319645033*^9, 3.77948732027984*^9}, {
   3.779642659982759*^9, 3.7796426605454397`*^9}, {3.779644514339965*^9, 
   3.779644514981773*^9}, 3.7796456558106127`*^9, 3.77965829184757*^9, 
   3.779660383918394*^9, {3.779662724098783*^9, 3.779662724820231*^9}, {
   3.779731769141498*^9, 3.779731769791232*^9}, {3.779736250116394*^9, 
   3.7797362507940187`*^9}, {3.779743705962945*^9, 3.779743706380851*^9}, {
   3.779749400140995*^9, 3.779749400745963*^9}, {3.779750783525949*^9, 
   3.779750784101589*^9}, {3.779789112995702*^9, 3.779789113578521*^9}, {
   3.77979313636268*^9, 3.779793137150724*^9}, {3.779814279169129*^9, 
   3.779814279683461*^9}, 3.779814358325296*^9, {3.779815118243482*^9, 
   3.77981511877489*^9}, {3.779815149618493*^9, 3.7798151567069674`*^9}, {
   3.779815614559786*^9, 3.7798156150123367`*^9}, {3.779816534576088*^9, 
   3.779816535038722*^9}, 3.779825007918661*^9, 3.779825281181912*^9, 
   3.779825563833136*^9, 3.779825679071612*^9, {3.7798335493532057`*^9, 
   3.779833549947942*^9}, {3.779834121707693*^9, 3.779834122223256*^9}, {
   3.779972307189679*^9, 3.7799723076366568`*^9}, 3.7799815618272448`*^9, {
   3.7801741556893044`*^9, 3.780174156205771*^9}, 3.780420259242578*^9, {
   3.780420750277111*^9, 3.78042075082692*^9}, {3.780421873603384*^9, 
   3.780421874170326*^9}, {3.780507945174802*^9, 3.780507945758231*^9}, {
   3.780508264272296*^9, 3.7805082648382807`*^9}, {3.780508856086*^9, 
   3.780508856802731*^9}, {3.780522259503107*^9, 3.780522260038396*^9}, {
   3.7805235532329693`*^9, 3.7805235537348757`*^9}, {3.780528005837737*^9, 
   3.780528017649213*^9}, {3.78059061488058*^9, 3.780590615465186*^9}, {
   3.7806816970469103`*^9, 3.780681697634431*^9}, {3.7808293565556393`*^9, 
   3.780829357122267*^9}, {3.781384426591114*^9, 3.7813844271081343`*^9}, 
   3.782258537140167*^9},
 CellLabel->
  "Out[1386]=",ExpressionUUID->"2d101019-567a-4722-9ba2-e3e26616bbd4"],

Cell[BoxData["e"], "Output",
 CellChangeTimes->{
  3.77798835127761*^9, {3.777991793476377*^9, 3.777991793960154*^9}, {
   3.777993583276174*^9, 3.777993603180125*^9}, 3.7780221822756987`*^9, 
   3.7783226162848053`*^9, {3.778329169686346*^9, 3.778329170232748*^9}, {
   3.7783649894988823`*^9, 3.77836498999448*^9}, 3.778416108064514*^9, {
   3.778435306990715*^9, 3.77843530760784*^9}, 3.778435605701487*^9, 
   3.778844737794175*^9, {3.779039178256003*^9, 3.779039178798381*^9}, 
   3.779039655363309*^9, 3.779039876571334*^9, {3.779041959869493*^9, 
   3.77904196050359*^9}, {3.779048518907467*^9, 3.7790485195228453`*^9}, {
   3.7790495987902327`*^9, 3.7790495995638866`*^9}, {3.779393258158659*^9, 
   3.779393258770686*^9}, {3.779395116007536*^9, 3.7793951166264267`*^9}, 
   3.7793952900939407`*^9, {3.779395648556013*^9, 3.779395649137101*^9}, {
   3.779396835664999*^9, 3.7793968362002487`*^9}, 3.7793975842798157`*^9, {
   3.779400104984366*^9, 3.779400105584841*^9}, {3.779402298321652*^9, 
   3.779402298994639*^9}, 3.779402383063889*^9, {3.779444881675521*^9, 
   3.779444882277557*^9}, {3.779482639248047*^9, 3.7794826400373983`*^9}, 
   3.779482935088216*^9, 3.779483894082285*^9, {3.779485451654608*^9, 
   3.779485452258647*^9}, {3.779487319645033*^9, 3.77948732027984*^9}, {
   3.779642659982759*^9, 3.7796426605454397`*^9}, {3.779644514339965*^9, 
   3.779644514981773*^9}, 3.7796456558106127`*^9, 3.77965829184757*^9, 
   3.779660383918394*^9, {3.779662724098783*^9, 3.779662724820231*^9}, {
   3.779731769141498*^9, 3.779731769791232*^9}, {3.779736250116394*^9, 
   3.7797362507940187`*^9}, {3.779743705962945*^9, 3.779743706380851*^9}, {
   3.779749400140995*^9, 3.779749400745963*^9}, {3.779750783525949*^9, 
   3.779750784101589*^9}, {3.779789112995702*^9, 3.779789113578521*^9}, {
   3.77979313636268*^9, 3.779793137150724*^9}, {3.779814279169129*^9, 
   3.779814279683461*^9}, 3.779814358325296*^9, {3.779815118243482*^9, 
   3.77981511877489*^9}, {3.779815149618493*^9, 3.7798151567069674`*^9}, {
   3.779815614559786*^9, 3.7798156150123367`*^9}, {3.779816534576088*^9, 
   3.779816535038722*^9}, 3.779825007918661*^9, 3.779825281181912*^9, 
   3.779825563833136*^9, 3.779825679071612*^9, {3.7798335493532057`*^9, 
   3.779833549947942*^9}, {3.779834121707693*^9, 3.779834122223256*^9}, {
   3.779972307189679*^9, 3.7799723076366568`*^9}, 3.7799815618272448`*^9, {
   3.7801741556893044`*^9, 3.780174156205771*^9}, 3.780420259242578*^9, {
   3.780420750277111*^9, 3.78042075082692*^9}, {3.780421873603384*^9, 
   3.780421874170326*^9}, {3.780507945174802*^9, 3.780507945758231*^9}, {
   3.780508264272296*^9, 3.7805082648382807`*^9}, {3.780508856086*^9, 
   3.780508856802731*^9}, {3.780522259503107*^9, 3.780522260038396*^9}, {
   3.7805235532329693`*^9, 3.7805235537348757`*^9}, {3.780528005837737*^9, 
   3.780528017649213*^9}, {3.78059061488058*^9, 3.780590615465186*^9}, {
   3.7806816970469103`*^9, 3.780681697634431*^9}, {3.7808293565556393`*^9, 
   3.780829357122267*^9}, {3.781384426591114*^9, 3.7813844271081343`*^9}, 
   3.7822585371491003`*^9},
 CellLabel->
  "Out[1387]=",ExpressionUUID->"e3f24037-1da1-4821-970f-76febd1a6c68"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2 Begin Private (i.e., define functions)", "Chapter",
 CellChangeTimes->{{3.6911912574424143`*^9, 
  3.691191285333445*^9}},ExpressionUUID->"a1525982-1156-48eb-8125-\
efcb2d27577c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, 
   3.691170901550271*^9, 3.691170931919511*^9, 3.691191012184572*^9, {
   3.691346372215829*^9, 3.691346379937498*^9}, {3.69134830962848*^9, 
   3.691348380261441*^9}, {3.691618877779533*^9, 3.691618892258176*^9}},
 CellLabel->
  "In[1435]:=",ExpressionUUID->"2d4b85c4-75f9-4a80-a7c3-79d1a9e6ca1a"]
}, Closed]],

Cell[CellGroupData[{

Cell["3 Operator Symbols", "Chapter",
 CellChangeTimes->{{3.691072646164959*^9, 3.691072653027358*^9}, 
   3.691191316677023*^9},ExpressionUUID->"58177a45-6844-4477-ad51-\
5a2c82db5919"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Diamond", ":=", "GeomPrdtG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "clifA", " ", "Esc", " ", "dia", " ", "Esc", " ", 
    RowBox[{"clifB", ":", " ", 
     RowBox[{"clifA", " ", "\[Diamond]", " ", "clifB"}]}]}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Wedge", ":=", "WedgePrdtG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "clifA", " ", 
    RowBox[{"Esc", " ", "^", " ", "Esc"}], " ", 
    RowBox[{"clifB", ":", " ", 
     RowBox[{"clifA", " ", "\[Wedge]", " ", "clifB"}]}]}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"CenterDot", ":=", "DotPrdtG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", 
    RowBox[{"Esc", " ", ".", " ", 
     RowBox[{"Esc", ":", " ", 
      RowBox[{"clifA", " ", "\[CenterDot]", " ", "clifB"}]}]}]}], "  ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Star", ":=", "ScalarPrdtG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "Esc", " ", "star", " ", 
    RowBox[{"Esc", ":", " ", 
     RowBox[{"clifA", " ", "\[Star]", " ", "clifB"}]}]}], "  ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"LeftTee", ":=", "LeftContractionG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "Esc", " ", "lT", " ", 
    RowBox[{"Esc", ":", "  ", 
     RowBox[{"clifA", " ", "\[LeftTee]", " ", "clifB"}]}]}], "  ", "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{" ", 
      RowBox[{
       RowBox[{"In", " ", "Mathematica"}], ",", " ", 
       RowBox[{
        RowBox[{"can", "'"}], "t", " ", "use", " ", "Right", " ", "Floor"}], 
       ","}], "  ", "\[RightFloor]"}], "  ", "as", " ", "a", " ", "binary", 
     " ", "operator", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", ".", "e", "."}], ",", " ", "infix"}], ")"}], ".", " ", 
      "So"}], " ", "use"}], " ", "\[RightTee]", " ", "instead"}], "   ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"RightTee", ":=", "RightContractionG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "Esc", " ", "rT", " ", 
    RowBox[{"Esc", ":", "  ", 
     RowBox[{"clifA", " ", "\[RightTee]", " ", "ClifB"}]}]}], "  ", "*)"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Example", ":", " ", 
    RowBox[{"wedge", " ", "product", " ", "of", " ", "3", " ", "vectors"}], 
    ":", " ", 
    RowBox[{"vector1", " ", "^", " ", 
     RowBox[{"vector2", " ", "^", " ", "vector3"}]}]}], "  ", "*)"}]}], "\n", 

 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Future", ":", " ", 
    RowBox[{"Add", " ", "unary", " ", "operators", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", ".", "e", "."}], ",", " ", "postfix"}], ")"}], " ", "\n", 
     "\t\t", "Consider", " ", "SuperStar", " ", 
     RowBox[{"(", 
      RowBox[{
      "unfortunately", " ", "considered", " ", "a", " ", "power", " ", "I", 
       " ", "believe"}], ")"}], " ", "or", " ", "\n", "\t\t", "OverHat", " ", 
     "for", " ", "Hodge", " ", "Dual", " ", "and", " ", "OverTilde", " ", 
     "for", " ", "Reverse"}]}], "  ", "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691079943689949*^9, {3.69108238077335*^9, 
   3.691082387422855*^9}, 3.691347313509397*^9, {3.692447192883754*^9, 
   3.692447224436717*^9}, {3.692447254520227*^9, 3.6924473080464687`*^9}, {
   3.693067885965362*^9, 3.69306795126612*^9}, {3.693068349184244*^9, 
   3.6930683506472*^9}, {3.693068394267212*^9, 3.693068396161887*^9}, {
   3.693070410088418*^9, 3.6930704714222183`*^9}, {3.693070505912455*^9, 
   3.693070569650454*^9}, {3.693070603813429*^9, 3.693070606477264*^9}, 
   3.693070637926775*^9, {3.693070681375293*^9, 3.693070738287313*^9}, {
   3.6930708066321287`*^9, 3.693070815357985*^9}, {3.6930708724412727`*^9, 
   3.693070944492628*^9}, {3.693079943932272*^9, 3.693080041128208*^9}, 
   3.693093298618628*^9, 3.693093657164068*^9, {3.6930950873556547`*^9, 
   3.6930950885425873`*^9}, {3.6933512808115587`*^9, 
   3.6933513326995707`*^9}, {3.693351363186131*^9, 3.693351387762291*^9}, {
   3.777909674519705*^9, 3.777909676798048*^9}, {3.777909711500111*^9, 
   3.7779097244134483`*^9}, {3.777909788879583*^9, 3.777909797716589*^9}, 
   3.777910103226995*^9, {3.77973916673447*^9, 3.779739167713429*^9}, {
   3.779739200029661*^9, 3.7797392186096888`*^9}, {3.7797401585142193`*^9, 
   3.779740189107279*^9}, {3.7797403097473497`*^9, 3.779740326091112*^9}, {
   3.7797407473728867`*^9, 3.779740856128405*^9}, {3.7797409074034224`*^9, 
   3.779740935284237*^9}},
 CellLabel->
  "In[1436]:=",ExpressionUUID->"eab06bde-dac4-4543-b3e4-dd8a5cfa5a9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "4 Typing Aids: Multivector Generators\n\t",
 StyleBox["Vectors, Blades, Multivectors, Rotors, \n\t   Complex Numbers, \
Quaternions", "Subchapter"]
}], "Chapter",
 CellChangeTimes->{{3.691073654834609*^9, 3.691073665779769*^9}, {
  3.691079848496414*^9, 
  3.691079895746023*^9}},ExpressionUUID->"e4a04ef0-9773-466f-8f2a-\
2556d621d191"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ModifyContextPathG", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"len", ",", "ContextPath"}], "}"}], ",", 
     RowBox[{
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", "$ContextPath", "]"}]}], ";", "\n", 
      RowBox[{"ContextPath", "=", 
       RowBox[{"Permute", "[", 
        RowBox[{"$ContextPath", ",", 
         RowBox[{"Cycles", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "len"}], "}"}], "}"}], "]"}]}], "]"}]}]}]}], 
    "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Move", " ", "pkg", " ", "context", " ", "to", " ", "end", " ", "of", " ", 
    "path"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Together", " ", "the", " ", "AtomG", " ", "definitions", " ", "below", 
     " ", "enable", " ", "expressions", " ", "like", " ", 
     RowBox[{"AtomG", "[", 
      RowBox[{"u", ",", "v", ",", "w", ",", "x"}], "]"}]}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["e", "u"], 
     SubscriptBox["e", "v"], 
     SubscriptBox["e", "w"], 
     SubscriptBox["e", "x"]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AtomG", "[", "u_", "]"}], ":=", 
   SubscriptBox["e", "u"]}], "  \t\t\t\t\t "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AtomG", "[", 
    RowBox[{"u_", ",", "v__"}], "]"}], ":=", 
   RowBox[{
    SubscriptBox["e", "u"], 
    RowBox[{"AtomG", "[", "v", "]"}]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Ex", ":", " ", 
     RowBox[{"AtomG", "[", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}]}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["e", "1"], 
     SubscriptBox["e", "2"], 
     SubscriptBox["e", "3"], 
     SubscriptBox["e", "4"]}]}], "  ", "*)"}], "\n", "\n", "\t", 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "AtomG", " ", "Module"}], "*)"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Together", " ", "the", " ", "BladeG", " ", "definitions", " ", "below", 
     " ", "enable", " ", "expressions", " ", "like", " ", 
     RowBox[{"BladeG", "[", 
      RowBox[{"p", ",", "4"}], "]"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"nVector", "[", 
        RowBox[{"a", ",", "5"}], "]"}], "\[Wedge]"}], "..."}], "\[Wedge]", 
     RowBox[{"nVector", "[", 
      RowBox[{"d", ",", "5"}], "]"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"BladeG", "[", 
   RowBox[{"0", ",", "n_"}], "]"}], ":=", "1"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BladeG", "[", 
    RowBox[{"p_", ",", "0"}], "]"}], ":=", "1"}], "  \t\t\t\t\t "}], "\n", 
 RowBox[{
  RowBox[{"BladeG", "[", 
   RowBox[{"1", ",", "n_"}], "]"}], ":=", 
  RowBox[{"VectorG", "[", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], ",", "n"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BladeG", "[", 
    RowBox[{"p_", ",", "n_"}], "]"}], ":=", "\n", "\n", 
   RowBox[{"(*", "  ", 
    RowBox[{
     RowBox[{"INPUTS", ";", "\n", "\t\t", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{
        RowBox[{"grade", " ", "of", " ", "blade", "\n", "\t\t", "n"}], " ", 
        "=", " ", 
        RowBox[{"dimension", " ", "of", " ", "space", "\n", "\t", 
         RowBox[{"PROCESS", ":", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Program", " ", 
              RowBox[{
               RowBox[{"VectorG", "[", 
                RowBox[{"a", ",", "n"}], "]"}], " ", "\[Wedge]", " ", 
               RowBox[{"VectorG", "[", 
                RowBox[{"b", ",", "n"}], "]"}], " ", "\[Wedge]"}]}], " ", 
             "..."}], " ", "\[Wedge]", 
            RowBox[{"VectorG", "[", 
             RowBox[{"d", ",", "n"}], "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"skipping", " ", 
             RowBox[{"VectorG", "[", 
              RowBox[{"e", ",", "n"}], "]"}], " ", "since", " ", "\"\<e\>\"", 
             " ", "is", " ", "reserved"}], ")"}], "\n", "\t\t", "After", " ", 
           "25", " ", "lower", " ", "case", " ", "coefficients"}]}]}]}]}]}], 
     ",", " ", 
     RowBox[{
     "move", " ", "on", " ", "to", " ", "25", " ", "uppercase", " ", 
      "coeeficients", " ", "skipping", " ", "E", "\n", "\t\t", "Then", " ", 
      "move", " ", "on", " ", "to", " ", "lower", " ", "case", " ", "and", 
      " ", "then", " ", "upper", " ", "case", " ", "Greek"}], ",", " ", 
     RowBox[{
     "skipping", " ", "English", " ", "duplicates", "\n", "\t\t", "Finally"}],
      ",", " ", 
     RowBox[{
      RowBox[{"add", " ", "a", " ", "few", " ", "Hebrew", " ", 
       RowBox[{"letters", ".", " ", "This"}], " ", "allows", " ", "n", " ", 
       "up", " ", "to", " ", "74.", " ", "To", " ", "do", " ", "larger", " ", 
       "n", " ", "I", " ", "would", " ", "need", " ", "to", " ", "find", " ", 
       "additional", " ", 
       RowBox[{"letters", ".", "\n", "\t", "Output"}], "\n", "\t\t", 
       "Blade"}], " ", "=", " ", 
      RowBox[{"the", " ", "product", " ", "listed", " ", "above"}]}]}], 
    "\t\t", "\n", "*)"}], "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "m", ",", "lowercase", ",", "uppercase", ",", "lcgreek", ",", "ucgreek",
        ",", "list", ",", "pBlade"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "74"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Warning: BladeG[p,n] is limited to n<75.\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"Bold", ",", "Red"}], "}"}]}], "]"}], "]"}]}], "]"}], ";",
       "\n", "\t", 
      RowBox[{"m", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"n", ",", "74"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"lowercase", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"Alphabet", "[", "]"}], ",", 
         RowBox[{"Except", "[", "\"\<e\>\"", "]"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"uppercase", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}], ",", 
         RowBox[{"Except", "[", "\"\<E\>\"", "]"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"lcgreek", "=", 
       RowBox[{"Alphabet", "[", "\"\<Greek\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"ucgreek", "=", 
       RowBox[{"{", 
        RowBox[{
        "\[CapitalGamma]", ",", "\[CapitalDelta]", ",", "\[CapitalTheta]", 
         ",", "\[CapitalXi]", ",", "\[CapitalPhi]", ",", "\[CapitalChi]", ",",
          "\[CapitalPsi]", ",", "\[CapitalOmega]", ",", "\[Aleph]", ",", 
         "\[Bet]", ",", "\[Gimel]", ",", "\[Dalet]"}], "}"}]}], ";", "\n", 
      "\t", 
      RowBox[{"list", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
        "lowercase", ",", "uppercase", ",", "lcgreek", ",", "ucgreek"}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"pBlade", "=", 
       RowBox[{"WedgePrdtG", " ", "@@", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"VectorG", "[", 
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", " ", "m"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "p"}], "}"}]}], "]"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Ex", ":", " ", 
         RowBox[{"BladeG", "[", 
          RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}]}], " ", "=", " ", 
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["e", "4"]}]}], "  ", "*)"}], "\n", "\n", "\t", 
      "pBlade"}]}], "]"}]}], "\n", "\t", 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "BladeG", " ", "Module"}], "*)"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{"GradedClifG", "[", 
   RowBox[{"c_", ",", "0", ",", "n_"}], "]"}], ":=", 
  SubscriptBox["c", "0"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GradedClifG", "[", 
    RowBox[{"c_", ",", "p_", ",", "n_"}], "]"}], ":=", "   ", "\n", "\t", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Note", ":", " ", 
      RowBox[{
       RowBox[{
       "this", " ", "is", " ", "a", " ", "generic", " ", "homogeneous", " ", 
        "clif", " ", "of", " ", "grade", " ", "p", " ", "in", " ", "n"}], "-", 
       RowBox[{"Space", ".", " ", "\n", "\t\t", "Ex"}]}], ":", " ", 
      RowBox[{"GradedClifG", "[", 
       RowBox[{"a", ",", "2", ",", "4"}], "]"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["a", 
        RowBox[{"1", ",", "2"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "3"]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["a", 
        RowBox[{"1", ",", "4"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["a", 
        RowBox[{"2", ",", "3"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["a", 
        RowBox[{"2", ",", "4"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["a", 
        RowBox[{"3", ",", "4"}]]}]}]}], " ", "*)"}], "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"slice", ",", "tupleList", ",", "cList", ",", "eList"}], "}"}], 
     ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
        RowBox[{"dv_", "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"dv", ",", "c"}], "]"}]}]}], "]"}], ";", 
      RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Clear", " ", "all", " ", "c"}], "-", 
        RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", 
      "\t\t", "\n", "\t\t", 
      RowBox[{"slice", "=", "0"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[LessEqual]", "n"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"tupleList", "=", 
          RowBox[{"Subsets", "[", 
           RowBox[{
            RowBox[{"Range", "[", "n", "]"}], ",", 
            RowBox[{"{", "p", "}"}]}], "]"}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "  ", "*)"}], "\n", 
         "\t\t\t", 
         RowBox[{"cList", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"c", ",", "##"}], "]"}], "&"}], "@@@", 
           RowBox[{"Subsets", "[", 
            RowBox[{
             RowBox[{"Range", "[", "n", "]"}], ",", 
             RowBox[{"{", "p", "}"}]}], "]"}]}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["c", 
             RowBox[{"1", ",", "2"}]], ",", 
            SubscriptBox["c", 
             RowBox[{"1", ",", "3"}]], ",", 
            SubscriptBox["c", 
             RowBox[{"2", ",", "3"}]]}], "}"}], "  ", "*)"}], "\n", "\t\t\t", 
         
         RowBox[{"eList", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Product", "[", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"e", ",", "i"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"{", "##", "}"}]}], "}"}]}], "]"}], "&"}], "@@@", 
           RowBox[{"Subsets", "[", 
            RowBox[{
             RowBox[{"Range", "[", "n", "]"}], ",", 
             RowBox[{"{", "p", "}"}]}], "]"}]}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["e", "1"], 
             SubscriptBox["e", "2"]}], ",", " ", 
            RowBox[{
             SubscriptBox["e", "1"], 
             SubscriptBox["e", "3"]}], ",", " ", 
            RowBox[{
             SubscriptBox["e", "2"], 
             SubscriptBox["e", "3"]}]}], "}"}], "   ", "*)"}], "\n", "\t\t\t", 
         RowBox[{"slice", "=", 
          RowBox[{"cList", ".", "eList"}]}]}], "\n", "\t\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"], 
           SubscriptBox["c", 
            RowBox[{"1", ",", "2", " "}]]}], "+", " ", 
          RowBox[{
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "3"], 
           SubscriptBox["c", 
            RowBox[{"1", ",", "3"}]]}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["e", "2"], 
           SubscriptBox["e", "3"], 
           SubscriptBox["c", 
            RowBox[{"2", ",", "3"}]]}]}], "  ", "*)"}], "\n", "\t\t", ",", 
        "\n", "\t\t\t", 
        RowBox[{
        "Print", "[", "\"\<Error: GradedClifG requires p \[LessEqual] n.\>\"",
          "]"}]}], "\n", "\t\t", "]"}], ";", "\n", "\t\t", "slice"}]}], " ", 
    "\n", "\t", "]"}]}], "       ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "GradedClifG", " ", "Module"}], " ", "*)"}],
   "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"EvenClifG", "[", 
   RowBox[{"b_", ",", "0"}], "]"}], ":=", 
  SubscriptBox["c", "0"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvenClifG", "[", 
    RowBox[{"b_", ",", "1"}], "]"}], ":=", 
   SubscriptBox["c", "0"]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvenClifG", "[", 
    RowBox[{"b_", ",", "n_"}], "]"}], ":=", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Create", " ", "an", " ", "n"}], "-", 
      RowBox[{"dimensional", " ", "Clif", " ", "using", " ", "user"}], "-", 
      RowBox[{"provided", " ", "base", " ", "\"\<c\>\"", "   ", "\n", 
       RowBox[{"INPUTS", ":", "\n", "\t", "b"}]}]}], " ", "\[Dash]", " ", 
     RowBox[{
     "Coefficient", " ", "letter", " ", "to", " ", "use", " ", "in", " ", 
      "Clif", "\n", "\t", "n"}], " ", "\[Dash]", " ", 
     RowBox[{"Number", " ", "of", " ", "desired", " ", "dimension", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", ".", "e", "."}], ",", " ", 
        RowBox[{"the", " ", "maximum", " ", "grade"}]}], ")"}], " ", "of", 
      " ", "the", " ", "clif", "\n", "\n", 
      RowBox[{"PROCESS", ":", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "Cases", " ", "command", " ", "clears", " ", "out", " ", "any", " ",
            "possible", " ", "values", " ", "or", " ", "definition", " ", 
           "for", " ", "the", " ", "base", " ", "b", "\n", "\t", "eArray", 
           " ", "generates", " ", "a", " ", "list", " ", "of", " ", "all", 
           " ", "possible", " ", 
           SubscriptBox["e", "i"], 
           SubscriptBox["e", "j"]}], "..."}], " ", "products", " ", "of", " ",
          "grade"}], " ", "\[LessEqual]", " ", 
        RowBox[{"n", "\n", "\t\t", "Example"}]}], ":", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", 
          SubscriptBox["e", "1"], ",", " ", 
          SubscriptBox["e", "2"], ",", " ", 
          RowBox[{
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"]}]}], "}"}], "\n", "\t\t", "The", " ", 
        "subset", " ", "formula", " ", "fails", " ", "for", " ", "grades", 
        " ", "0", " ", "and", " ", "1", " ", "so", " ", "those", " ", "are", 
        " ", "handled", " ", "by", " ", "brute", " ", "force", "\n", "\t", 
        "bList", " ", "generates", " ", "a", " ", "matching", " ", "of", " ", 
        
        SubscriptBox["b", 
         RowBox[{"i", ",", "j", ",", "..."}]], 
        RowBox[{"coefficients", ".", " ", 
         RowBox[{"Example", ":", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["b", "0"], ",", " ", 
             SubscriptBox["b", "1"], ",", " ", 
             SubscriptBox["b", "2"], ",", " ", 
             SubscriptBox["b", 
              RowBox[{"1", ",", "2"}]]}], "}"}], "\n", "\t", "Since", " ", 
           "the", " ", "constant", " ", 
           SubscriptBox["b", "0"], " ", "does", " ", "not", " ", "change", 
           " ", "sign"}]}]}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"we", " ", "modify", " ", "it", " ", "to", " ", "be", " ", 
       SubscriptBox["b", 
        RowBox[{"0", ",", "0"}]], " ", "in", " ", "bLis1", "\n", "\t\t", 
       RowBox[{"Example", ":", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["b", 
            RowBox[{"0", ",", "0"}]], ",", " ", 
           SubscriptBox["b", "1"], ",", " ", 
           SubscriptBox["b", "2"], ",", " ", 
           SubscriptBox["b", 
            RowBox[{"1", ",", "2"}]]}], "}"}], "\n", "\t", "Then", " ", "we", 
         " ", "make", " ", "a", " ", "list", " ", "of", " ", "the", " ", 
         "lengths", " ", "of", " ", "terms", " ", 
         SubscriptBox["b", 
          RowBox[{"i", ",", "j", ",", "..."}]], " ", "in", " ", "bList", " ", 
         "1.", " ", "Example"}], ":", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", " ", "2", ",", " ", "2", ",", " ", "3"}], "}"}], 
         "\n", "\t", "We", " ", "replace", " ", "the", " ", "odd", " ", 
         "lengths", " ", 
         RowBox[{"(", 
          RowBox[{"like", " ", 
           SubscriptBox["b", 
            RowBox[{"1", ",", "2"}]]}], ")"}], " ", "by", " ", "1", " ", 
         "and", " ", "the", " ", "even", " ", "lengths", " ", 
         RowBox[{"(", 
          RowBox[{"like", " ", 
           SubscriptBox["b", "3"]}], ")"}], " ", "by", " ", "0", "\n", "\t\t",
          "We", " ", "name", " ", "this", " ", "list", " ", 
         RowBox[{"evenList", ".", " ", 
          RowBox[{"Example", ":", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], 
             "}"}], "\n", "\t", "The", " ", "desired", " ", "clif", " ", "is",
             " ", "the", " ", 
            StyleBox["dot",
             FontSlant->"Italic",
             FontVariations->{"Underline"->True}], 
            StyleBox[" ",
             FontSlant->"Italic",
             FontVariations->{"Underline"->True}], 
            StyleBox["product",
             FontSlant->"Italic",
             FontVariations->{"Underline"->True}], " ", "of", " ", "evenList",
             " ", "with", " ", "the", " ", "result", " ", "of", " ", "the", 
            " ", 
            StyleBox["product",
             FontSlant->"Italic",
             FontVariations->{"Underline"->True}], 
            StyleBox[" ",
             FontVariations->{"Underline"->True}], "of", " ", "\n", "\t\t", 
            "bList", " ", "and", " ", 
            RowBox[{"eArray", ".", " ", "\n", "\t\t", "Example"}]}], ":", " ",
            "\n", "\t\t\t  ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], 
             "}"}], " ", ".", " ", 
            RowBox[{"[", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["b", "0"], ",", " ", 
                SubscriptBox["b", "1"], ",", " ", 
                SubscriptBox["b", "2"], ",", " ", 
                SubscriptBox["b", 
                 RowBox[{"1", ",", "2"}]]}], "}"}], " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", " ", 
                SubscriptBox["e", "1"], ",", " ", 
                SubscriptBox["e", "2"], ",", " ", 
                RowBox[{
                 SubscriptBox["e", "1"], 
                 SubscriptBox["e", "2"]}]}], "}"}]}], " ", "]"}]}]}]}]}]}]}], 
      " ", "\n", "\t\t\t", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], "}"}], 
        " ", ".", " ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["b", "0"], ",", " ", 
          RowBox[{
           SubscriptBox["b", "1"], 
           SubscriptBox["e", "1"]}], ",", " ", 
          RowBox[{
           SubscriptBox["b", "2"], 
           SubscriptBox["e", "2"]}], ",", " ", 
          RowBox[{
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"], 
           SubscriptBox["b", 
            RowBox[{"1", ",", "2"}]]}]}], "}"}]}], "\n", "\t\t\t", "=", " ", 
       RowBox[{
        SubscriptBox["b", "0"], " ", "+", " ", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["b", 
          RowBox[{"1", ",", "2"}]], "\n", "\n", 
         RowBox[{"OUTPUT", ":", "\n", "\t", 
          RowBox[{
           RowBox[{"An", " ", "array", " ", "of", " ", "even"}], "-", 
           RowBox[{"grade", " ", "members"}]}]}]}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"like", " ", "\n", "\t\t", 
       SubscriptBox["b", "0"]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["b", 
        RowBox[{"1", ",", "2"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["b", 
        RowBox[{"1", ",", "3", " "}]]}], "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["b", 
        RowBox[{"1", ",", "4"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["b", 
        RowBox[{"2", ",", "3"}]]}], "  ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["b", 
        RowBox[{"2", ",", "4", " "}]]}], "+", " ", 
      RowBox[{
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["b", 
        RowBox[{"3", ",", "4"}]]}], " ", "+", "  ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["b", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4"}]]}]}]}], "  ", "*)"}], 
   "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "bList", ",", "eArray", ",", "bList1", ",", "evenList", ",", 
       "evenClif"}], "}"}], ",", "\n", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
        RowBox[{"dv_", "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"dv", ",", "b"}], "]"}]}]}], "]"}], ";", " ", "\n", "\t\t", 
      
      RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Clear", " ", "all", " ", "b"}], "-", 
        RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", "\t", 
      "\n", "\t\t", 
      RowBox[{"eArray", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Product]", "i", "n"], 
          SubscriptBox["e", "i"]}], ",", " ", "n"}], "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"List", " ", "of", " ", "all", " ", 
          SubscriptBox["e", "i"], 
          SubscriptBox["e", "j"]}], "..."}], " ", "products"}], " ", "*)"}], 
      "\n", "\t\t", 
      RowBox[{"bList", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["b", "0"], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"b", ",", "##"}], "]"}], "&"}], "@@@", 
           RowBox[{"Rest", "[", 
            RowBox[{"Subsets", "[", 
             RowBox[{"Range", "[", "n", "]"}], "]"}], "]"}]}]}], "]"}], 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"bList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
         SubscriptBox["b", "0"]}], ",", 
        RowBox[{"bList1", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"bList", ",", 
           RowBox[{"1", "\[Rule]", 
            SubscriptBox["b", 
             RowBox[{"0", ",", "0"}]]}]}], "]"}]}], ",", 
        RowBox[{"bList1", "=", "bList"}]}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"evenList", "=", 
       RowBox[{
        RowBox[{"Length", "/@", "bList1"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"u_", "/;", 
            RowBox[{"OddQ", "[", "u", "]"}]}], "\[Rule]", "1"}], ",", 
          RowBox[{
           RowBox[{"u_", "/;", 
            RowBox[{"EvenQ", "[", "u", "]"}]}], "\[Rule]", "0"}]}], "}"}]}]}],
       ";", "\t", "\n", "\t\t", 
      RowBox[{"evenClif", "=", 
       RowBox[{"evenList", ".", 
        RowBox[{"(", 
         RowBox[{"bList", " ", "eArray"}], ")"}]}]}], ";", "\n", "\t\t", 
      "evenClif"}]}], "\n", "\t", "]"}]}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "EvenClifG", " ", "Module"}], "  ", "*)"}], 
  "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClifG", "[", 
   RowBox[{"c_", ",", "0"}], "]"}], ":=", 
  SubscriptBox["c", "0"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifG", "[", 
    RowBox[{"c_", ",", "1"}], "]"}], ":=", 
   RowBox[{
    SubscriptBox["c", "0"], "+", 
    RowBox[{
     SubscriptBox["c", "1"], 
     SubscriptBox["e", "1"]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifG", "[", 
    RowBox[{"c_", ",", "n_"}], "]"}], ":=", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Create", " ", "an", " ", "n"}], "-", 
      RowBox[{"dimensional", " ", "Clif", " ", "using", " ", "user"}], "-", 
      RowBox[{"provided", " ", "base", " ", "\"\<c\>\"", "   ", "\n", 
       RowBox[{"INPUTS", ":", "\n", "\t", "c"}]}]}], " ", "\[Dash]", " ", 
     RowBox[{
     "Coefficient", " ", "letter", " ", "to", " ", "use", " ", "in", " ", 
      "Clif"}], ",", " ", 
     RowBox[{
     "often", " ", "a", " ", "for", " ", "1", "st", " ", "array", " ", "and", 
      " ", "b", " ", "for", " ", "a", " ", "second", " ", "one", "\n", "\t", 
      "n"}], " ", "\[Dash]", " ", 
     RowBox[{"Number", " ", "of", " ", "desired", " ", "dimension", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", ".", "e", "."}], ",", " ", 
        RowBox[{"the", " ", "maximum", " ", "grade"}]}], ")"}], " ", "of", 
      " ", "the", " ", "clif", "\n", "\n", 
      RowBox[{"PROCESS", ":", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "Cases", " ", "command", " ", "clears", " ", "out", " ", "any", " ",
            "possible", " ", "values", " ", "or", " ", "definition", " ", 
           "for", " ", "the", " ", "base", " ", "c", "\n", "\t", "eArray", 
           " ", "generates", " ", "a", " ", "list", " ", "of", " ", "all", 
           " ", "possible", " ", 
           SubscriptBox["e", "i"], 
           SubscriptBox["e", "j"]}], "..."}], " ", "products", " ", "of", " ",
          "grade"}], " ", "\[LessEqual]", " ", 
        RowBox[{
        "n", "\n", "\t\t", "The", " ", "subset", " ", "formula", " ", "fails",
          " ", "for", " ", "grades", " ", "0", " ", "and", " ", "1", " ", 
         "so", " ", "those", " ", "are", " ", "handled", " ", "by", " ", 
         "brute", " ", "force", "\n", "\t", "cList", " ", "generates", " ", 
         "a", " ", "matching", " ", "of", " ", 
         SubscriptBox["c", 
          RowBox[{"i", ",", "j", ",", "..."}]], "coefficients", "\n", "\t", 
         "The", " ", "desired", " ", "clif", " ", "is", " ", "the", " ", 
         "dot", " ", "product", " ", "of", " ", "the", " ", "2", " ", "lists",
          "\n", "\n", "OUTPUT"}]}], ":", "\n", "\t", 
       RowBox[{
        RowBox[{"An", " ", "array", " ", "like", " ", 
         SubscriptBox["b", "0"]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["b", "1"], 
         SubscriptBox["e", "1"]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["b", "2"], 
         SubscriptBox["e", 
          RowBox[{"2", " "}]]}], "+", " ", 
        RowBox[{
         SubscriptBox["b", "3"], 
         SubscriptBox["e", 
          RowBox[{"3", " "}]]}], "+", " ", 
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["b", 
          RowBox[{"1", ",", "2"}]]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["b", 
          RowBox[{"1", ",", "3", " "}]]}], "+", " ", 
        RowBox[{
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["b", 
          RowBox[{"2", ",", "3"}]]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["b", 
          RowBox[{"1", ",", "2", ",", "3"}]]}]}]}]}]}], "   ", "*)"}], "\n", 
   "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cList", ",", "eArray"}], "}"}], ",", "\n", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
        RowBox[{"dv_", "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"dv", ",", "c"}], "]"}]}]}], "]"}], ";", "\n", "\t\t    ", 
      RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Clear", " ", "all", " ", "c"}], "-", 
        RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", "\t", 
      "\n", "\t\t", 
      RowBox[{"eArray", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Product]", "i", "n"], 
          SubscriptBox["e", "i"]}], ",", " ", "n"}], "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"List", " ", "of", " ", "all", " ", 
          SubscriptBox["e", "i"], 
          SubscriptBox["e", "j"]}], "..."}], " ", "products"}], " ", "*)"}], 
      "\n", "\t\t", 
      RowBox[{"cList", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["c", "0"], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"c", ",", "##"}], "]"}], "&"}], "@@@", 
           RowBox[{"Rest", "[", 
            RowBox[{"Subsets", "[", 
             RowBox[{"Range", "[", "n", "]"}], "]"}], "]"}]}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", "\t\t", 
      RowBox[{"cList", ".", "eArray"}]}]}], "\n", "\t", "]"}]}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "ClifG", " ", "Module"}], "  ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifFormatG", "[", "n_", "]"}], ":=", "  ", 
   RowBox[{"(*", "  ", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"INPUT", ":", "\n", "\t", "n"}], " ", "=", " ", 
      RowBox[{"largest", " ", "subscript", " ", "on", " ", "any", " ", 
       SubscriptBox["e", "i"], " ", "term", " ", "in", " ", "clif", 
       RowBox[{"(", "s", ")"}], " ", "under", " ", "consideration", " ", 
       "for", " ", "simplifying", " ", "printout", "\n", "\n", 
       RowBox[{"PROCESS", ":", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"First", " ", "form", " ", "the", " ", "product", " ", 
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"]}], "..."}], 
         RowBox[{
          SubscriptBox["e", "n"], ".", " ", "For"}], " ", "example"}]}]}]}], 
     ",", " ", 
     RowBox[{
      RowBox[{"for", " ", "n"}], " ", "=", " ", 
      RowBox[{"3", " ", "we", " ", "form", " ", 
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], "\n", "\t", "Then", " ", "make", " ", "a", " ",
        "list", " ", "of", " ", "all", " ", "subsets", " ", "of", " ", "the", 
       " ", 
       RowBox[{"product", ".", " ", "For"}], " ", "example"}]}], ",", " ", 
     RowBox[{
      RowBox[{"for", " ", "n"}], " ", "=", " ", "3"}], ",", " ", 
     RowBox[{
      RowBox[{"the", " ", "list", " ", "is", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["e", "1"], ",", " ", 
         SubscriptBox["e", "2"], ",", " ", 
         SubscriptBox["e", "3"], ",", " ", 
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"]}], ",", " ", 
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "3"]}], ",", " ", 
         RowBox[{
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"]}], ",", " ", 
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"]}]}], "}"}]}], " ", "=", " ", 
      RowBox[{"Basis", " ", "for", " ", 
       RowBox[{"GA", "[", "3", "]"}], "\n", "\t", "Finally"}]}], ",", " ", 
     RowBox[{
     "Mathematica", " ", "works", " ", "better", " ", "with", " ", "this", 
      " ", "list", " ", "in", " ", "reverse", " ", "order", "\n", "\t", 
      "This", " ", "function", " ", "is", " ", "used", " ", "by", " ", 
      "function", " ", "CollectG", " ", "and", " ", "can", " ", "also", " ", 
      "be", " ", "used", " ", "directly", " ", "by", " ", "the", " ", "user", 
      "\n", "\n", 
      RowBox[{"OUTPUT", ":", "\n", "\t", "collectTerms"}]}], " ", "\[Dash]", 
     " ", 
     RowBox[{"the", " ", "list", " ", "above"}], ",", " ", "reversed"}], 
    "   ", "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "collectTerms", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "1"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"collectTerms", "=", 
          RowBox[{"Subsets", "[", 
           RowBox[{
            RowBox[{
             SubsuperscriptBox["\[Product]", "i", "n"], 
             SubscriptBox["e", "i"]}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "n"}], "}"}]}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Terms", " ", "we", " ", "wish", " ", "to", " ", "collect", " ", 
           "by"}], " ", "*)"}], "\n", "\t\t\t", 
         RowBox[{"collectTerms", "=", 
          RowBox[{"Reverse", "[", "collectTerms", "]"}]}]}], "\n", "\t\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Reverse", " ", "order", " ", "to", " ", "force", " ", "Mathematica",
           " ", "to", " ", "collect", " ", "terms", " ", "correctly"}], " ", 
         "*)"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
        RowBox[{"collectTerms", "=", 
         RowBox[{"{", 
          SubscriptBox["e", "1"], "}"}]}]}], "\n", "\t\t", "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug5", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Arrange List = \>\"", ",", "collectTerms"}], "]"}]}], 
       "]"}], ";", "\n", "\t\t", "collectTerms"}]}], "\n", "\t", "]"}]}], 
  "       ", 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "ClifFormatG", " ", "Module"}], "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ComplexG", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "complexNum", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"]}]}], ";", 
      RowBox[{"complexNum", "=", 
       RowBox[{"a", "+", 
        RowBox[{"b", " ", "i"}]}]}]}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PseudoScalarG", "[", "n_", "]"}], ":=", 
   RowBox[{"Product", "[", 
    RowBox[{
     SubscriptBox["e", "i"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["e", "1"], 
      SubscriptBox["e", "2"]}], "..."}], 
    SubscriptBox["e", "n"]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuaternionG", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], ":=", "\n", "\t", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "quaternionNum", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{
        SubscriptBox["e", "2"], 
        SubscriptBox["e", "3"]}]}], ";", 
      RowBox[{"j", "=", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["e", "1"]}], 
        SubscriptBox["e", "3"]}]}], ";", 
      RowBox[{"k", "=", 
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"]}]}], ";", 
      RowBox[{"quaternionNum", "=", 
       RowBox[{"a", "+", 
        RowBox[{"b", " ", "i"}], "+", 
        RowBox[{"c", " ", "j"}], "+", 
        RowBox[{"d", " ", "k"}]}]}], ";", "\n", "\t\t", "quaternionNum"}]}], 
    "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RotorG", "[", 
    RowBox[{"i_", ",", "j_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "/", "2"}], "]"}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "/", "2"}], "]"}], 
     SubscriptBox["e", "i"], 
     SubscriptBox["e", "j"]}]}]}], "  ", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Create", " ", "rotor", " ", "from", " ", "rotation", " ", "angle", " ", 
    "plane", " ", "of", " ", "rotation", " ", 
    RowBox[{"(", 
     RowBox[{
     "denoted", " ", "by", " ", "the", " ", "pair", " ", "of", " ", "axis", 
      " ", "numbers"}], ")"}]}], "  ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BiVectorG", "[", "n_", "]"}], ":=", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Bivector", " ", "is", " ", "visualized", " ", "as", " ", "a", " ", "2", 
     "D", " ", "region", " ", "spanned", " ", "by", " ", "2", " ", "vectors", 
     " ", "in", " ", "a", " ", "space", " ", "of", " ", "dimension", " ", "2",
      " ", "or", " ", "higher"}], "   ", "*)"}], "\n", "\n", "\t\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "geoprdt", "}"}], ",", "\n", "\t\t", "\n", "\t\t", 
     RowBox[{
      RowBox[{"geoprdt", "=", 
       RowBox[{"WedgePrdtG", "[", 
        RowBox[{
         RowBox[{"VectorG", "[", 
          RowBox[{"Global`a", ",", "n"}], "]"}], ",", 
         RowBox[{"VectorG", "[", 
          RowBox[{"Global`b", ",", "n"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
      "\t\t", "geoprdt"}]}], "]"}]}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "BivectorG", " ", "Module"}], " ", "*)"}], 
  "\t", "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BiVectorG", "[", 
    RowBox[{"c_", ",", "n_"}], "]"}], ":=", "    ", "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pairList", ",", "cList", ",", "eList", ",", "bivectorC"}], 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
        RowBox[{"dv_", "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"dv", ",", "c"}], "]"}]}]}], "]"}], ";", 
      RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Clears", " ", "all", " ", "c"}], "-", 
        RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", 
      "\t\t", "\n", "\t\t", 
      RowBox[{"pairList", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"cList", "=", 
       RowBox[{"pairList", "/.", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u_", ",", "v_"}], "}"}], "\[Rule]", 
         SubscriptBox["c", 
          RowBox[{"u", ",", "v"}]]}]}]}], ";", "\n", "\t\t", 
      RowBox[{"eList", "=", 
       RowBox[{"pairList", "/.", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u_", ",", "v_"}], "}"}], "\[Rule]", 
         RowBox[{
          SubscriptBox["e", "u"], 
          SubscriptBox["e", "v"]}]}]}]}], ";", "\n", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "1"}], ",", "\n", "\t\t\t", 
        RowBox[{"bivectorC", "=", 
         RowBox[{"cList", ".", "eList"}]}], ",", "\n", "\t\t\t", "\n", 
        "\t\t\t", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Error: 2nd entry of BiVectorG must be \[GreaterEqual] 2.\>\"", 
          "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"bivectorC", "=", "0"}]}]}], "\n", "\t\t", "]"}], ";", "\n", 
      "\n", "\t\t", "bivectorC"}]}], "     ", 
    RowBox[{"(*", 
     RowBox[{"End", " ", "of", " ", "BivectorG", " ", "Module"}], "*)"}], 
    "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"VectorG", "[", 
   RowBox[{"c_", ",", "n_"}], "]"}], ":=", "   ", 
  RowBox[{"(*", "  ", 
   RowBox[{"Note", ":", " ", 
    RowBox[{
     RowBox[{
     "Generates", " ", "a", " ", "standard", " ", "vector", " ", "in", " ", 
      "n"}], "-", 
     RowBox[{"dimensional", " ", "space"}]}]}], "  ", "*)"}], "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "vectorC", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
       RowBox[{"dv_", "/;", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"dv", ",", "c"}], "]"}]}]}], "]"}], ";", 
     RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Clear", " ", "all", " ", "c"}], "-", 
       RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", "\t\t",
      "\n", "\t\t", 
     RowBox[{"vectorC", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["c", "i"], " ", 
         SubscriptBox["e", "i"]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}]}]}], "\n", "\t", "]"}], 
  "     ", 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "VectorG", " ", "Module"}], 
   "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691073072029634*^9, 3.691073593702551*^9, 
   3.691073646277369*^9, 3.691073715183025*^9, 3.691073841869029*^9, 
   3.691073879917136*^9, {3.691083790822109*^9, 3.691083807709655*^9}, 
   3.691102705583344*^9, 3.691162433031191*^9, 3.691170784665902*^9, {
   3.691346561571847*^9, 3.691346570068967*^9}, {3.692447373223377*^9, 
   3.692447532918645*^9}, {3.692469057395756*^9, 3.692469107232608*^9}, 
   3.692469147166288*^9, {3.692469349943776*^9, 3.6924693632114563`*^9}, {
   3.692469760038862*^9, 3.692469762206094*^9}, {3.6924698004424343`*^9, 
   3.692469821952053*^9}, {3.6924698943308783`*^9, 3.692469905801302*^9}, {
   3.692469955916291*^9, 3.692470000503005*^9}, {3.69247023043757*^9, 
   3.692470235895976*^9}, 3.6924702957546053`*^9, {3.692470325763568*^9, 
   3.692470327864963*^9}, {3.6924703646562357`*^9, 3.692470365999009*^9}, {
   3.692477730817863*^9, 3.6924777369195423`*^9}, {3.6924806243244343`*^9, 
   3.692480627296599*^9}, {3.692480715831465*^9, 3.692480746817174*^9}, {
   3.6924807785484743`*^9, 3.6924807795406113`*^9}, {3.692483482874556*^9, 
   3.692483510142209*^9}, {3.692483576261361*^9, 3.692483577773611*^9}, {
   3.692483757488112*^9, 3.6924837586716547`*^9}, {3.6924838557341843`*^9, 
   3.6924838802727127`*^9}, {3.6924842352926903`*^9, 3.692484242631442*^9}, {
   3.6924842837660093`*^9, 3.692484307298365*^9}, {3.692484751172928*^9, 
   3.692484751699987*^9}, {3.692484876432817*^9, 3.692484906650508*^9}, {
   3.6924851127171087`*^9, 3.692485136152149*^9}, {3.692485187634049*^9, 
   3.6924851980868073`*^9}, {3.6924863997635202`*^9, 3.692486402915242*^9}, 
   3.6924875308975143`*^9, {3.692487942626789*^9, 3.692487957464012*^9}, {
   3.692488104024858*^9, 3.6924881095812073`*^9}, {3.69248938242953*^9, 
   3.692489511660285*^9}, {3.692489773534418*^9, 3.692489798312385*^9}, {
   3.692490135012905*^9, 3.692490216669692*^9}, 3.692490297360961*^9, 
   3.692490394216696*^9, {3.692490496683786*^9, 3.692490505331368*^9}, {
   3.6925520012295637`*^9, 3.6925520019241133`*^9}, {3.692552037863998*^9, 
   3.692552065234827*^9}, {3.6925529539656267`*^9, 3.692552968456435*^9}, {
   3.6926607006192703`*^9, 3.6926607328520737`*^9}, {3.6926643967708263`*^9, 
   3.692664435716918*^9}, {3.6926644747913713`*^9, 3.692664511024021*^9}, 
   3.693416689417634*^9, {3.6934429347752457`*^9, 3.6934429442660637`*^9}, {
   3.695772632724825*^9, 3.695772660111655*^9}, {3.695772729892161*^9, 
   3.6957727330989122`*^9}, {3.695772773560491*^9, 3.695772785192503*^9}, {
   3.6957728260396976`*^9, 3.695772835683711*^9}, {3.695773058721252*^9, 
   3.695773062508369*^9}, 3.695773118976162*^9, 3.696874243476945*^9, {
   3.696874286147122*^9, 3.696874298940352*^9}, {3.696874404018293*^9, 
   3.696874537764249*^9}, {3.696874602351841*^9, 3.6968746041616373`*^9}, {
   3.696874659991012*^9, 3.696874663226799*^9}, {3.6968746988284903`*^9, 
   3.6968747444586906`*^9}, {3.696881257346979*^9, 3.6968813481916103`*^9}, {
   3.696881412614933*^9, 3.696881464451166*^9}, {3.69688156411371*^9, 
   3.696881636605691*^9}, {3.6968816681763277`*^9, 3.696881762195716*^9}, {
   3.6968818170531607`*^9, 3.696881995945527*^9}, {3.696882120055017*^9, 
   3.696882478726488*^9}, {3.696882521265705*^9, 3.696882717279447*^9}, {
   3.69688277565548*^9, 3.696882804903944*^9}, {3.6968828811487083`*^9, 
   3.696883254430832*^9}, {3.6968833543095827`*^9, 3.696883384972622*^9}, {
   3.696883422143056*^9, 3.696883481025609*^9}, {3.696883526916669*^9, 
   3.696883574035481*^9}, {3.6968846120048437`*^9, 3.69688461686412*^9}, {
   3.69688467446104*^9, 3.696884685177855*^9}, 3.696885797102686*^9, {
   3.69688892872575*^9, 3.696888954729598*^9}, {3.6968890691896973`*^9, 
   3.696889117295525*^9}, {3.69688953370457*^9, 3.6968895577528276`*^9}, {
   3.6968953710487003`*^9, 3.696895389988497*^9}, {3.69689544626528*^9, 
   3.6968954649317913`*^9}, {3.696974951984475*^9, 3.696974954727544*^9}, 
   3.77444761612952*^9, 3.775581664064241*^9, {3.77558206598915*^9, 
   3.775582098905489*^9}, {3.7755822595311813`*^9, 3.7755822846705847`*^9}, {
   3.7755824866976023`*^9, 3.775582507627421*^9}, {3.77558283781618*^9, 
   3.775582843328519*^9}, {3.775582906337689*^9, 3.7755829110678797`*^9}, {
   3.775582985092743*^9, 3.775583154049403*^9}, {3.775583233175458*^9, 
   3.775583264779544*^9}, {3.775583299562887*^9, 3.77558332157612*^9}, {
   3.77558335881531*^9, 3.7755834111482058`*^9}, {3.7755834775260344`*^9, 
   3.775583494929969*^9}, {3.775583590653554*^9, 3.775583647507394*^9}, {
   3.7755839612059383`*^9, 3.7755841134724283`*^9}, 3.7755847414274473`*^9, {
   3.775584791000386*^9, 3.775584849374729*^9}, {3.775587348294716*^9, 
   3.775587454840221*^9}, {3.7755888760743723`*^9, 3.7755891657717667`*^9}, {
   3.775589216180119*^9, 3.775589467244999*^9}, {3.77558952227777*^9, 
   3.7755898632051897`*^9}, {3.775590262238832*^9, 3.77559034070681*^9}, {
   3.7755903719749413`*^9, 3.7755904926353903`*^9}, {3.7755905622820272`*^9, 
   3.7755905978528423`*^9}, {3.7755906412968597`*^9, 3.775590713715106*^9}, {
   3.7755959885552063`*^9, 3.7755960350642548`*^9}, {3.775596071365271*^9, 
   3.775596102809257*^9}, {3.775596132981571*^9, 3.775596152514195*^9}, {
   3.775599213262384*^9, 3.775599228195516*^9}, {3.775599307813313*^9, 
   3.7755993302410793`*^9}, {3.775599764671459*^9, 3.775599766217154*^9}, {
   3.775603585720708*^9, 3.775603587327155*^9}, {3.775603954499049*^9, 
   3.7756039549422693`*^9}, 3.775641818371272*^9, {3.775642185147522*^9, 
   3.775642188128715*^9}, {3.775644588700006*^9, 3.775644602016529*^9}, {
   3.775644731793159*^9, 3.775644772459985*^9}, {3.775644824232993*^9, 
   3.7756448266120462`*^9}, {3.7756532044319487`*^9, 3.775653260035116*^9}, {
   3.775653408606385*^9, 3.77565346321084*^9}, {3.775653495489862*^9, 
   3.7756536403891478`*^9}, {3.775657264894565*^9, 3.775657309131571*^9}, {
   3.775922032511407*^9, 3.775922035347479*^9}, {3.776002504881151*^9, 
   3.776002522576523*^9}, {3.7760227456248417`*^9, 3.776022769836893*^9}, 
   3.776022819188079*^9, {3.776110448681479*^9, 3.776110521786894*^9}, {
   3.777660964290831*^9, 3.777660986261176*^9}, {3.777661296945305*^9, 
   3.777661329929747*^9}, {3.777661369987954*^9, 3.777661371539607*^9}, {
   3.778022493843546*^9, 3.77802249780092*^9}, {3.7780225350994*^9, 
   3.778022540656026*^9}, {3.778322332911553*^9, 3.778322362816266*^9}, {
   3.7783226429483624`*^9, 3.778322649305345*^9}, {3.778322693681995*^9, 
   3.7783227366407022`*^9}, {3.778323772093807*^9, 3.7783238899093037`*^9}, {
   3.778323943413088*^9, 3.7783239498046007`*^9}, {3.778324238299407*^9, 
   3.778324264719015*^9}, 3.7790340923184223`*^9, {3.779034182154965*^9, 
   3.7790342041646442`*^9}, {3.77903825523356*^9, 3.779038285042321*^9}, 
   3.779038329524453*^9, 3.7790383888212767`*^9, 3.779045516538525*^9, 
   3.7790455468710814`*^9, {3.7790492384227257`*^9, 3.7790492578039713`*^9}},
 CellLabel->
  "In[1442]:=",ExpressionUUID->"cc35f83c-036d-4558-9ef4-8571356e9f49"]
}, Open  ]],

Cell[CellGroupData[{

Cell["5 Multivector Support Functions", "Chapter",
 CellChangeTimes->{{3.691073885336754*^9, 3.691073896408777*^9}, {
   3.7067284142787237`*^9, 3.706728414281673*^9}, 
   3.706813002392456*^9},ExpressionUUID->"9c63b62e-9730-433c-8884-\
b0391cc574d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CollectG", "[", "clifInput_", "]"}], ":=", "  ", 
   RowBox[{"(*", "  ", "\n", "\n", 
    RowBox[{
     RowBox[{"INPUTS", ":", "\n", "\t", 
      RowBox[{
      "clifInput", " ", "is", " ", "the", " ", "clif", " ", "to", " ", "be", 
       " ", "simplified", "\n", "\t", "n"}]}], " ", "\[Dash]", " ", 
     RowBox[{"Optional", " ", 
      RowBox[{"input", ".", " ", "Max"}], " ", "value", " ", "of", " ", "any",
       " ", 
      SubscriptBox["e", "i"], " ", "subscript", " ", "for", " ", "purposes", 
      " ", "of", " ", "collecting", " ", "terms", " ", "in", " ", "printout", 
      "\n", "\n", 
      RowBox[{"PROCESS", ":", "\n", "\t", 
       RowBox[{
        RowBox[{
        "Call", " ", "function", " ", "MaxDimG", " ", "to", " ", "find", " ", 
         "the", " ", "size", " ", "of", " ", "the", " ", "largest", " ", 
         "e"}], "-", 
        RowBox[{
        "subscript", " ", "in", " ", "the", " ", "clif", "\n", "\t", "Modify",
          " ", "multivector", " ", "clifInput", " ", "according", " ", "to", 
         " ", 
         RowBox[{"user", "'"}], "s", " ", "initialization", " ", "rules", 
         "\n", "\t", "Use", " ", 
         RowBox[{"Mathematica", "'"}], "s", " ", "Collect", " ", "to", " ", 
         "collect", " ", "the", " ", "terms", " ", "by", " ", 
         SubscriptBox["e", "1"]}]}]}]}], ",", " ", "...", ",", " ", 
     SubscriptBox["e", "n"], ",", " ", 
     RowBox[{
      SubscriptBox["e", "1"], 
      SubscriptBox["e", "2"]}], ",", " ", "\n", "\t\t", 
     RowBox[{
      SubscriptBox["e", "1"], 
      SubscriptBox["e", "3"]}], ",", " ", "...", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"]}], "..."}], 
      RowBox[{
       SubscriptBox["e", "n"], ".", " ", "\n", "\t", 
       RowBox[{"Mathematica", "'"}]}], "s", " ", "Collect", " ", "function", 
      " ", "works", " ", "better", " ", "when", " ", "we", " ", "reverse", 
      " ", "the", " ", "atom", " ", "list", "\n", "\t", "However"}], ",", " ", 
     RowBox[{"there", " ", "is", " ", "no", " ", "controlling", " ", 
      RowBox[{"Mathematica", "'"}], "s", " ", "Collect", " ", 
      RowBox[{"Function", ":", "\n", "\t   ", 
       RowBox[{
       "Sometimes", " ", "it", " ", "collects", " ", "the", " ", "terms", " ",
         "in", " ", "the", " ", "order", " ", "of", " ", "atoms"}]}]}], ",", 
     " ", 
     RowBox[{"sometimes", " ", "in", " ", "reverse", " ", 
      RowBox[{
       RowBox[{"order", "!!"}], "!"}], "\n", "\t   ", "At", " ", "least", " ",
       "the", " ", "terms", " ", "are", " ", "organized"}], ",", " ", 
     RowBox[{
      RowBox[{
      "whether", " ", "forward", " ", "or", " ", "backwards", "\n", "\t", 
       "This", " ", "function", " ", "is", " ", "used", " ", "by", " ", 
       "other", " ", "functions", " ", "and", " ", "can", " ", "also", " ", 
       "be", " ", "called", " ", "directly", " ", "by", " ", "the", " ", 
       "user", "\n", "\n", 
       RowBox[{"OUTPUT", ":", "\n", "\t", "clifOutput"}]}], " ", "=", " ", 
      RowBox[{
      "clif", " ", "with", " ", "all", " ", "multiplications", " ", "carried",
        " ", "out", " ", "and", " ", "then", " ", "arranged", " ", "by", " ", 
       "product", " ", "of", " ", 
       SubscriptBox["e", "i"], " ", "terms", "\n", "\t", "This", " ", "is", 
       " ", "same", " ", "as", " ", 
       RowBox[{"Mathematica", "'"}], "s", " ", "Collect", " ", "function", 
       " ", "except", " ", "for", " ", "implementation", " ", "of", " ", 
       RowBox[{"user", "'"}], "s", " ", "\n", "\t", "initialization", " ", 
       "rules", " ", "to", " ", "handle", " ", 
       SuperscriptBox[
        SubscriptBox["e", "i"], "2"], " ", "terms"}]}]}], "  ", "*)"}], "\n", 
   "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"atomList", ",", "clifOutput"}], "}"}], ",", "\n", "\t", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"atomList", "=", 
       RowBox[{"Reverse", "[", 
        RowBox[{"EijListToAtomListG", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{"AtomListToEijListG", "[", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"DeleteDuplicates", "[", "\n", "\t\t\t", 
              RowBox[{"AtomListG", "[", "clifInput", "]"}], "]"}], ",", 
             RowBox[{"Except", "[", "1", "]"}]}], "]"}], "]"}], "]"}], "]"}], 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"clifOutput", "=", 
       RowBox[{"Collect", "[", 
        RowBox[{
         RowBox[{"ExpandG", "[", "clifInput", "]"}], ",", "atomList"}], 
        "]"}]}], ";", "\n", "\t\t", "clifOutput"}]}], "\n", "]"}]}], 
  "       ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "CollectG", " ", "Module"}], "\t", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstantG", "[", "clif_", "]"}], ":=", " ", 
   RowBox[{"(*", " ", "\n", "\t", 
    RowBox[{"INPUT", ":", " ", 
     RowBox[{"A", " ", "multivector", "\n", "\t", "PROCESS"}], ":", " ", 
     RowBox[{
     "Expand", " ", "so", " ", "that", " ", "each", " ", "term", " ", "may", 
      " ", "be", " ", "operated", " ", "on", "\n", "\t\t\t ", "Find", " ", 
      "the", " ", "constant", " ", "by", " ", "setting", " ", "any", " ", 
      SubscriptBox["e", "i"], "factors", " ", "to", " ", "zero", "\n", "\t", 
      RowBox[{"OUTPUT", ":", " ", 
       RowBox[{"The", " ", "constant", " ", "term", 
        RowBox[{"(", "s", ")"}], "of", " ", "clif"}]}]}]}], " ", "*)"}], "\n",
    "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"clif1", ",", "const"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"clif1", "=", 
       RowBox[{"Expand", "[", "clif", "]"}]}], ";", " ", "\n", "\t\t", 
      RowBox[{"const", "=", 
       RowBox[{"clif1", "/.", 
        RowBox[{
         SubscriptBox["e", "u_"], "\[Rule]", "0"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Constant", ",", " ", 
        RowBox[{
         RowBox[{
         "may", " ", "be", " ", "zero", " ", "or", " ", "consist", " ", "of", 
          " ", "one", " ", "or", " ", "more", " ", "non"}], "-", 
         RowBox[{"zero", " ", "terms"}]}]}], " ", "*)"}], "\n", "\t\t", "\n", 
      "\t\t", "const"}]}], "\n", "\t", "]"}]}], "\n", "\t", 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "ConstantG"}], "  ", "*)"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AtomCoefG", "[", 
    RowBox[{"clif_", ",", "atom_"}], "]"}], ":=", " ", 
   RowBox[{"(*", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"INPUTS", ":", "\n", "\t", "clif"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"multivector", ".", "  ", 
         RowBox[{"Example", ":", " ", 
          RowBox[{
           RowBox[{
            SubscriptBox["e", "1"], 
            SubscriptBox["e", "2"]}], " ", "+", " ", 
           RowBox[{"2", 
            SubscriptBox["e", "1"], 
            SubscriptBox["e", "2"], 
            SubscriptBox["e", "3"]}], " ", "+", " ", 
           RowBox[{"3", 
            SubscriptBox["e", "1"], 
            SubscriptBox["e", "2"], 
            SubscriptBox["e", "3"], 
            SubscriptBox["e", "4"], "\n", "\t", "atom"}]}]}]}]}], " ", "=", 
       " ", 
       RowBox[{"a", " ", "product", " ", "like", " ", 
        SubscriptBox["e", "2"], " ", "or", " ", 
        SubscriptBox["e", "3"], 
        SubscriptBox["e", "4"], " ", "or", " ", 
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "3"], 
        SubscriptBox["e", "4"], 
        SubscriptBox["e", "5"], " ", "or", " ", "else", " ", "the", " ", 
        "constant", " ", "1.", "  ", 
        RowBox[{"Example", ":", " ", 
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"], "\n", "PROCESS"}], ":", "\n", "\t", "list", 
         ":", " ", 
         RowBox[{"Convert", " ", "clif", " ", "to", " ", "a", " ", 
          RowBox[{"list", ".", "  ", 
           RowBox[{"Example", ":", " ", 
            RowBox[{
            "Using", " ", "the", " ", "example", " ", "clif", " ", 
             "above"}]}]}]}]}]}]}]}], ",", " ", 
     RowBox[{"list", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"]}], ",", " ", 
          RowBox[{"2", 
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"], 
           SubscriptBox["e", "3"]}], ",", " ", 
          RowBox[{"3", 
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"], 
           SubscriptBox["e", "3"], 
           SubscriptBox["e", "4"]}]}], "}"}], " ", "\n", "\t", 
        RowBox[{"atomList", ":", " ", 
         RowBox[{
         "Use", " ", "Cases", " ", "to", " ", "find", " ", "the", " ", 
          "sublist", " ", "of", " ", "members", " ", "containing", " ", "the",
           " ", 
          RowBox[{"atom", ".", " ", "\n", "\t\t", "Example"}]}], ":", " ", 
         RowBox[{"Using", " ", "atom"}]}]}], " ", "=", " ", 
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"], 
        SubscriptBox["e", "3"]}]}]}], ",", " ", 
     RowBox[{"atomList", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", 
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"]}], ",", " ", 
         RowBox[{"3", 
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"], 
          SubscriptBox["e", "4"]}]}], "}"}], "\n", "\t\t", 
       RowBox[{"Note", ":", " ", 
        RowBox[{"5", " ", 
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"], " ", 
         RowBox[{"doesn", "'"}], "t", " ", "match", " ", "the", " ", 
         "pattern", " ", 
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"], " ", "so", " ", "the", " ", "case", " ", 
         "___", " ", "atom", " ", "is", " ", "included", " ", "\n", 
         "\t\t\t  ", "in", " ", "the", " ", "defn", " ", "of", " ", 
         "atomlist", "\n", "\t", "atomExpr"}], ":", " ", 
        RowBox[{
        "Change", " ", "atomList", " ", "back", " ", "to", " ", "an", " ", 
         RowBox[{"expression", ".", "  ", "Example"}]}], ":", " ", 
        RowBox[{
         RowBox[{"2", 
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"]}], " ", "+", " ", 
         RowBox[{"3", 
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"], 
          SubscriptBox["e", "4"], "\n", "\t", "atomCoeff"}]}], ":", " ", 
        "If"}]}]}], ",", " ", 
     RowBox[{"in", " ", "the", " ", "expression"}], ",", " ", 
     RowBox[{
     "a", " ", "term", " ", "has", " ", "one", " ", "or", " ", "more", " ", 
      "additional", " ", 
      SubscriptBox["e", "i"], " ", "factors"}], ",", " ", 
     RowBox[{
      RowBox[{
      "set", " ", "those", " ", "terms", " ", "to", " ", "0", "\n", "\t\t", 
       RowBox[{"Example", ":", " ", 
        RowBox[{"3", 
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["e", "4"]}]}]}], " ", "\[Rule]", " ", "0"}], " ", ",", 
     " ", 
     RowBox[{
      RowBox[{"resulting", " ", "in", " ", "to", " ", "2", 
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], "\n", "\t\t", "Find", " ", "the", " ", "atom", 
       " ", "coefficient", " ", "by", " ", "dividing", " ", "out", " ", 
       RowBox[{"atom", ".", "  ", 
        RowBox[{"Example", ":", " ", 
         RowBox[{"2", "\n", "OUTPUT"}], ":", "\n", "\t", "atomCoeff"}]}]}], 
      " ", "=", " ", 
      RowBox[{"atom", " ", "coefficients"}]}], ",", " ", 
     RowBox[{"if", " ", "any"}], ",", " ", 
     RowBox[{
      RowBox[{
      "in", " ", "clif", "\n", "\t", "In", " ", "the", " ", "case", " ", 
       "atom"}], " ", "=", " ", "1"}], ",", " ", 
     RowBox[{
     "atomCoeff", " ", "is", " ", "just", " ", "the", " ", "constant", " ", 
      "term", " ", "of", " ", "clif"}]}], "  ", "*)"}], "\n", "\t", "\n", 
   "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"list", ",", "atomList", ",", "atomExpr", ",", "atomCoeff"}], 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"atomList", "=", 
       RowBox[{"CollectG", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"list", ",", "atom"}], "]"}], ",", 
          RowBox[{"Cases", "[", 
           RowBox[{"list", ",", 
            RowBox[{"___", " ", "atom"}]}], "]"}]}], "]"}], "]"}]}], ";", 
      "\n", "\t\t", 
      RowBox[{"atomExpr", "=", 
       RowBox[{"atomList", "/.", 
        RowBox[{"List", "\[Rule]", "Plus"}]}]}], ";", "\n", "\t\t", 
      RowBox[{"atomCoeff", "=", 
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"atomExpr", "/.", 
           RowBox[{
            RowBox[{
             SubscriptBox["e", "u_"], "atom"}], "\[Rule]", "0"}]}], ")"}], 
         "/", "atom"}], "]"}]}], ";", "\n", "\t\t", "atomCoeff"}]}], "\n", 
    "\t", "]"}]}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "AtomCoefG"}], "  ", "*)"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpandG", "[", "clifInput_", "]"}], ":=", 
   RowBox[{"Expand", "[", 
    RowBox[{"ReduceG", "[", "clifInput", "]"}], "]"}]}], "  ", 
  RowBox[{"(*", "\n", 
   RowBox[{"Same", " ", "as", " ", 
    RowBox[{"Mathematica", "'"}], "s", " ", "Expand", " ", "function", " ", 
    RowBox[{"except", ":", "\n", "\t", 
     RowBox[{
     "Multivector", " ", "is", " ", "modified", " ", "first", " ", 
      "according", " ", "to", " ", 
      RowBox[{"user", "'"}], "s", " ", "initialization", " ", "rules", " ", 
      "shown", " ", "in", " ", "Palette"}]}]}], "  ", "*)"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FreeTermG", "[", "0", "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FreeTermG", "[", "clif_", "]"}], ":=", " ", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{"INPUT", ":", " ", 
     RowBox[{"A", " ", "clif", "\n", "\t", "PROCESS"}], ":", " ", "\n", 
     "\t\t", 
     RowBox[{
     "Expand", " ", "the", " ", "clif", " ", "so", " ", "that", " ", 
      "individual", " ", "terms", " ", "may", " ", "be", " ", "handled", " ", 
      "individually", "\n", "\t\t", "Get", " ", "the", " ", "contstant", " ", 
      "term", 
      RowBox[{"(", "s", ")"}], " ", "and", " ", "subtract", " ", "them", " ", 
      "from", " ", "the", " ", "clif", "\n", "\t", 
      RowBox[{"OUTPUT", ":", " ", "clifFree"}]}]}], "\n", "*)"}], "\n", "\t", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"clif1", ",", "conTerm", ",", "clifFree"}], "}"}], ",", "\n", 
     "\t\t\t", 
     RowBox[{
      RowBox[{"clif1", "=", 
       RowBox[{"Expand", "[", "clif", "]"}]}], ";", "\n", "\t\t\t", 
      RowBox[{"conTerm", "=", 
       RowBox[{"ConstantG", "[", "clif1", "]"}]}], ";", "\n", "\t\t\t", 
      RowBox[{"clifFree", "=", 
       RowBox[{"clif1", "-", "conTerm"}]}], ";", "\n", "\n", "\t", 
      "clifFree"}]}], "\n", "]"}]}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "FreeTermG"}], "  ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pSliceG", "[", "0", "]"}], ":=", 
   RowBox[{"{", "0", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pSliceG", "[", 
    RowBox[{"0", ",", "p_"}], "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pSliceG", "[", 
    RowBox[{"clif_", ",", "p_"}], "]"}], ":=", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"User", "'"}], "s", " ", "Clif", " ", "is", " ", 
          SubscriptBox["c", "0"]}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["c", "1"], " ", 
          SubscriptBox["e", "1"]}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["c", 
           RowBox[{"1", ",", "2"}]], " ", 
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"]}], " ", "+"}], " ", "..."}], "  ", "\n", 
       RowBox[{"INPUTS", ":", "\n", "\t", "clif"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"a", " ", "Clif", "\n", "\t", "p"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
        "grade", " ", "of", " ", "terms", " ", "we", " ", "wish", " ", "to", 
         " ", "select", "\n", "\n", 
         RowBox[{"PROCESS", ":", "\n", "\t", 
          RowBox[{
          "This", " ", "function", " ", "finds", " ", "terms", " ", "in", " ",
            "clif", " ", "of", " ", "grade", " ", "p", "\n", "\t", "Handle", 
           " ", "special", " ", "case", " ", "where", " ", "p"}]}]}], " ", 
        "=", " ", 
        RowBox[{
         RowBox[{
         "0", " ", "first", "\n", "\t", "Call", " ", "other", " ", 
          "functions", " ", "to", " ", "generate", " ", "2", " ", 
          RowBox[{"arrays", ":", "\n", "\t\t", "cliflist"}]}], " ", "=", " ", 
         
         RowBox[{
         "list", " ", "of", " ", "terms", " ", "in", " ", "clif"}]}]}]}]}], 
     ",", " ", 
     RowBox[{
      RowBox[{
      "with", " ", "all", " ", "constants", " ", "grouped", " ", "into", " ", 
       "term", " ", "1", "\n", "\t\t", "gradesClif"}], " ", "=", " ", 
      RowBox[{
      "list", " ", "of", " ", "grades", " ", "of", " ", "terms", " ", "in", 
       " ", "cliflist", "\n", "\t", "For", " ", "special", " ", "case", " ", 
       "that", " ", "p", " ", "is", " ", "greater", " ", "than", " ", "any", 
       " ", "grade", " ", "in", " ", "clif"}]}], ",", " ", 
     RowBox[{
     "set", " ", "pSlice", " ", "to", " ", "zero", "\n", "\t", "From", " ", 
      "gradesClif"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"create", " ", "an", " ", "array", " ", "with", " ", 
        RowBox[{"1", "'"}], "s", " ", "for", " ", "all", " ", "grade", " ", 
        "p", " ", "terms", " ", "and", " ", 
        RowBox[{"0", "'"}], "s", " ", "otherwise", "\n", "\t", "Then", " ", 
        "simiply", " ", "dot", " ", "multiply", " ", "this", " ", "array", 
        " ", "with", " ", "the", " ", "list", " ", "of", " ", "terms", " ", 
        "from", " ", "clif", "\n", "\n", "\t", "Note", " ", "1"}], ":", " ", 
       "p"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
        "0", " ", "requires", " ", "special", " ", "treatment", " ", "since", 
         " ", "we", " ", "are", " ", "setting", " ", "non"}], "-", 
        RowBox[{
        "grade", " ", "p", " ", "terms", " ", "to", " ", "0", "\n", "\t\t", 
         "\n", "\t", "Note", " ", "1"}]}], ":", " ", 
       RowBox[{
       "The", " ", "constant", " ", "term", " ", "have", " ", "been", " ", 
        "rounded", " ", "up", " ", "into", " ", "term", " ", "1"}]}]}], ",", 
     " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "and", " ", "due", " ", "to", " ", "Note", " ", "1", "  ", "\n", 
        "\t\t", "the", " ", "grade", " ", "has", " ", "been", " ", "changed", 
        " ", "from", " ", "0", " ", "to"}], " ", "-", 
       RowBox[{"1", "\n", "\n", 
        RowBox[{"OUTPUT", ":", "\n", "\t", "pSlice"}]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
       "clif", " ", "composed", " ", "of", " ", "just", " ", "the", " ", 
        "grade"}], "-", 
       RowBox[{"p", " ", "terms"}]}]}], ",", " ", 
     RowBox[{"if", " ", "any"}]}], "\n", "*)"}], "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clifList", ",", "gradesClif", ",", "gradeParray", ",", "pSlice"}], 
      "}"}], ",", "\n", "\t\t", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"debug4", ",", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<pSliceG:  Clif being examined = \>\"", ",", 
           RowBox[{"Expand", "[", "clif", "]"}]}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Grade being investigated = \>\"", ",", "p"}], 
          "]"}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[Equal]", "0"}], ",", "\n", "\t\t", 
        RowBox[{"pSlice", "=", 
         RowBox[{"ConstantG", "[", "clif", "]"}]}], ",", "\n", "\t", "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"gradesClif", "=", 
          RowBox[{"GradeListG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"gradeParray", "=", 
          RowBox[{"gradesClif", "/.", 
           RowBox[{
            RowBox[{"x_", "/;", 
             RowBox[{"x", "\[NotEqual]", "p"}]}], "\[RuleDelayed]", "0"}]}]}],
          ";", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Use", " ", "'"}], 
            RowBox[{"Condition", "'"}], " ", "to", " ", "set", " ", "non"}], 
           "-", 
           RowBox[{"grade", " ", "p", " ", "terms", " ", "to", " ", "0"}]}], 
          " ", "*)"}], "\n", "\t\t", 
         RowBox[{"gradeParray", "=", 
          RowBox[{"gradeParray", "/", "p"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "and", " ", "divide", " ", "the", " ", "grade", " ", "p", " ", 
           "term", 
           RowBox[{"(", "s", ")"}], " ", "by", " ", "p", " ", "to", " ", 
           "set", " ", "them", " ", "to", " ", "1"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"clifList", "=", 
          RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"pSlice", "=", 
          RowBox[{"gradeParray", ".", "clifList"}]}], ";", "\n", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{"debug4", ",", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<pSliceG:  List of grades of \>\"", ",", "clif", ",", 
              "\"\< = \>\"", ",", "gradesClif"}], "]"}], ";", "\n", "\t\t\t", 
            
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Array, with 1's at grade \>\"", ",", "p", ",", 
              "\"\< position(s) (if any) = \>\"", ",", "\n", "\t\t\t\t", 
              "\"\<and 0's elsewhere: \>\"", ",", "gradeParray"}], "]"}], ";",
             "\n", "\t\t\t", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Clif List: \>\"", ",", "clifList"}], "]"}], ";", 
            "\n", "\t\t\t", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Clif term(s) of grade \>\"", ",", "p", ",", "\"\<: \>\"", 
              ",", "pSlice"}], "]"}]}]}], "\n", "\t\t", "]"}]}]}], "\n", "\t",
        "]"}], ";", "\n", "\n", "\t", "pSlice"}]}], "\n", "\t", "]"}]}], 
  "    ", 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "pSliceG", " ", "Module"}], "  ", "*)"}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mCutG", "[", 
    RowBox[{"clif_", ",", "0"}], "]"}], ":=", 
   RowBox[{"ConstantG", "[", "clif", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mCutG", "[", 
    RowBox[{"clif_", ",", "m_"}], "]"}], ":=", "\n", 
   RowBox[{"(*", " ", "\n", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", "clif"}], ",", " ", 
     RowBox[{
      RowBox[{"a", " ", "multivector", "\n", 
       RowBox[{"PROCESS", ":", "\n", "\t", 
        RowBox[{
         RowBox[{
         "Make", " ", "the", " ", "clif", " ", "list", "\n", "\t", "Make", 
          " ", "the", " ", "list", " ", "of", " ", "the", " ", "highest", " ",
           "dimension", " ", "of", " ", "each", " ", "term", " ", "in", " ", 
          "clif", " ", "list", "\n", "\t", "The", " ", "1", "st", " ", 
          "zeroOne", " ", "replaces", " ", "each", " ", "non"}], "-", 
         RowBox[{
         "m", " ", "dimension", " ", "by", " ", "zero", "\n", "\t", "The", 
          " ", "2", "nd", " ", "zeroOne", " ", "divides", " ", "by", " ", "m",
           " ", "to", " ", "replace", " ", "the", " ", "m"}], "-", 
         RowBox[{
         "dimensions", " ", "by", " ", "1", "\n", "\t", "Take", " ", "dot", 
          " ", "prdt", " ", "of", " ", "the", " ", "clif", " ", "list", " ", 
          "and", " ", "the", " ", "zero"}], "-", 
         RowBox[{
         "one", " ", "list", " ", "to", " ", "generate", " ", "the", " ", 
          "slice", " ", "of", " ", "clif", "\n", "\t\t", "having", " ", "n", 
          " ", "as", " ", "highest", " ", "dimenion", " ", "of", " ", "each", 
          " ", "atom", "\t\t", "\n", "OUTPUT"}]}], ":", " ", "mCut"}]}], " ", 
      "=", " ", 
      RowBox[{
      "the", " ", "clif", " ", "consisting", " ", "of", " ", "the", " ", 
       "terms", " ", "whose", " ", "highest", " ", "dimension", " ", "is", 
       " ", "m"}]}]}], " ", "\n", "*)"}], "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"clifList", ",", "dimList", ",", "zeroOneList", ",", "mCut"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"clifList", "=", 
       RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", "\t", 
      RowBox[{"dimList", "=", 
       RowBox[{"DimListG", "[", "clif", "]"}]}], ";", "\n", "\t", 
      RowBox[{"zeroOneList", "=", 
       RowBox[{"dimList", "/.", 
        RowBox[{
         RowBox[{"x_", "/;", 
          RowBox[{"x", "\[NotEqual]", "m"}]}], "\[RuleDelayed]", "0"}]}]}], 
      ";", "\n", "\t", 
      RowBox[{"zeroOneList", "=", 
       RowBox[{"zeroOneList", "/", "m"}]}], ";", "\n", "\t", 
      RowBox[{"mCut", "=", 
       RowBox[{"ListToClifG", "[", 
        RowBox[{"zeroOneList", " ", "clifList"}], "]"}]}]}]}], "\n", "]"}]}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReduceG", "[", "clifInput_", "]"}], ":=", "    ", "\n", " ", 
   RowBox[{"(*", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"INPUT", ":", "\n", "\t", "clifInput"}], " ", "=", " ", 
      RowBox[{"A", " ", "multivector", "\n", "\n", 
       RowBox[{"PROCESS", ":", "\n", "\t", 
        RowBox[{
        "ReduceG", " ", "is", " ", "used", " ", "only", " ", "by", " ", 
         "ExpandG"}]}]}]}], ",", " ", 
     RowBox[{
     "which", " ", "in", " ", "turn", " ", "is", " ", "called", " ", "by", 
      " ", "CollectG", "\n", "\t", "Check", " ", "if", " ", "ReduceG", " ", 
      "has", " ", "previously", " ", "been", " ", "called", "\n", "\t\t", 
      "If", " ", "not"}], ",", " ", 
     RowBox[{
      RowBox[{
      "signatureType", " ", "and", " ", "numTimelike", " ", "have", " ", 
       "Head"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
       "Symbol", " ", "and", " ", "context", " ", "GeomAlgPkg`private`", " ", 
        "\n", "\t\t", "Contexts", " ", "are", " ", "changed", " ", "to", " ", 
        "Global`", " ", "\n", "\t", "Check", " ", "if", " ", "signatureType", 
        " ", "and", " ", "numTimelike", " ", "have", " ", "been", " ", 
        "initialized", " ", "by", " ", "the", " ", "palette", " ", "or", " ", 
        
        RowBox[{"user", ".", " ", "If"}], " ", "not", "\n", "\t\t", "Issue", 
        " ", "a", " ", "message", " ", "that", " ", "defaults", " ", "are", 
        " ", "now", " ", "being", " ", "set", "\n", "\t\t", "Set", " ", 
        "signatureType"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"+", "1"}], "  ", "and", " ", "numTimelike"}], " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"0", "\n", "\t", "Modify", " ", "any", " ", 
           SuperscriptBox[
            SubscriptBox["e", "i"], "2"], " ", "terms", " ", "in", " ", 
           "clifInput"}], "\n", "\t\t", "\[Rule]", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"-", " ", "signatureType"}], " ", "for", " ", "i"}], " ",
             "\[LessEqual]", " ", "numTimelike"}], "\n", "\t\t", "\[Rule]", 
           " ", 
           RowBox[{
            RowBox[{"+", " ", "signatureType"}], " ", "otherwise", " ", "\n", 
            " ", "\n", "\t", 
            RowBox[{"context", ":", " ", "1"}]}]}]}], " ", "=", " ", 
         RowBox[{"Mathematicians", " ", "-", " ", 
          RowBox[{"+", " ", 
           RowBox[{"+", " ", "+"}]}]}]}]}]}]}], " ", ",", "  ", 
     RowBox[{
      RowBox[{"-", "1"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"Physicists", " ", "+", " ", 
        RowBox[{"-", " ", 
         RowBox[{"-", " ", 
          RowBox[{"-", " ", "\n", "\t", "numTimelike"}]}]}]}], " ", "=", " ", 
       
       RowBox[{
        RowBox[{"Number", " ", "of", " ", "timelike", " ", 
         RowBox[{"dimensions", ".", " ", "\n", "\t\t", "0"}]}], " ", "=", " ", 
        RowBox[{
         RowBox[{"Pure", " ", "Space", "   ", "1"}], " ", "=", " ", 
         RowBox[{
         "Spacetime", "   ", "2", " ", "or", " ", "more", " ", "time", " ", 
          "dimensions", " ", "are", " ", "allowed"}]}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "time", " ", "always", " ", "using", "\n", "\t\t", "the", " ", "lowest",
        " ", "ubscripts", "\n", "\n", 
       RowBox[{"OUTPUT", ":", "  ", "clifOutput"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"Multivector", " ", "with", " ", "any", " ", "square", " ", 
        SubscriptBox["e", "i"], " ", "terms", " ", 
        RowBox[{"reduced", ":", "\n", "\t\t\t   ", "\n", 
         RowBox[{"CONTEXT", " ", "SHADOWING"}], ":", "\n", "\t", 
         RowBox[{
         "The", " ", "logic", " ", "below", " ", "was", " ", "previously", 
          " ", "used", " ", "to", " ", "combat", " ", "context", " ", 
          RowBox[{"shadowing", ".", " ", "It"}], " ", "is", " ", "preserved", 
          " ", "here", " ", "just", " ", "in", " ", 
          RowBox[{"case", ".", "\n", "\t\t", "The"}], " ", 
          RowBox[{"current", " ", "'"}], "context", " ", 
          RowBox[{"shadowing", "'"}], " ", "fix", " ", "is", " ", "to", " ", 
          "set", " ", 
          RowBox[{"Context", "[", "e", "]"}]}]}]}], " ", "=", " ", 
       RowBox[{
       "Global`", " ", "as", " ", "the", " ", "first", " ", "step", " ", "in",
         "\n", "\t\t\t", "this", " ", "package", "\n", "\t\t", "Then", " ", 
        "e", " ", "also", " ", "has", " ", "context", " ", "Global`", " ", 
        "in", " ", 
        RowBox[{"user", "'"}], "s", " ", "notebook", " ", "and", " ", "so", 
        " ", "all", " ", "changes", " ", "to", " ", 
        SuperscriptBox[
         SubscriptBox["e", "i"], "2"], " ", "apply", " ", "naturally", "\n", 
        "\t\t\t", "and", " ", "no", " ", "context", " ", "shadowing", " ", 
        RowBox[{"(", 
         RowBox[{
         "where", " ", "e", " ", "has", " ", "several", " ", "possible", " ", 
          "contexts"}], ")"}], " ", "occurs", "\n", "\n", "\t", "FORMER", " ",
         "LOGIC", " ", 
        RowBox[{"(", 
         RowBox[{"very", " ", "subtle"}], ")"}], "\t", "\n", "\t", "The", " ",
         "context", " ", "of", " ", "this", " ", "package", " ", "is", " ", 
        "GeomAlgPkg`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "or", " ", "whatever", " ", "is", " ", "in", " ", "BeginPackage"}], 
          ",", " ", "above"}], ")"}], "\n", "\t", "The", " ", "symbol", " ", 
        "\"\<e\>\"", " ", "is", " ", "manipulated", " ", "in", " ", "various",
         " ", "ways", " ", "by", " ", "GeomAlgPkg", " ", "\n", "\t", "If", 
        " ", "a", " ", "user", " ", "calls", " ", "this", " ", "package", " ",
         "from", " ", "his", " ", "environment", " ", "having", " ", "a", " ",
         "different", " ", "context"}]}]}], ",", " ", 
     RowBox[{"say", " ", "ContextUser`"}], ",", " ", "\n", "\t\t", 
     RowBox[{
      RowBox[{"then", " ", "e"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
       "GeomAlgPkg`Private`e", " ", "but", " ", "we", " ", "need", " ", "e"}],
        " ", "=", " ", 
       RowBox[{
        RowBox[{"ContextUser`e", " ", "in", " ", "order", " ", "for"}], " ", "/.", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["e", "u_"], "2"], "\[Rule]", 
         RowBox[{
         "1", " ", "to", " ", "work", "\n", "\t", "The", " ", "user", " ", 
          "only", " ", "enters", " ", "clif1", " ", 
          RowBox[{"(", 
           RowBox[{"and", " ", "possibly", " ", "clif2"}], ")"}]}]}]}]}]}], 
     ",", " ", 
     RowBox[{
      RowBox[{"resulting", " ", "here", " ", "in", " ", 
       RowBox[{"clifInput", ".", " ", "He"}], " ", "does", " ", "not", " ", 
       "input", " ", "\n", "\t\t", "either", " ", "e", " ", "or", " ", "his", 
       " ", 
       RowBox[{"context", ".", "\n", "\t", "Here"}], " ", "is", " ", "how", 
       " ", "we", " ", "find", " ", 
       RowBox[{"both", ":", " ", "\n", "\t\t", 
        RowBox[{"Suppose", " ", "clifInput"}]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"1", " ", "+", " ", 
        RowBox[{"2", 
         SubscriptBox["e", 
          RowBox[{"1", " "}]]}], "+", " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["e", "1"], "2"], 
         SubscriptBox["e", "2"], "\n", "\t\t", "leaves"}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{"Level", "[", 
         RowBox[{"clifInput", ",", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}]}], "]"}], " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "e", ",", "1", ",", "e", ",", "1", ",", "2", ",",
           "e", ",", "2"}], "}"}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"the", " ", "leaves", " ", 
       RowBox[{"(", 
        RowBox[{"or", " ", "atomic", " ", "elements"}], ")"}], " ", "of", " ",
        "clifInput", "\n", "\t\t\t", "Note", " ", "1"}], ":", " ", 
      RowBox[{
      "The", " ", "leaves", " ", "list", " ", "members", " ", "have", " ", 
       "context", " ", "ContextUser`"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"what", " ", "we", " ", "are", " ", 
        RowBox[{"after", ".", "\n", "\t\t\t", "Note"}], " ", "2"}], ":", " ", 
       
       RowBox[{
       "The", " ", "symbol", " ", "\"\<leaves\>\"", " ", "does", " ", 
        RowBox[{"not", ".", " ", "It"}], " ", "has", " ", "context", " ", 
        RowBox[{"GeomAlgPkg`Private`", ".", "\n", "\t\t", "symbols1"}]}]}], 
      " ", "=", " ", 
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{"leaves", ",", "_Symbol"}], "]"}], " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"e", ",", "e", ",", "e"}], "}"}]}]}], ",", " ", 
     RowBox[{"lists", " ", "the", " ", "symbols"}], ",", " ", 
     RowBox[{"if", " ", "any"}], ",", " ", 
     RowBox[{
      RowBox[{"among", " ", "the", " ", "leaves", "\n", "\t\t", "symbols2"}], 
      " ", "=", " ", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"symbols1", ",", "e"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"e", ",", "e", ",", "e", ",", "e"}], "}"}], " ", "appends", 
         " ", "an", " ", "e", " ", "to", " ", "the", " ", "end", "\n", "\t\t",
          "symbolA"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"First", "[", "symbol2", "]"}], " ", "=", " ", 
         RowBox[{
         "e", "\n", "\t\t\t", "We", " ", "could", " ", "have", " ", "just", 
          " ", "used", " ", "symbols1", " ", "since", " ", "the", "  ", 
          "appended", " ", "e", " ", "has", " ", "context", " ", 
          "GeomAlgPkg`Private`"}]}]}]}]}], ",", "\n", "\t\t\t\t", 
     RowBox[{
     "which", " ", "is", " ", "NOT", " ", "what", " ", "we", " ", "want", 
      "\n", "\t\t\t", "However"}], ",", " ", 
     RowBox[{"if", " ", "clifInput", " ", "has", " ", "no", " ", 
      SubscriptBox["e", "i"], " ", "terms"}], ",", " ", 
     RowBox[{
      RowBox[{
      "Mathematica", " ", "will", " ", "issue", " ", "a", " ", "warning", " ",
        "message", "\n", "\t\t\t", "The", " ", "appended", " ", "e", " ", 
       "will", " ", "only", " ", "be", " ", "chosen", " ", "if", " ", 
       "symbols1", " ", "is", " ", "an", " ", "empty", " ", "list"}], ";", 
      " ", 
      RowBox[{"that", " ", "is"}]}], ",", " ", 
     RowBox[{"clifInput", " ", "\n", "\t\t\t\t", "has", " ", "no", " ", 
      SubscriptBox["e", "i"], "terms", "\n", "\t\t\t", "If", " ", "there", 
      " ", "are", " ", "no", " ", 
      SubscriptBox["e", "i"], " ", "terms"}], ",", " ", 
     RowBox[{
      RowBox[{"then", " ", 
       SuperscriptBox[
        SubscriptBox["e", "i"], "2"]}], "\[Rule]", 
      RowBox[{"1", " ", 
       RowBox[{"doesn", "'"}], "t", " ", "do", " ", "anything"}]}], ",", " ", 
     
     RowBox[{"so", " ", "no", " ", "harm", " ", 
      RowBox[{"occurs", ".", " ", "\n", "\t\t\t", "Doing"}], " ", "the", " ", 
      "logic", " ", "this", " ", "way", " ", "avoids", " ", "a", " ", 
      "warning", " ", "message", " ", "due", " ", "to", " ", "operating", " ",
       "on", " ", "an", " ", "empty", " ", "symbols1", " ", 
      RowBox[{"list", ".", "\n", "\t\t\t", 
       RowBox[{"Note", ":", " ", 
        RowBox[{
        "As", " ", "in", " ", "Notes", " ", "1", " ", "and", " ", "2"}]}]}]}],
      ",", " ", "above", ",", " ", 
     RowBox[{
      RowBox[{
      "e", " ", "has", " ", "the", " ", "context", " ", "we", " ", "want"}], 
      ";", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"symbolA", " ", "does", " ", 
         RowBox[{"not", ".", "\n", "\t\t\t\t  ", "But"}]}], "..."}], " ", 
       "the", " ", "rhs", " ", "e", " ", "is", " ", "not", " ", "available", 
       " ", "for", " ", "processing"}], ";", " ", 
      RowBox[{
       RowBox[{
       "we", " ", "only", " ", "have", " ", "access", " ", "to", " ", "lhs", 
        " ", "symbolA", "\n", "\t\t", "e"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"Evaluate", "[", "symbolA", "]"}], "\n", "\t\t\t", "lhs", " ",
         "e", " ", "is", " ", "now", " ", "the", " ", "same", " ", "as", " ", 
        "rhs", " ", "e", " ", 
        RowBox[{"(", 
         RowBox[{"of", " ", "symbolA"}], ")"}], " ", "and", " ", "has", " ", 
        "the", " ", 
        RowBox[{"user", "'"}], "s", " ", "context"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "one", " ", "we", " ", "want", "\n", "\t\t", 
       "contextUser"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"Context", "[", "symbolUser", "]"}], " ", "is", " ", "the", 
       " ", 
       RowBox[{"user", "'"}], "s", " ", "context", " ", "in", " ", "list", 
       " ", "form", "\n", "\t\t", "Since", " ", "contextUser", " ", "is", " ",
        "a", " ", "list"}]}], ",", " ", 
     RowBox[{"eList", " ", "=", " ", 
      RowBox[{
       RowBox[{"contextUser", "<>", "\"\<e\>\""}], " ", "is", " ", "a", " ", 
       "list", " ", "containing", " ", 
       RowBox[{"user", "'"}], "s", " ", "e"}]}], ",", " ", 
     RowBox[{
      RowBox[{"and", "\n", "\t\t", 
       RowBox[{"ToExpression", "[", "eList", "]"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"e", " ", "in", " ", 
        RowBox[{"user", "'"}], "s", " ", "context", "\n", "\t\t", "\n", "\t", 
        "The", " ", "2", " ", "init", " ", "symbols", " ", 
        RowBox[{"(", 
         RowBox[{"signatureType", ",", " ", 
          RowBox[{"and", " ", "numTimelike"}]}], ")"}], " ", "similarly", " ",
         "will", " ", "have", " ", "GeomAlgPkg`private`", " ", "\n", "\t\t", 
        "context", " ", "the", " ", "first", " ", "time", " ", "ReduceG", " ",
         "is", " ", "called", " ", "within", " ", "a", " ", 
        RowBox[{"session", ".", " ", "In"}], " ", "that", " ", "case", " ", 
        "the", " ", "first", " ", "\"\<Head\>\"", "\n", "\t\t", "if"}], "-", 
       RowBox[{
       "test", " ", "below", " ", "will", " ", "be", " ", "true", " ", "and", 
        " ", "the", " ", "context", " ", "shadow", " ", "is", " ", "set", " ",
         "not", " ", "only", " ", "for", " ", "e", " ", "but", " ", "for", 
        " ", "the", " ", "init", " ", "symbols"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"also", ".", "\n", "\t", "The"}], " ", "user", " ", "may", " ", 
      "or", " ", "may", " ", "not", " ", "have", " ", "previously", " ", 
      "used", " ", "the", " ", "palette", " ", "to", " ", "set", " ", "the", 
      " ", "init", " ", 
      RowBox[{"symbols", ".", " ", "If"}], " ", "he", " ", 
      RowBox[{"hasn", "'"}], "t"}], ",", " ", 
     RowBox[{
      RowBox[{
      "then", "\n", "\t\t", "the", " ", "2", "nd", " ", "\"\<Head\>\"", " ", 
       "if"}], "-", 
      RowBox[{
      "test", " ", "will", " ", "be", " ", "true", " ", "and", " ", "default",
        " ", "values", " ", "are", " ", 
       RowBox[{"set", ".", "\n", "\t", "In"}], " ", "subsequent", " ", 
       "calls", " ", "of", " ", "ReduceG", " ", "these", " ", "if"}], "-", 
      RowBox[{
      "tests", " ", "will", " ", "be", " ", "false", " ", "and", " ", "so", 
       " ", "redundant", " ", "shadow", " ", "\n", "\t\t", "correcting", " ", 
       "will", " ", "not", " ", 
       RowBox[{"occur", ".", "\n", "\t", "Finally"}]}]}], ",", " ", 
     RowBox[{
     "we", " ", "need", " ", "e", " ", "and", " ", "contextUser", " ", "to", 
      " ", "be", " ", "global", " ", "within", " ", "context", " ", 
      "GeomPkg`Private`so", " ", "they", " ", "can", " ", "be", " ", "used", 
      " ", "\n", "\t\t", "repeatedly", " ", "duricng", " ", "a", " ", 
      "session", " ", "\n", "\t", "We", " ", "need", " ", "the", " ", "2", 
      " ", "init", " ", "symbols", " ", "to", " ", "be", " ", "global", " ", 
      "and", " ", "available", " ", "to", " ", "the", " ", 
      RowBox[{"user", "'"}], "s", " ", "context", " ", "because", " ", "the", 
      " ", "palette", "\n", "\t\t", "settings", " ", "are", " ", "dynamic", 
      " ", "and", " ", "will", " ", "change", " ", "or", " ", "be", " ", 
      "changed", " ", "in", " ", "sync", " ", "with", " ", "the", " ", "init",
       " ", "symbols", " ", "here"}]}], "\n", "*)"}], "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"signatureType", ",", "numTimelike", ",", "clifOutput"}], "}"}],
      ",", "\n", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "signatureType", "]"}], "\[Equal]", "Symbol"}], 
        ",", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"If", " ", "true"}], ",", " ", 
          RowBox[{
          "this", " ", "signatureType", " ", "symbol", " ", "has", " ", 
           "GeomAlgPkg", " ", "context"}]}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"signatureType", "=", "Global`signatureType"}], ";", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "context", " ", "to", " ", "Global`", " ", "for", 
           " ", "both", " ", "init", " ", "symbols"}], " ", "*)"}], "\n", 
         "\t\t", 
         RowBox[{"numTimelike", "=", "Global`numTimelike"}]}]}], "\n", "\t", 
       "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "signatureType", "]"}], "\[Equal]", "Symbol"}], 
        ",", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"If", " ", "true"}], ",", " ", 
          RowBox[{
          "then", " ", "Global`", " ", "signatureType", " ", "has", " ", 
           "not", " ", "yet", " ", "been", " ", "set"}]}], " ", "*)"}], "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"ReduceG", "::", "warning"}], "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
            "\"\<Evaluate\>\"", " ", "causes", " ", "Global`signatureType"}], 
            " ", "=", " ", 
            RowBox[{"-", "1"}]}], ";", " ", 
           RowBox[{
            RowBox[{
            "else", " ", "would", " ", "set", " ", 
             "GeomAlgPkg`signatureType"}], " ", "=", " ", 
            RowBox[{"+", "1"}]}]}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"Global`signatureType", "=", "1"}], ";", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Set", " ", "values", " ", "for", " ", "init", " ", "variables"}], 
          " ", "*)"}], "\n", "\t\t", 
         RowBox[{"Global`numTimelike", "=", "0"}]}]}], "\t", "\n", "\t", 
       "]"}], ";", " ", "\n", "\t\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{"Reduce", " ", 
        SuperscriptBox[
         SubscriptBox["e", "i"], "2"], " ", "terms"}], " ", "*)"}], "\n", 
      "\t", 
      RowBox[{"clifOutput", "=", 
       RowBox[{"clifInput", "/.", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubsuperscriptBox["e", "u_", "2"], "/;", 
            RowBox[{"u", "\[LessEqual]", "numTimelike"}]}], ":>", 
           RowBox[{"-", "signatureType"}]}], ",", 
          RowBox[{
           SubsuperscriptBox["e", "u_", "2"], ":>", "signatureType"}]}], 
         "}"}]}]}], ";", "\n", "\t\t", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug1", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<ReduceG: signatureType = \>\"", ",", "\n", "\t\t\t", 
           "signatureType", ",", "\"\<, and numTimelike = \>\"", ",", 
           "numTimelike"}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Context of e: \>\"", ",", 
           RowBox[{"Context", "[", "e", "]"}]}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Clif Input = \>\"", ",", "clifInput", ",", 
           "\"\<, and Clif Ouput = \>\"", ",", "clifOutput"}], "]"}]}]}], 
       "\n", "\t", "]"}], ";", "\n", "\t", "clifOutput"}]}], "\n", "]"}]}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "ReduceG", " ", "function"}], "   ", "*)"}],
   "\t\t\t\t\t\t", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"ShadowSymbol", "[", "symbol_", "]"}], ":=", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"contextUser", "<>", 
      RowBox[{"ToString", "[", "symbol", "]"}]}], "]"}]}], " ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxDimG", "[", "clif_", "]"}], ":=", "    ", 
   RowBox[{"(*", " ", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", "clif"}], " ", "\[Dash]", " ", 
     RowBox[{
      RowBox[{"A", " ", "users", " ", 
       RowBox[{"clif", ".", " ", "Coefficients"}], " ", "can", " ", "be", " ",
        "either", " ", "values", " ", "or", " ", "symbols", "\n", "\t", 
       RowBox[{"PROCESS", ":", " ", 
        RowBox[{
        "Flatten", " ", "the", " ", "subscript", " ", "list", " ", "and", " ",
          "find", " ", "the", " ", "maximum", "\n", "\t", "OUTPUT"}], ":", 
        " ", "maxDim"}]}], " ", "=", " ", 
      RowBox[{
      "largest", " ", "subscript", " ", "value", " ", "on", " ", "any", " ", 
       RowBox[{
        SubscriptBox["e", "i"], ".", " ", "Used"}], " ", "when", " ", 
       "collecting", " ", "terms", " ", "in", " ", "clif", " ", "output", 
       "\n", "\t\t\t", "If", " ", "clif", " ", "is", " ", "a", " ", 
       "constant", " ", "term"}]}], ",", " ", 
     RowBox[{
      RowBox[{"then", " ", "maxDim"}], " ", "=", " ", "0"}]}], "  ", "*)"}], 
   "\n", "\t", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"flatSubscriptList", ",", "maxDim"}], "}"}], ",", "\n", "\t\t", 
     
     RowBox[{
      RowBox[{"flatSubscriptList", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"SubscriptListG", "[", "clif", "]"}], "]"}]}], ";", " ", "\n",
       "\t\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Want", " ", "maxDim"}], " ", "\[GreaterEqual]", " ", 
         RowBox[{"1.", " ", "Thus"}]}], ",", 
        RowBox[{
         RowBox[{
         "c", " ", "use", " ", "clif", " ", "rather", " ", "than", " ", 
          "clif"}], " ", "-", " ", "const"}]}], "  ", "*)"}], "\n", "\t\t", 
      RowBox[{"maxDim", "=", 
       RowBox[{"Max", "[", "flatSubscriptList", "]"}]}], ";", " ", "\n", "\n",
       "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug2", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<MaxDim: Flattened list of subscripts = flatSubscriptList = \
\>\"", ",", "\n", "\t\t\t\t", "flatSubscriptList"}], "]"}], ";", "\n", 
         "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Max dim = largest subscript = \>\"", ",", "maxDim"}], 
          "]"}]}]}], "\n", "\t\t", "]"}], ";", "\n", "\t", "maxDim"}]}], "\n",
     "\t", "]"}]}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "MaxDimG", " ", "Module"}], "\t", "*)"}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxGradeG", "[", "clif_", "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"GradeListG", "[", "clif", "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GradeInvoluteG", "[", "clif_", "]"}], ":=", "\n", 
   RowBox[{"(*", "  ", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", 
      RowBox[{"A", " ", "multivector", "\n", "\t", "PROCESS"}], ":", " ", 
      RowBox[{
       RowBox[{
       "Find", " ", "the", " ", "grade", " ", "p", " ", "of", " ", "each", 
        " ", "term", " ", "and", " ", "multiply", " ", "it", " ", "by", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "p"], "\n", "\t\t", "clifList", " ", 
        "is", " ", "a", " ", "list", " ", "of", " ", "the", " ", "terms", " ",
         "of", " ", "the", " ", "multivector", "\n", "\t\t", "gradeList", " ",
         "is", " ", "a", " ", "list", " ", "of", " ", "the", " ", "grades", 
        " ", "of", " ", "the", " ", "terms", "\n", "\t\t", "plusMinusList", 
        " ", "is", " ", "a", " ", "list", " ", "corresponding", " ", "to"}], 
       " ", "+", 
       RowBox[{"1", " ", "for", " ", "even", " ", "terms", " ", "and"}], " ", 
       "-", 
       RowBox[{
       "1", " ", "for", " ", "odd", " ", "terms", "\n", "\t\t", 
        "involuteList", " ", "is", " ", "the", " ", "dot", " ", "product", 
        " ", "of", " ", "plusMinusList", " ", "and", " ", "clifList", "\n", 
        "\t", 
        RowBox[{"OUTPUT", ":", " ", "involute"}]}]}]}], ",", " ", 
     RowBox[{
     "the", " ", "grade", " ", "involutions", " ", "of", " ", "clif"}]}], 
    "\n", "*)"}], "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clifList", ",", "gradeList", ",", "plusMinusList", ",", "involuteList",
        ",", "involute"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"clifList", "=", 
       RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", "\t", 
      RowBox[{"gradeList", "=", 
       RowBox[{"GradeListG", "[", "clif", "]"}]}], ";", "\n", "\t", 
      RowBox[{"plusMinusList", "=", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "gradeList"]}], ";", "\n", "\t", 
      RowBox[{"involuteList", "=", 
       RowBox[{"plusMinusList", " ", "clifList"}]}], ";", "\n", "\t", 
      RowBox[{"involute", "=", 
       RowBox[{"ListToClifG", "[", "involuteList", "]"}]}]}]}], "\n", "]"}]}],
   "     ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "GradeInvoluteG", " ", "Module"}], "\t", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"JKinvoluteG", "[", 
    RowBox[{"clif_", ",", "j_", ",", "k_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clifList", ",", "gradeList", ",", "PlusMinusList", ",", "involute"}], 
      "}"}], ",", "\n", 
     RowBox[{"(*", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"INPUT", ":", " ", 
         RowBox[{
         "A", " ", "multivector", " ", "and", " ", "2", " ", "grades", "\n", 
          "\t", "PROCESS"}], ":", " ", 
         RowBox[{
         "Reverse", " ", "the", " ", "signs", " ", "of", " ", "terms", " ", 
          "of", " ", "those", " ", "2", " ", "gradees"}]}], ";", " ", 
        RowBox[{
         RowBox[{"i", ".", "e", ".", " ", "involute"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"clif", " ", "-", " ", "2"}], " ", "<", "clif", 
          SubscriptBox[">", "j"], " ", 
          RowBox[{"-", " ", "2"}], " ", "<", "clif", 
          SubscriptBox[">", "k"], "\n", "\t\t", 
          RowBox[{
           RowBox[{
           "clifList", " ", "is", " ", "a", " ", "list", " ", "of", " ", 
            "the", " ", "terms", " ", "of", " ", "the", " ", "multivector", 
            "\n", "\t\t", "gradeList", " ", "is", " ", "a", " ", "list", " ", 
            "of", " ", "the", " ", "grades", " ", "of", " ", "the", " ", 
            "terms", "\n", "\t\t", "plusMinusList", " ", "uses", " ", 
            "Condition", " ", 
            RowBox[{"(", "/;", ")"}], " ", "to", " ", "send", " ", "grades", 
            " ", "j", " ", "and", " ", "k", " ", "to"}], " ", "-", 
           RowBox[{
           "1", " ", "and", " ", "the", " ", "other", " ", "grades", " ", 
            "to"}], " ", "+", 
           RowBox[{"1", "\n", "\t", 
            RowBox[{"OUTPUT", ":", " ", "involute"}]}]}]}]}]}], " ", 
       "\[Dash]", " ", 
       RowBox[{
       "clif", " ", "with", " ", "grade", " ", "j", " ", "and", " ", "k", " ",
         "terms", " ", "reversed"}]}], "\n", "\t", "*)"}], "\n", 
     RowBox[{
      RowBox[{"clifList", "=", 
       RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", 
      RowBox[{"gradeList", "=", 
       RowBox[{"GradeListG", "[", "clif", "]"}]}], ";", "\n", 
      RowBox[{"PlusMinusList", "=", 
       RowBox[{"gradeList", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"u_", "/;", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"u", "==", "j"}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{"u", "==", "k"}], ")"}]}]}], "->", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{
           RowBox[{"u_", "/;", 
            RowBox[{"u", "\[NotEqual]", 
             RowBox[{"-", "1"}]}]}], "\[Rule]", "1"}]}], "}"}]}]}], ";", "\n", 
      RowBox[{"involute", "=", 
       RowBox[{"ListToClifG", "[", 
        RowBox[{"PlusMinusList", " ", "clifList"}], "]"}]}]}]}], "\n", 
    "]"}]}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "JKinvoluteG", " ", "Module"}], "\t", 
   "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Clifford", " ", "Conjugation"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifConjugateG", "[", "clif_", "]"}], ":=", 
   RowBox[{"ReverseG", "[", 
    RowBox[{"GradeInvoluteG", "[", "clif", "]"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Inverse4G", "[", "clif_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ahat", ",", "Abar", ",", "AAbar", ",", "m34", ",", "inv"}], 
      "}"}], ",", "\n", 
     RowBox[{"(*", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"INPUT", ":", " ", 
           RowBox[{
           "A", " ", "multivector", " ", "of", " ", "dimension", " ", "4", 
            " ", "or", " ", "less", "\n", "\t", "PROCESS"}], ":", " ", 
           RowBox[{"Implements", " ", "Hitzer"}]}], " ", "&"}], " ", 
         RowBox[{"Sangwine", "'"}], "s", " ", 
         RowBox[{"formula", ":", " ", "inv"}]}], " ", "=", " ", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            OverscriptBox["x", "_"], " ", 
            SubscriptBox["m", 
             RowBox[{"3", ",", "4"}]], 
            RowBox[{"(", 
             RowBox[{"x", " ", 
              OverscriptBox["x", "_"]}], ")"}]}], 
           RowBox[{"x", " ", 
            OverscriptBox["x", "_"], " ", 
            SubscriptBox["m", 
             RowBox[{"3", ",", "4"}]], 
            RowBox[{"(", 
             RowBox[{"x", " ", 
              OverscriptBox["x", "_"]}], ")"}]}]], "\n", "\t\t", "A"}], " ", 
         "=", " ", 
         RowBox[{
          RowBox[{"clif", "\n", "\t\t", "Ahat"}], " ", "=", " ", 
          RowBox[{
           RowBox[{
           "Grade", " ", "Involution", " ", "of", " ", "A", "\n", "\t\t", 
            "Abar"}], " ", "=", " ", 
           RowBox[{
            RowBox[{
            "Clifford", " ", "Conjugation", " ", "of", " ", "Ahat", "\n", 
             "\t\t", "AAbar"}], " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"A", " ", "\[Diamond]", " ", "Abar"}], "\n", "\t\t", 
              "m34"}], " ", "=", " ", 
             RowBox[{"grades", " ", "3"}]}]}]}]}]}]}], ",", 
       RowBox[{"4", " ", "specific", " ", "involution", " ", "of", " ", 
        RowBox[{"A", " ", "\[Diamond]", " ", "Abar"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", ".", "e", "."}], ",", " ", 
          RowBox[{
           RowBox[{
           "reverse", " ", "signs", " ", "of", " ", "grades", " ", "3", " ", 
            "and", " ", "4", " ", "terms", "\n", "\t", 
            RowBox[{"OUTPUT", ":", " ", "inv"}]}], " ", "=", " ", 
           RowBox[{"inverse", " ", "of", " ", "clif"}]}]}], "\n"}]}]}], 
      "*)"}], "\n", 
     RowBox[{
      RowBox[{"Ahat", "=", 
       RowBox[{"GradeInvoluteG", "[", "clif", "]"}]}], ";", "\n", 
      RowBox[{"Abar", "=", 
       RowBox[{"ReverseG", "[", "Ahat", "]"}]}], ";", "\n", 
      RowBox[{"AAbar", "=", 
       RowBox[{"clif", "\[Diamond]", "Abar"}]}], ";", "\n", 
      RowBox[{"m34", "=", 
       RowBox[{"JKinvoluteG", "[", 
        RowBox[{"AAbar", ",", "3", ",", "4"}], "]"}]}], ";", "\n", 
      RowBox[{"inv", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Abar", "\[Diamond]", "m34"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"AAbar", "\[Diamond]", "m34"}], ")"}]}]}]}]}], "\n", "]"}]}],
   "     ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "Inverse4G", " ", "Module"}], "\t", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Inverse5G", "[", "clif_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Ahat", ",", "Abar", ",", "Atilde", ",", "AAbar", ",", "AhatAtilde", ",",
       "m14", ",", "inv"}], "}"}], ",", "\n", 
    RowBox[{"(*", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"INPUT", ":", " ", 
          RowBox[{
          "A", " ", "multivector", " ", "of", " ", "dimension", " ", "5", " ",
            "or", " ", "less", "\n", "\t", "PROCESS"}], ":", " ", 
          RowBox[{"Implements", " ", "Hitzer"}]}], " ", "&"}], " ", 
        RowBox[{"Sangwine", "'"}], "s", " ", 
        RowBox[{"formula", ":", " ", "inv"}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           OverscriptBox["x", "_"], " ", 
           OverscriptBox["x", "^"], " ", 
           OverscriptBox["x", "~"], " ", 
           SubscriptBox["m", 
            RowBox[{"1", ",", "4"}]], 
           RowBox[{"(", 
            RowBox[{"x", " ", 
             OverscriptBox["x", "_"], " ", 
             OverscriptBox["x", "^"], " ", 
             OverscriptBox["x", "~"]}], ")"}]}], 
          RowBox[{"x", " ", 
           OverscriptBox["x", "_"], " ", 
           OverscriptBox["x", "^"], " ", 
           OverscriptBox["x", "~"], " ", 
           SubscriptBox["m", 
            RowBox[{"1", ",", "4"}]], 
           RowBox[{"(", 
            RowBox[{"x", " ", 
             OverscriptBox["x", "_"], " ", 
             OverscriptBox["x", "^"], " ", 
             OverscriptBox["x", "~"]}], ")"}]}]], "\n", "\t\t", "A"}], " ", 
        "=", " ", 
        RowBox[{
         RowBox[{"clif", "\n", "\t\t", "Ahat"}], " ", "=", " ", 
         RowBox[{
          RowBox[{
          "Grade", " ", "Involution", " ", "of", " ", "A", "\n", "\t\t", 
           "Abar"}], " ", "=", " ", 
          RowBox[{
           RowBox[{
           "Clifford", " ", "Conjugation", " ", "of", " ", "Ahat", "\n", 
            "\t\t", "Atilde"}], " ", "=", " ", 
           RowBox[{
            RowBox[{"Reverse", 
             RowBox[{"(", "A", ")"}], "\n", "\t\t", "AAbar"}], " ", "=", " ", 
            
            RowBox[{
             RowBox[{
              RowBox[{"A", " ", "\[Diamond]", " ", "Abar"}], "\n", "\t\t", 
              "AhatAtilde"}], " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Ahat", " ", "\[Diamond]", " ", "Atilde"}], "\n", 
               "\t\t", "m14"}], " ", "=", " ", 
              RowBox[{"grades", " ", "1"}]}]}]}]}]}]}]}]}], ",", 
      RowBox[{
       RowBox[{"4", " ", "specific", " ", "involution", " ", "of", " ", 
        RowBox[{
        "A", " ", "\[Diamond]", " ", "Abar", " ", "\[Diamond]", " ", "Ahat", 
         " ", "\[Diamond]", " ", 
         RowBox[{"ReverseG", "[", "A", "]"}]}], "  ", "\n", "\t\t\t", 
        RowBox[{"(", 
         RowBox[{
         "m14", " ", "reverse", " ", "signs", " ", "of", " ", "grades", " ", 
          "1", " ", "and", " ", "4", " ", "terms"}], "\n", ")"}], "\t", 
        RowBox[{"OUTPUT", ":", " ", "inv"}]}], " ", "=", " ", 
       RowBox[{"inverse", " ", "of", " ", "clif"}]}]}], "\n", "*)"}], "\n", 
    RowBox[{
     RowBox[{"Ahat", "=", 
      RowBox[{"GradeInvoluteG", "[", "clif", "]"}]}], ";", "\n", 
     RowBox[{"Atilde", "=", 
      RowBox[{"ReverseG", "[", "clif", "]"}]}], ";", "\n", 
     RowBox[{"Abar", "=", 
      RowBox[{"ReverseG", "[", "Ahat", "]"}]}], ";", "\n", 
     RowBox[{"AAbar", "=", 
      RowBox[{"clif", "\[Diamond]", "Abar"}]}], ";", "\n", 
     RowBox[{"AhatAtilde", "=", 
      RowBox[{"Ahat", "\[Diamond]", "Atilde"}]}], ";", "\n", 
     RowBox[{"m14", "=", 
      RowBox[{"JKinvoluteG", "[", 
       RowBox[{
        RowBox[{"AAbar", "\[Diamond]", "AhatAtilde"}], ",", "1", ",", "4"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"inv", "=", 
      RowBox[{"Together", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Abar", "\[Diamond]", "AhatAtilde", "\[Diamond]", "m14"}], 
         ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"AAbar", "\[Diamond]", "AhatAtilde", "\[Diamond]", "m14"}], 
         ")"}]}], "]"}]}]}]}], "\n", "]"}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "Inverse4G", " ", "Module"}], "\t", 
   "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691073072029634*^9, 3.691073593702551*^9, 
   3.691073646277369*^9, 3.691073715183025*^9, 3.691073841869029*^9, 
   3.691073879917136*^9, {3.6910742437762337`*^9, 3.691074246906845*^9}, 
   3.691074290856971*^9, {3.69107437586687*^9, 3.691074402029483*^9}, {
   3.691086119521948*^9, 3.6910861791913633`*^9}, {3.691087874687943*^9, 
   3.6910878857564077`*^9}, {3.691106026077119*^9, 3.6911060448791103`*^9}, {
   3.691106126194209*^9, 3.691106167168133*^9}, {3.69110725558745*^9, 
   3.691107257249641*^9}, {3.691107328838606*^9, 3.691107366853805*^9}, {
   3.691107406148611*^9, 3.691107551656928*^9}, {3.6911076492996187`*^9, 
   3.6911076538262177`*^9}, {3.691108305707941*^9, 3.6911083336409807`*^9}, {
   3.691108384830194*^9, 3.691108384844342*^9}, 3.69110855844882*^9, {
   3.691162434128428*^9, 3.6911624376145887`*^9}, {3.691165259193399*^9, 
   3.69116531333857*^9}, {3.691170784687316*^9, 3.691170784705866*^9}, {
   3.6911844920771093`*^9, 3.691184506083955*^9}, {3.691184543087542*^9, 
   3.691184869867704*^9}, {3.691184901517408*^9, 3.691184982453807*^9}, {
   3.691185016936391*^9, 3.691185018542036*^9}, {3.691187000586645*^9, 
   3.691187097367346*^9}, 3.691187352826626*^9, 3.691189678442358*^9, {
   3.69118972529593*^9, 3.691189745896708*^9}, 3.6911899567312717`*^9, 
   3.6911905329056892`*^9, {3.6911909041481037`*^9, 3.6911909272743473`*^9}, {
   3.6911915032907*^9, 3.691191514376099*^9}, {3.691191655459311*^9, 
   3.691191660905697*^9}, {3.691192459676022*^9, 3.691192461521668*^9}, 
   3.6911926671532173`*^9, {3.691192732171939*^9, 3.6911927619791183`*^9}, {
   3.691192797616927*^9, 3.69119281008963*^9}, {3.691193993454647*^9, 
   3.69119401237532*^9}, {3.6912387141105213`*^9, 3.6912387504485483`*^9}, 
   3.691238817725787*^9, {3.6913466447964983`*^9, 3.6913466976751204`*^9}, 
   3.691346768195716*^9, {3.69134943074549*^9, 3.6913494761669807`*^9}, {
   3.691619122347864*^9, 3.691619123545745*^9}, {3.6916191651113777`*^9, 
   3.69161918110955*^9}, {3.691619213035741*^9, 3.6916192220318003`*^9}, {
   3.691619265847233*^9, 3.6916193631557093`*^9}, {3.691619426715089*^9, 
   3.691619582194633*^9}, {3.691619614032544*^9, 3.6916197616711206`*^9}, {
   3.6916198074684134`*^9, 3.691619910760448*^9}, {3.6916200039828*^9, 
   3.691620018617032*^9}, {3.691620209983103*^9, 3.691620355010838*^9}, {
   3.691620387511203*^9, 3.691620638439378*^9}, {3.691620679537183*^9, 
   3.691620698796571*^9}, {3.691620751729542*^9, 3.6916208157827*^9}, {
   3.691620866223737*^9, 3.691620961955102*^9}, {3.691621031004074*^9, 
   3.6916211140792437`*^9}, {3.691621202688745*^9, 3.691621258473289*^9}, {
   3.6916213222679033`*^9, 3.6916214153633833`*^9}, {3.6916214685384502`*^9, 
   3.69162206075952*^9}, {3.691622147402643*^9, 3.69162224402709*^9}, {
   3.691622274629278*^9, 3.691622388117031*^9}, {3.691622430160095*^9, 
   3.691622500040366*^9}, {3.691622530180078*^9, 3.69162263394518*^9}, {
   3.69162272884077*^9, 3.691623095917878*^9}, {3.691623158182355*^9, 
   3.691623341919158*^9}, {3.691623391454083*^9, 3.6916233933419228`*^9}, {
   3.691690720130065*^9, 3.6916907410515213`*^9}, {3.691690784824985*^9, 
   3.691690833517528*^9}, {3.691690865299103*^9, 3.691690866868834*^9}, {
   3.6916909723980722`*^9, 3.6916910597160883`*^9}, {3.69169110430298*^9, 
   3.6916911645396442`*^9}, {3.691691199216717*^9, 3.691691265862844*^9}, {
   3.69169129756851*^9, 3.6916913005183907`*^9}, {3.691691341540779*^9, 
   3.69169135698433*^9}, {3.691691404183031*^9, 3.691691444434626*^9}, {
   3.6916915163852587`*^9, 3.6916915633269367`*^9}, {3.691691652545977*^9, 
   3.691691700784278*^9}, {3.6916917389074497`*^9, 3.6916917910999737`*^9}, {
   3.69169182652103*^9, 3.691691827208766*^9}, {3.6916918657321568`*^9, 
   3.691692000055911*^9}, 3.691692037767359*^9, {3.6916968198093967`*^9, 
   3.691696828432233*^9}, {3.691696866049502*^9, 3.691696876002838*^9}, {
   3.691697448143045*^9, 3.691697450060754*^9}, {3.691698441982704*^9, 
   3.691698449392152*^9}, 3.6916987260928373`*^9, {3.691698789716948*^9, 
   3.691698793691825*^9}, {3.691699992073802*^9, 3.691700013303595*^9}, {
   3.691700047221971*^9, 3.691700079996254*^9}, {3.691700399886589*^9, 
   3.691700428999136*^9}, 3.691700804161604*^9, 3.6917009353888483`*^9, {
   3.691701351975751*^9, 3.691701369638299*^9}, {3.6917014883701267`*^9, 
   3.691701510245738*^9}, {3.691701758135697*^9, 3.691701823230007*^9}, {
   3.691701877373101*^9, 3.691701889305971*^9}, {3.691702064899274*^9, 
   3.691702144788375*^9}, {3.691702208491086*^9, 3.691702242845152*^9}, {
   3.691702441731718*^9, 3.6917024609153*^9}, {3.691702608706099*^9, 
   3.691702627814026*^9}, {3.691702814857513*^9, 3.6917028478114367`*^9}, {
   3.69170296665366*^9, 3.6917029667966433`*^9}, 3.691703214638547*^9, {
   3.69170338965217*^9, 3.691703408029749*^9}, {3.691703759969933*^9, 
   3.691703910050005*^9}, {3.691704357315938*^9, 3.6917043629283247`*^9}, {
   3.691704447481073*^9, 3.691704453551902*^9}, {3.691704665206128*^9, 
   3.691704738393385*^9}, {3.6917047999154243`*^9, 3.69170481539505*^9}, {
   3.6917049164256496`*^9, 3.6917049283960733`*^9}, {3.691705411845625*^9, 
   3.691705435424432*^9}, {3.691706024312407*^9, 3.691706041410658*^9}, {
   3.691706153025526*^9, 3.691706221979604*^9}, {3.6917063796902523`*^9, 
   3.691706386177301*^9}, {3.691706485400827*^9, 3.6917064918957376`*^9}, {
   3.691706552696*^9, 3.6917065970346947`*^9}, {3.691707045181465*^9, 
   3.6917070952812977`*^9}, {3.691707357298399*^9, 3.691707366065022*^9}, {
   3.6917074328103523`*^9, 3.691707519884851*^9}, 3.691707773869886*^9, {
   3.6917078376290216`*^9, 3.691707846090167*^9}, {3.6917079194261503`*^9, 
   3.691707960389214*^9}, {3.691708018393982*^9, 3.691708179234384*^9}, {
   3.691708255101763*^9, 3.6917082753851423`*^9}, {3.691708310553988*^9, 
   3.691708485330987*^9}, {3.691708516999538*^9, 3.691708527577738*^9}, {
   3.691708574809896*^9, 3.691708808128983*^9}, {3.691708879399397*^9, 
   3.691708881109161*^9}, {3.691708970608492*^9, 3.6917089825845613`*^9}, {
   3.691709032735952*^9, 3.6917090451053057`*^9}, 3.69170909584676*^9, {
   3.691709156997154*^9, 3.6917092328903427`*^9}, {3.691709283549612*^9, 
   3.691709329577991*^9}, 3.691709597661519*^9, {3.691709917249571*^9, 
   3.691709932840454*^9}, {3.691710099591851*^9, 3.69171016081443*^9}, {
   3.6917813061747828`*^9, 3.691781336135394*^9}, {3.691781905893354*^9, 
   3.6917819498885107`*^9}, {3.691782059373178*^9, 3.691782101720005*^9}, {
   3.69178242980579*^9, 3.691782430658231*^9}, {3.691782577391872*^9, 
   3.69178282845609*^9}, {3.6917828784155617`*^9, 3.69178296958751*^9}, {
   3.691784157046929*^9, 3.691784171701013*^9}, {3.691784208250478*^9, 
   3.691784268494217*^9}, {3.691784377345928*^9, 3.691784454260182*^9}, {
   3.691785861241477*^9, 3.691785892399961*^9}, {3.6917859914297113`*^9, 
   3.691786133609276*^9}, {3.691786761512298*^9, 3.691786769044132*^9}, {
   3.69178680428154*^9, 3.6917868092656927`*^9}, {3.6917868457998743`*^9, 
   3.691786876915346*^9}, {3.691786930445755*^9, 3.691787109905755*^9}, 
   3.691787146076046*^9, {3.6917918903637133`*^9, 3.691791895028263*^9}, 
   3.691864138465217*^9, {3.691864178447845*^9, 3.6918642614240294`*^9}, {
   3.691864314280423*^9, 3.691864332848571*^9}, {3.6918643925883303`*^9, 
   3.69186458447999*^9}, {3.6918855955672197`*^9, 3.691885609795807*^9}, {
   3.691960235880624*^9, 3.691960277660583*^9}, {3.6919633488443203`*^9, 
   3.6919634151352453`*^9}, 3.691963509289929*^9, {3.6919635560800323`*^9, 
   3.691963849368895*^9}, {3.691963945335637*^9, 3.691963996758793*^9}, {
   3.691964040598074*^9, 3.6919642480971746`*^9}, {3.691964299295141*^9, 
   3.691964317756186*^9}, {3.6919643572271137`*^9, 3.691964371351062*^9}, {
   3.691964462078627*^9, 3.691964469010771*^9}, {3.691964505473982*^9, 
   3.691964551401105*^9}, {3.691964700147852*^9, 3.691964714270238*^9}, 
   3.691964765354154*^9, {3.691964831982633*^9, 3.691964890580367*^9}, {
   3.691964972427051*^9, 3.691965008273418*^9}, 3.691965390142434*^9, {
   3.691965535683763*^9, 3.691965537218883*^9}, {3.6919656103465548`*^9, 
   3.691965610471467*^9}, {3.691970494033272*^9, 3.691970501139757*^9}, {
   3.691970547479467*^9, 3.691970586393201*^9}, {3.6919719830241423`*^9, 
   3.691972033613818*^9}, {3.691972068593614*^9, 3.691972125039908*^9}, {
   3.6919721823621273`*^9, 3.6919721904818363`*^9}, 3.69197230310515*^9, 
   3.691972345728516*^9, {3.692447649289019*^9, 3.692447652326179*^9}, {
   3.6924477230219927`*^9, 3.692447748856415*^9}, {3.6924479438283377`*^9, 
   3.6924479687534647`*^9}, 3.692448006317865*^9, {3.6924480427328863`*^9, 
   3.692448048644742*^9}, {3.692448154198873*^9, 3.6924482067484818`*^9}, {
   3.6924482583554783`*^9, 3.6924483266802597`*^9}, {3.692448401142524*^9, 
   3.6924484856254063`*^9}, {3.692448538640883*^9, 3.692448600442494*^9}, {
   3.6924488015291157`*^9, 3.6924488221622334`*^9}, {3.692448917003429*^9, 
   3.69244892148201*^9}, {3.692448962634309*^9, 3.692448966752129*^9}, {
   3.692450329598258*^9, 3.692450332585291*^9}, {3.692450431174185*^9, 
   3.692450432339942*^9}, {3.692450633974704*^9, 3.692450653681872*^9}, {
   3.692453219042562*^9, 3.692453221491519*^9}, {3.692454068130411*^9, 
   3.692454161563936*^9}, {3.692454199295353*^9, 3.692454203843739*^9}, {
   3.6924575209524317`*^9, 3.692457533686472*^9}, {3.692465120733327*^9, 
   3.6924651376721373`*^9}, 3.69246519779385*^9, {3.6924656719409323`*^9, 
   3.692465675259336*^9}, {3.6924666409955397`*^9, 3.6924666574915943`*^9}, {
   3.692466690692377*^9, 3.692466746394637*^9}, {3.69246796051506*^9, 
   3.692468000105192*^9}, {3.6924680940805283`*^9, 3.692468103394847*^9}, {
   3.692468209964491*^9, 3.692468224062688*^9}, {3.692485361788637*^9, 
   3.692485379173468*^9}, {3.692552181343501*^9, 3.692552184742218*^9}, {
   3.692552228991523*^9, 3.692552229606148*^9}, 3.692552311888756*^9, {
   3.692552657818406*^9, 3.692552685619437*^9}, 3.692552720082074*^9, {
   3.692553292259109*^9, 3.6925532946740313`*^9}, 3.692553825066975*^9, {
   3.6925586614601297`*^9, 3.6925587042893333`*^9}, {3.692561916073111*^9, 
   3.692561928257863*^9}, 3.692562208177814*^9, {3.692562735792757*^9, 
   3.692562736287281*^9}, 3.6925628694393883`*^9, {3.692563056947425*^9, 
   3.692563063850909*^9}, {3.6925633009036694`*^9, 3.692563338964587*^9}, 
   3.692564592357628*^9, {3.695772531243297*^9, 3.695772549512521*^9}, 
   3.69577320901786*^9, 3.695817231255636*^9, {3.69582890847761*^9, 
   3.6958289619793797`*^9}, {3.695845721039344*^9, 3.695845725812244*^9}, {
   3.695846196817499*^9, 3.695846197335943*^9}, {3.695849945616826*^9, 
   3.695849955760171*^9}, {3.6959143493700733`*^9, 3.695914379939509*^9}, {
   3.695914459737913*^9, 3.695914494782695*^9}, {3.695938699361771*^9, 
   3.695938700301414*^9}, {3.695940595964538*^9, 3.6959406055473213`*^9}, {
   3.6959408463412724`*^9, 3.6959408962660513`*^9}, {3.695940934929748*^9, 
   3.695940948549765*^9}, {3.695999350581571*^9, 3.6959993783339653`*^9}, {
   3.696015683177455*^9, 3.696015698801196*^9}, {3.696015795704211*^9, 
   3.6960158247794247`*^9}, {3.696098858977906*^9, 3.6960988641696463`*^9}, {
   3.69609908996027*^9, 3.696099095910396*^9}, {3.696099365956285*^9, 
   3.6960993692138023`*^9}, {3.6960994005056543`*^9, 
   3.6960994655004597`*^9}, {3.6960995856727448`*^9, 
   3.6960996441584797`*^9}, {3.696099681374023*^9, 3.696100289917819*^9}, {
   3.696100385378051*^9, 3.696100519665941*^9}, {3.696100557618184*^9, 
   3.696100619318768*^9}, {3.6961006534420013`*^9, 3.696100654669394*^9}, {
   3.6961079202848577`*^9, 3.6961079464077053`*^9}, {3.696108072528873*^9, 
   3.6961081002945213`*^9}, {3.6961094902465467`*^9, 3.696109532666628*^9}, {
   3.696198951519014*^9, 3.696198951529867*^9}, {3.696206140675846*^9, 
   3.696206152271223*^9}, {3.696206303928269*^9, 3.6962063189825363`*^9}, {
   3.6962063789391947`*^9, 3.6962063815097017`*^9}, {3.6962064520526*^9, 
   3.6962065921404343`*^9}, 3.696207111375762*^9, {3.696272994191226*^9, 
   3.696273083816949*^9}, {3.696273121099888*^9, 3.696273128559215*^9}, {
   3.6962731629345827`*^9, 3.696273171200124*^9}, {3.6962732177093678`*^9, 
   3.696273338056046*^9}, {3.69627337001744*^9, 3.696273393307851*^9}, {
   3.696273468446933*^9, 3.6962735779549503`*^9}, {3.69627364800111*^9, 
   3.696273700848666*^9}, {3.696273915795945*^9, 3.696273930575033*^9}, 
   3.696274095059104*^9, 3.696274131335472*^9, {3.696274254471304*^9, 
   3.69627426100101*^9}, {3.6962744410799522`*^9, 3.696274442634307*^9}, {
   3.696274495379098*^9, 3.696274496727165*^9}, {3.696274657255786*^9, 
   3.696274763011574*^9}, {3.696274797320148*^9, 3.696274805175572*^9}, {
   3.696275526550695*^9, 3.696275529215891*^9}, {3.6962761567773037`*^9, 
   3.696276161400321*^9}, {3.696617325563945*^9, 3.6966173635507193`*^9}, {
   3.6966173951424723`*^9, 3.6966173963251677`*^9}, {3.69661744511022*^9, 
   3.696617462214684*^9}, {3.696713967977241*^9, 3.696714032659342*^9}, {
   3.696720428600506*^9, 3.696720463964978*^9}, {3.696720660796727*^9, 
   3.696720687552085*^9}, {3.696720872179542*^9, 3.696720875261348*^9}, {
   3.696720965191297*^9, 3.6967209979224653`*^9}, {3.696721042380206*^9, 
   3.696721059453055*^9}, {3.696721091562389*^9, 3.696721127028336*^9}, 
   3.6967908156977253`*^9, {3.696790956020483*^9, 3.696790956680894*^9}, {
   3.6968847354827547`*^9, 3.696884746209524*^9}, {3.696894089292087*^9, 
   3.696894143580604*^9}, {3.69696789058985*^9, 3.696967894045889*^9}, {
   3.696967948443387*^9, 3.696967967404077*^9}, {3.697230069727665*^9, 
   3.697230073941134*^9}, {3.69723011026936*^9, 3.697230137287163*^9}, {
   3.6972308359207697`*^9, 3.697230893763961*^9}, {3.6972309541055737`*^9, 
   3.697230967004733*^9}, {3.6972310034883423`*^9, 3.697231296211484*^9}, {
   3.6972313316303368`*^9, 3.69723137974903*^9}, {3.6972314203040247`*^9, 
   3.697231507246801*^9}, {3.697231568613351*^9, 3.69723157213583*^9}, {
   3.705942357695615*^9, 3.705942377177475*^9}, 3.705942535664791*^9, {
   3.705942614003248*^9, 3.7059426167594433`*^9}, {3.705942733727934*^9, 
   3.705942762951365*^9}, {3.705942948769738*^9, 3.7059430422241373`*^9}, 
   3.7749790525414743`*^9, 3.7749791288759317`*^9, {3.77498426440799*^9, 
   3.7749842773059177`*^9}, {3.775074310534356*^9, 3.775074328493642*^9}, {
   3.7751406826596613`*^9, 3.775140684716153*^9}, {3.775140722557074*^9, 
   3.775140743829384*^9}, {3.775140931512882*^9, 3.775140936005377*^9}, {
   3.775141581206931*^9, 3.775141583204442*^9}, {3.7751669347782383`*^9, 
   3.775166937786929*^9}, {3.775344046631052*^9, 3.775344048702105*^9}, {
   3.77534430723908*^9, 3.7753443562460117`*^9}, {3.7753444589347067`*^9, 
   3.775344540765492*^9}, {3.775344627865532*^9, 3.77534467377811*^9}, {
   3.7754265019310293`*^9, 3.7754265195667458`*^9}, {3.775426577658333*^9, 
   3.775426703069434*^9}, {3.7754267695851803`*^9, 3.775426843987557*^9}, 
   3.7754269283812017`*^9, {3.7760053489791393`*^9, 3.7760053651129093`*^9}, {
   3.7760153183781424`*^9, 3.776015320154962*^9}, {3.776016150088235*^9, 
   3.776016160375454*^9}, {3.776016191228814*^9, 3.776016191239705*^9}, {
   3.77601713558751*^9, 3.776017241666635*^9}, {3.776022908555708*^9, 
   3.7760229319122467`*^9}, {3.776022980751068*^9, 3.776022991902215*^9}, {
   3.776023028654236*^9, 3.776023129185719*^9}, {3.776023173681177*^9, 
   3.776023322680859*^9}, {3.776023388891789*^9, 3.776023398788722*^9}, {
   3.776023442714044*^9, 3.776023480800116*^9}, {3.776023702479289*^9, 
   3.776023756891917*^9}, {3.77790749954084*^9, 3.7779075312594833`*^9}, {
   3.77790762261241*^9, 3.777907622869697*^9}, {3.77802259297158*^9, 
   3.778022619365082*^9}, {3.778022665987829*^9, 3.7780226732701187`*^9}, {
   3.778324692764329*^9, 3.7783247008479633`*^9}, {3.778324739602261*^9, 
   3.77832477416359*^9}, {3.778324809882266*^9, 3.778324812039544*^9}, 
   3.778324862785522*^9, {3.778324998562542*^9, 3.778325141262072*^9}, {
   3.778325253583791*^9, 3.778325274759429*^9}, {3.778325501540215*^9, 
   3.778325505091888*^9}, {3.7783264039084263`*^9, 3.7783264480153913`*^9}, 
   3.778364132321961*^9, {3.77836417572952*^9, 3.778364225369997*^9}, {
   3.77836430563734*^9, 3.778364373177628*^9}, 3.778364485708297*^9, {
   3.778364572109371*^9, 3.7783646017929163`*^9}, 3.778364644908793*^9, {
   3.7783647182262087`*^9, 3.77836472343435*^9}, {3.778840600919467*^9, 
   3.778840623157456*^9}, {3.778847918046465*^9, 3.7788479267462254`*^9}, {
   3.779021778393351*^9, 3.779021919588203*^9}, {3.7790219657630444`*^9, 
   3.7790220550612926`*^9}, {3.779033144685461*^9, 3.779033176308605*^9}, {
   3.779033207153097*^9, 3.7790332264925117`*^9}, {3.77903844309359*^9, 
   3.779038481925543*^9}, {3.779399082158093*^9, 3.779399091294886*^9}, {
   3.77940068981336*^9, 3.779400717541184*^9}, {3.779400788282703*^9, 
   3.779400891088526*^9}, {3.779400947030203*^9, 3.77940094924481*^9}, {
   3.7794009913432302`*^9, 3.7794009966318502`*^9}, {3.779401715299999*^9, 
   3.779401816830711*^9}, 3.7794023694172163`*^9, {3.779402813383905*^9, 
   3.779402821509956*^9}, {3.779659171516515*^9, 3.779659185480412*^9}, {
   3.779659227641555*^9, 3.7796592657653227`*^9}, {3.779748761180666*^9, 
   3.7797487987757072`*^9}, {3.779748828850589*^9, 3.779748888412958*^9}, {
   3.7797490262406588`*^9, 3.779749029175857*^9}, 3.779749353770829*^9, {
   3.779750612125226*^9, 3.7797506837866507`*^9}, {3.779784053894289*^9, 
   3.779784059352359*^9}, {3.779784357424487*^9, 3.7797843738077106`*^9}, {
   3.779784418234111*^9, 3.7797844705468693`*^9}, {3.779784659500654*^9, 
   3.779784821769238*^9}, {3.779784861932988*^9, 3.779785001338182*^9}, {
   3.779785031390669*^9, 3.779785065508596*^9}, {3.77978524768876*^9, 
   3.7797853336053457`*^9}, {3.779785435590613*^9, 3.779785481558854*^9}, {
   3.779785542630826*^9, 3.779785628259755*^9}, {3.779785846171414*^9, 
   3.779785912924954*^9}, {3.77978594789614*^9, 3.779785949068516*^9}, 
   3.779786344382976*^9, {3.779786518617371*^9, 3.779786556218956*^9}, {
   3.779786616721393*^9, 3.779786771902725*^9}, {3.7797871889904137`*^9, 
   3.779787191435142*^9}, {3.7797879095562*^9, 3.77978794292457*^9}, 
   3.77978797652516*^9, {3.779788011590412*^9, 3.779788022799203*^9}, {
   3.779788166698954*^9, 3.779788192752207*^9}, {3.779788251325697*^9, 
   3.779788282434606*^9}, {3.7797883726080513`*^9, 3.779788390177548*^9}, {
   3.779789001015567*^9, 3.7797890147007008`*^9}, {3.7797896286836157`*^9, 
   3.7797896312834272`*^9}, {3.779789967214788*^9, 3.7797899777032843`*^9}, {
   3.77996130098108*^9, 3.77996131833218*^9}, {3.779961386100628*^9, 
   3.7799614584694443`*^9}, {3.7799615244558764`*^9, 3.77996155715345*^9}, {
   3.7799615916051197`*^9, 3.779961740442281*^9}, {3.779961861328598*^9, 
   3.779961874739883*^9}, {3.779961931270194*^9, 3.77996194793361*^9}, {
   3.77996250635828*^9, 3.779962507674635*^9}, {3.779962929017551*^9, 
   3.77996293147901*^9}, {3.779963651194313*^9, 3.779963677094811*^9}, {
   3.779963961122649*^9, 3.77996399011941*^9}, {3.779964445837837*^9, 
   3.77996448404101*^9}, {3.779964545732489*^9, 3.779964618100909*^9}, {
   3.779964657051774*^9, 3.779964671612694*^9}, {3.7799647220083113`*^9, 
   3.779964945343018*^9}, {3.779964981987924*^9, 3.779965188658166*^9}, {
   3.7799652561621532`*^9, 3.7799652731280003`*^9}, {3.779965307476857*^9, 
   3.779965466164603*^9}, {3.779965525404662*^9, 3.7799657280477343`*^9}, {
   3.780526761867193*^9, 3.780526771876718*^9}, {3.780526810654435*^9, 
   3.780526883794386*^9}, 3.780527532559205*^9, {3.780592262052353*^9, 
   3.780592267164671*^9}, {3.78068059954193*^9, 3.780680772999035*^9}, 
   3.780680820415058*^9, {3.7806816291702557`*^9, 3.780681651602723*^9}, {
   3.780829105427206*^9, 3.780829124093433*^9}, {3.780829268348219*^9, 
   3.780829303762369*^9}, {3.7808296566061363`*^9, 3.780829679912457*^9}, {
   3.780829781984201*^9, 3.780829797886488*^9}, {3.78086807883046*^9, 
   3.780868515302*^9}, {3.78101998123403*^9, 3.7810200245492268`*^9}, {
   3.781908136120899*^9, 3.781908319347083*^9}, {3.7819083844834547`*^9, 
   3.781908529846258*^9}, 3.78190856158042*^9, {3.781908905770759*^9, 
   3.781908969504633*^9}, {3.781912114879883*^9, 3.7819122053690653`*^9}, {
   3.78191224350101*^9, 3.7819125552718697`*^9}, {3.781912592936454*^9, 
   3.781912619823279*^9}, {3.781912668372446*^9, 3.781912695107139*^9}, {
   3.781913526013289*^9, 3.781913545801496*^9}, {3.781957535131074*^9, 
   3.781957535277981*^9}, {3.781957722006687*^9, 3.781957868472694*^9}, {
   3.781957920081574*^9, 3.781958142027918*^9}, {3.781958196041072*^9, 
   3.781958361210781*^9}, {3.781958392775223*^9, 3.78195851381289*^9}, {
   3.7819617802552567`*^9, 3.781961847243408*^9}, {3.782084572743402*^9, 
   3.782084584657135*^9}, {3.782084619372216*^9, 3.78208475918661*^9}, {
   3.7823372588273983`*^9, 3.782337302473381*^9}, {3.782337350046248*^9, 
   3.782337364941646*^9}, {3.7823373974655447`*^9, 3.782337431629421*^9}, {
   3.782337473056582*^9, 3.782337476101652*^9}, {3.782337541336583*^9, 
   3.782337751880527*^9}, {3.782337802648109*^9, 3.782337878463172*^9}, {
   3.7823379161917133`*^9, 3.782337968903137*^9}, {3.78233801182449*^9, 
   3.7823380636987267`*^9}, {3.782338104735973*^9, 3.782338303404358*^9}, {
   3.782339672397394*^9, 3.7823396726737013`*^9}, {3.782339711760768*^9, 
   3.782339718557564*^9}, {3.782340203303588*^9, 3.7823402044793177`*^9}, 
   3.782340285225052*^9, {3.782340626657299*^9, 
   3.782340633921459*^9}},ExpressionUUID->"5b437657-c103-44f2-923e-\
4e6a07bccda2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["6 List Operations and Support", "Chapter",
 CellChangeTimes->{{3.691074300266736*^9, 
  3.691074310799621*^9}},ExpressionUUID->"0a8c74b9-4fd4-409f-9416-\
1e5362d89626"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Internal", " ", "function", " ", "used", " ", "only", " ", "by", " ", 
    "ClifToListG", " ", "to", " ", "fix", " ", "a", " ", "list", " ", 
    "sorting", " ", "error", " ", "that", " ", "could", " ", "occur", " ", 
    "with", " ", "its", " ", "terms"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClifAtomsG", "[", "freelist_", "]"}], ":=", 
    RowBox[{
     RowBox[{"AtomListToEijListG", "[", "freelist", "]"}], "/.", 
     RowBox[{"List", "\[Rule]", "Plus"}]}]}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Example", ".", " ", 
      RowBox[{"ClifAtomsG", "[", 
       RowBox[{"3", 
        SubscriptBox["b", 
         RowBox[{"1", ",", "2"}]], 
        SubscriptBox["e", "1"]}], "]"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["e", "1"], ".", "  ", 
       RowBox[{"ClifAtomsG", "[", 
        RowBox[{
         RowBox[{"-", "4"}], 
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"]}], "]"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["e", 
          RowBox[{"1", ",", "2"}]], ".", "  ", "Thus"}], " ", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], 
             SubscriptBox["e", "1"], 
             SubscriptBox["e", "2"]}], ",", " ", 
            RowBox[{"3", 
             SubscriptBox["b", 
              RowBox[{"1", ",", "2"}]], 
             SubscriptBox["e", "1"]}]}], "}"}], ",", " ", "ClifAtomsG"}], 
         "]"}]}], " ", "=", " ", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", 
           SubscriptBox["b", 
            RowBox[{"1", ",", "2"}]], 
           SubscriptBox["e", "1"]}], ",", " ", 
          RowBox[{
           RowBox[{"-", "4"}], 
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"]}]}], "}"}], " ", "because", " ", "of", " ", 
        "the", " ", "natural", " ", "sort", " ", "order", " ", "of", " ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["e", "1"], ",", " ", 
          SubscriptBox["e", 
           RowBox[{"1", ",", "2"}]]}], "}"}]}]}]}]}], " ", "*)"}], "\n", "\n",
    "\n", 
   RowBox[{
    RowBox[{"ClifToListG", "[", "clif_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "clif1", ",", "conTerm", ",", "freeTerm", ",", "conList", ",", 
        "freeList1", ",", "roundoffList", ",", "len", ",", "freeList2", ",", 
        "freeList", ",", "clifList1", ",", "clifList"}], "}"}], ",", "\n", 
      "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Optional", " ", 
         RowBox[{"output", ":", " ", "conTerm"}]}], ",", " ", "freeTerm"}], 
       " ", "*)"}], "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"\n", "\t", 
                RowBox[{
                 RowBox[{"INPUT", ":", " ", 
                  RowBox[{"A", " ", "clif", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"i", ".", "e"}], ",", " ", 
                    RowBox[{"a", " ", "multivector"}]}], ")"}], "\n", "\n", 
                   "\t", "PROCESS"}], ":", " ", 
                  RowBox[{
                  "Separate", " ", "the", " ", "constant", " ", "term", 
                   RowBox[{"(", "s", ")"}], " ", "from", " ", "the", " ", 
                   "free", " ", "terms", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"i", ".", "e", "."}], ",", " ", 
                    RowBox[{"terms", " ", "containing", " ", 
                    RowBox[{
                    SubscriptBox["e", "i"], "'"}], "s"}]}], ")"}], " ", "\n", 
                   "\t", "and", " ", "then", " ", "mmake", " ", "a", " ", 
                   "list", " ", "where", " ", "the", " ", "constant", " ", 
                   "terms"}]}], ",", " ", 
                 RowBox[{"if", " ", "any"}], ",", " ", 
                 RowBox[{
                 "constitute", " ", "a", " ", "single", " ", "term", " ", 
                  RowBox[{"(", 
                   RowBox[{"the", " ", "1", "st", " ", "term"}], ")"}], " ", 
                  "and", " ", "the", " ", "\n", "\t", "free", " ", "terms", 
                  " ", "are", " ", "listed", " ", "in", " ", "the", " ", 
                  "nastural", " ", "order", " ", "of", " ", "the", " ", 
                  RowBox[{"atoms", ".", " ", "An"}], " ", "atom", " ", "will",
                   " ", "be", " ", "repeated", " ", "for", " ", "each", " ", 
                  "different", " ", "\n", "\t", "coefficient"}]}], ")"}], ".",
                " ", "\n", "\t", "\n", "\t", 
               RowBox[{"List", "[", "conTerm"}]}], "}"}], " ", "is", " ", 
             "sufficient", " ", "to", " ", "make", " ", "a", " ", "list", " ",
              "that", " ", "groups", " ", "all", " ", "the", " ", "contstant",
              " ", "terms", " ", "into", " ", "a", " ", "single", " ", "\n", 
             "\t", "list", " ", 
             RowBox[{"element", ".", " ", 
              RowBox[{"List", "[", "freeTerm", "]"}]}], " ", "will", " ", 
             "fail", " ", "when", " ", "freeTerm", " ", "has", " ", "just", 
             " ", "a", " ", "single", " ", 
             RowBox[{"term", ".", " ", "FreeTerm"}]}], " ", "/.", 
            RowBox[{"Plus", "->", 
             RowBox[{"List", " ", "and", " ", "\n", "\t", 
              RowBox[{"List", "@@", "freeTerm"}], " ", "also", " ", "fail", 
              " ", "for", " ", "some", " ", 
              RowBox[{"expressions", ".", " ", "\n", "\t", "\n", "\t", "To"}],
               " ", "get", " ", "around", " ", "this", " ", "I", " ", "have", 
              " ", "addeded", " ", "an", " ", 
              SubscriptBox["e", "1"], " ", "and", " ", 
              SubscriptBox["e", "2"], " ", "term", " ", "with", " ", 
              RowBox[{"a", " ", "'"}], 
              RowBox[{"garbage", "'"}], " ", 
              RowBox[{"coefficient", ".", " ", "This"}], " ", "way", " ", 
              "the", " ", "\n", "\t", "freeTerm", " ", "is", " ", "never", 
              " ", "a", " ", "single", " ", 
              RowBox[{"term", ".", " ", "I"}], " ", "remove", " ", "the", " ",
               "garbage", " ", "terms", " ", "from", " ", "the", " ", "final",
               " ", 
              RowBox[{"list", ".", "\n", "\t", "\n", "\t ", "The"}], " ", 
              "free", " ", "terms", " ", "under", " ", "some", " ", 
              "circumstances", " ", 
              RowBox[{"don", "'"}], "t", " ", "get", " ", "sorted", " ", 
              "automatically", " ", "to", " ", "the", " ", "natural", " ", 
              "atom", " ", 
              RowBox[{"order", ".", " ", "As"}], "\n", "\t ", "explained", 
              " ", "above"}]}]}], ",", " ", 
           RowBox[{"the", " ", "ClifAtomG", " ", "command", " ", 
            RowBox[{"allows", " ", "'"}], 
            RowBox[{"SortBy", "'"}], " ", "to", " ", "correct", " ", "the", 
            " ", "ordering", " ", "of", " ", "the", " ", "clif", " ", 
            RowBox[{"terms", ".", " ", "\n", "\t", "\n", "\t\t\t ", 
             RowBox[{"Clif1", ":", " ", 
              RowBox[{
              "Expand", " ", "the", " ", "list", " ", "to", " ", "simplify", 
               " ", "later", " ", 
               RowBox[{"multiplications", ".", "\n", "\t\t\t\t", "Want"}], 
               " ", "coefficients", " ", "of", " ", "blades", " ", "to", " ", 
               "be", " ", "single", " ", "terms", " ", 
               RowBox[{"(", 
                RowBox[{"not", " ", "sums"}], ")"}]}]}]}]}], ",", " ", 
           RowBox[{
           "to", " ", "greatly", " ", "reduce", " ", "the", " ", "\n", 
            "\t\t\t\t", "number", " ", "of", " ", "ways", " ", "a", " ", 
            "product", " ", "could", " ", "be", " ", "simplified"}], ",", " ", 
           RowBox[{
            RowBox[{
            "thus", " ", "simplifying", " ", "the", " ", "code", " ", 
             "greatly", "\n", "\t\t\t ", "\n", "\t\t\t ", 
             RowBox[{"contTerm", ":", " ", 
              RowBox[{"Find", " ", "the", " ", "constant", " ", "term", 
               RowBox[{"(", "s", ")"}], " ", "by", " ", "setting", " ", "all",
                " ", "other", " ", "terms", " ", "to", " ", "zero", "\n", 
               "\t\t\t       ", "This", " ", "solves", " ", "the", " ", 
               "problem", " ", "of", " ", "collecting", " ", "constant", " ", 
               "terms", " ", "even", " ", "when", " ", "they", " ", "are", 
               " ", "not", " ", "contiguous", "\n", "\t\t\t       ", 
               "conTerm"}]}]}], " ", "=", " ", 
            RowBox[{
            "0", " ", "if", " ", "there", " ", "are", " ", "no", " ", 
             "constant", " ", "terms", "\n", "\t\t\t ", 
             RowBox[{"freeTerm", ":", " ", 
              RowBox[{
               RowBox[{
               "The", " ", "free", " ", "term", " ", "is", " ", "clif1"}], 
               " ", "-", " ", 
               RowBox[{"conTermc", "\n", "\t\t\t ", 
                RowBox[{"conList", ":", " ", 
                 RowBox[{
                 "A", " ", "list", " ", "with", " ", "the", " ", "sum", " ", 
                  "of", " ", "all", " ", "the", " ", 
                  "constants"}]}]}]}]}]}]}], ",", " ", 
           RowBox[{"if", " ", "any"}], ",", " ", 
           RowBox[{"as", " ", "its", " ", "only", " ", 
            RowBox[{"element", ".", " ", "Empty"}], " ", 
            RowBox[{"otherwise", ".", "\n", "\t\t\t ", 
             RowBox[{"freeList1", ":", " ", 
              RowBox[{
              "The", " ", "initial", " ", "list", " ", "of", " ", "the", " ", 
               "free", " ", 
               RowBox[{"terms", ".", " ", "This"}], " ", "is", " ", "mostly", 
               " ", "or", " ", "completely", " ", "sorted", " ", "by", " ", 
               RowBox[{"atoms", ".", "\n", "\t\t\t ", "roundoffList"}]}], ":",
               " ", 
              RowBox[{
              "If", " ", "numerical", " ", "precision", " ", "has", " ", 
               "been", " ", "implemented"}]}]}]}], ",", " ", 
           RowBox[{
           "the", " ", "first", " ", "term", " ", "of", " ", "freeList1", " ",
             "will", " ", "\n", "\t\t\t    ", "be", " ", "roundoff", " ", 
            "of", " ", "the", " ", "precision", " ", "amount", " ", 
            RowBox[{"set", ".", " ", "For"}], " ", "example"}], ",", " ", 
           RowBox[{"N", "[", 
            RowBox[{"clif", ",", "4"}]}]}], "}"}], " ", "\[Rule]", " ", 
         RowBox[{"0.", 
          SuperscriptBox["x10", 
           RowBox[{"-", "4"}]], " ", 
          RowBox[{"roundoff", ".", " ", "If"}], "\n", "\t\t\t    ", "there", 
          " ", "is", " ", "no", " ", "roundoff"}]}], ",", " ", 
        RowBox[{"this", " ", "list", " ", "will", " ", "be", " ", 
         RowBox[{"empty", ".", " ", "To"}], " ", "get", " ", "rid", " ", "of",
          " ", "the", " ", "possible", " ", "roundoff", " ", "term"}], ",", 
        "\n", "\t\t\t    ", 
        RowBox[{
        "we", " ", "test", " ", "on", " ", "the", " ", "length", " ", "of", 
         " ", "this", " ", 
         RowBox[{"list", ".", "\n", "\t\t\t ", 
          RowBox[{"freeList2", ":", " ", 
           RowBox[{
           "The", " ", "initial", " ", "free", " ", "list", " ", "without", 
            " ", "any", " ", "roundoff", " ", 
            RowBox[{"term", ".", "\n", "\t\t\t ", "freeList"}]}], ":", " ", 
           RowBox[{"The", " ", "final"}]}]}]}], ",", " ", 
        RowBox[{"sorted", " ", "list", " ", "of", " ", "free", " ", 
         RowBox[{"terms", ".", " ", "The"}], " ", "equation", " ", "uses", 
         " ", "the", " ", "local", " ", "function", " ", 
         RowBox[{"ClifAtomsG", ".", "\n", "\t\t\t ", 
          RowBox[{"clifList1", ":", " ", 
           RowBox[{
           "The", " ", "union", " ", "of", " ", "conList", " ", "with", " ", 
            "freeList", "\n", "\t\t\t ", "The", " ", "\"\<if test\>\"", " ", 
            "for", " ", "zero"}], ":", " ", "\n", "\t\t\t     ", 
           RowBox[{
           "If", " ", "user", " ", "has", " ", "set", " ", "any", " ", 
            "precision", " ", "for", " ", "any", " ", "symbol"}]}]}]}], ",", 
        " ", 
        RowBox[{
        "then", " ", "0", " ", "receives", " ", "Machine", " ", "Precision", 
         " ", "\n", "\t\t\t     ", "Thus"}], ",", " ", 
        RowBox[{
         RowBox[{
         "IF", " ", "TEST", " ", "for", " ", "0", " ", "must", " ", "also", 
          " ", "test", " ", "for", " ", "0", " ", 
          RowBox[{"(", 
           RowBox[{"machine", " ", "precision"}], ")"}], "\n", "\t\t\t ", 
          RowBox[{"clifList", ":", " ", 
           RowBox[{"If", " ", "the", " ", "entire", " ", "clif"}]}]}], " ", 
         "=", " ", 
         RowBox[{"0", " ", 
          RowBox[{"(", 
           RowBox[{"or", " ", "0."}], ")"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"then", " ", "clifList"}], " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "0", "}"}], "\n", "\t\t\t      ", "Else", "\n", 
           "\t\t\t           ", "clifList"}], " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"clifList1", " ", "except"}], "..."}], ".", "\n", 
            "\t\t\t                ", "If"}], " ", "there", " ", "is", " ", 
           "no", " ", "constant", " ", "term"}]}]}], ",", " ", 
        RowBox[{"0.", " ", "\[Rule]", " ", 
         RowBox[{
         "0", " ", "makes", " ", "sure", " ", "it", " ", "is", " ", "0"}]}], 
        ",", " ", 
        RowBox[{
         RowBox[{"and", " ", "'"}], 
         RowBox[{"Except", "'"}], " ", "deletes", " ", "it", "\n", 
         "\t\t\t                ", "The", " ", "garbage", " ", "terms", " ", 
         "are", " ", "removed", "\t\t\t ", "\n", "\n", "\t", 
         RowBox[{"OUTPUT", ":", "  ", "clifList"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "a", " ", "list", " ", "of", " ", "the", " ", "separate", " ", 
           "elements", " ", "of", " ", "the", " ", "clif", " ", 
           RowBox[{"(", 
            RowBox[{"directly", " ", "returned"}], ")"}], "\n", "\t\t\t ", 
           SqrtBox["2"], 
           SubscriptBox["e", "2"], 
           SubscriptBox["e", "3"]}], " ", "+", " ", 
          RowBox[{"3", 
           SubscriptBox["e", "2"], 
           SubscriptBox["e", "3"]}]}], " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], 
            SubscriptBox["e", "2"], 
            SubscriptBox["e", "3"]}], ",", " ", 
           RowBox[{"3", " ", 
            SubscriptBox["e", "2"], 
            SubscriptBox["e", "3"]}]}], "}"}]}]}], "\t\t\t   ", "*)"}], "\n", 
      "\n", "\n", "\t", 
      RowBox[{
       RowBox[{"clif1", " ", "=", " ", 
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"Global`x34uv0W42", " ", 
           SubscriptBox["e", "1"]}], " ", "+", " ", 
          RowBox[{"Global`x34uv0W42", " ", 
           SubscriptBox["e", "2"]}], " ", "+", " ", "clif"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"conTerm", " ", "=", " ", 
        RowBox[{"clif1", " ", "/.", " ", 
         RowBox[{
          SubscriptBox["e", "__"], "\[Rule]", "0"}]}]}], ";", "\n", "\t", 
       RowBox[{"freeTerm", " ", "=", " ", 
        RowBox[{"clif1", " ", "-", " ", "conTerm"}]}], ";", "\n", "\t", 
       RowBox[{"conList", " ", "=", " ", 
        RowBox[{"List", "[", "conTerm", "]"}]}], ";", "\n", "\t", 
       RowBox[{"freeList1", "=", " ", 
        RowBox[{"List", " ", "@@", " ", "freeTerm"}]}], ";", "\n", "\t", 
       RowBox[{"roundoffList", "=", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"freeList1", "/.", 
           RowBox[{
            SubscriptBox["e", "__"], "\[Rule]", "0"}]}], ",", 
          RowBox[{"Except", "[", "0", "]"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"len", "=", 
        RowBox[{"Length", "[", "roundoffList", "]"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"len", ">", "0"}], ",", "\n", "\t\t", 
         RowBox[{"freeList2", "=", 
          RowBox[{"Cases", "[", 
           RowBox[{"freeList1", ",", 
            RowBox[{"Except", "[", 
             RowBox[{"roundoffList", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], ",", "\n", 
         "\t\t", 
         RowBox[{"freeList2", "=", "freeList1"}]}], "\n", "\t", "]"}], ";", 
       "\n", "\t", 
       RowBox[{"freeList", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{"freeList2", ",", "ClifAtomsG"}], "]"}]}], ";", " ", "\n", 
       "\t", 
       RowBox[{"clifList1", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Append", "[", 
          RowBox[{"conList", ",", " ", "freeList"}], "]"}], "]"}]}], ";", 
       "\n", "\n", "\t", 
       RowBox[{"If", " ", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"clif", " ", "===", " ", "0"}], " ", "||", " ", 
          RowBox[{"clif", " ", "===", " ", "0."}]}], ",", " ", 
         RowBox[{"clifList", " ", "=", " ", 
          RowBox[{"{", "0", "}"}]}], ",", " ", "\n", "    ", 
         RowBox[{"clifList", " ", "=", " ", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"clifList1", " ", "//.", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.", "\[Rule]", "0"}], ",", " ", 
               RowBox[{"Global`x34uv0W42", " ", "->", " ", "0"}]}], "}"}]}], 
            ",", " ", 
            RowBox[{"Except", "[", "0", "]"}]}], "]"}]}]}], "]"}], ";", "\n", 
       "\t", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"debug9", "\[Equal]", "True"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Print", "[", "]"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<ClifToListG: Expanded clif = \>\"", ",", "clif1"}], 
           "]"}], ";", "\n", "\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Constant term = \>\"", ",", "conTerm"}], "]"}], ";", 
          "\n", "\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Free term = \>\"", ",", " ", "freeTerm"}], "]"}], ";",
           "\n", "\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Constant List = \>\"", ",", "conList"}], "]"}], ";", 
          "\n", "\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Initial Free List = \>\"", ",", "freeList1"}], "]"}], 
          ";", "\n", "\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Roundoff list = \>\"", ",", "roundoffList"}], "]"}], 
          ";", "\n", "\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Free list without roundoff, if any: \>\"", ",", "freeList2"}],
            "]"}], ";", "\n", "\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Free List = \>\"", ",", "freeList"}], "]"}], ";", 
          "\n", "\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Prepend all the constants, if any, as a single term (possibly \
0): \>\"", ",", "clifList1"}], "]"}], ";", "\n", "\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<clifList has garbage and zero term, if any, removed: \>\"", 
            ",", "clifList"}], "]"}], ";"}]}], "\n", "\t\t", "]"}], ";", " ", 
       "\n", "\n", "\t", "clifList"}]}], "\n", "]"}]}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"End", " ", "of", " ", "ClifToListG"}], "  ", "*)"}], "\n", "\n", 
   
   RowBox[{
    RowBox[{"EijListG", "[", "0", "]"}], ":=", 
    RowBox[{"{", "0", "}"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"EijListG", "[", "clif_", "]"}], ":=", " ", 
    RowBox[{"(*", "\n", "\t", 
     RowBox[{
      RowBox[{"INPUT", ":", " ", "clif"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"A", " ", "multivector", "\n", "\t", 
        RowBox[{"PROCESS", ":", "\n", "\t", "OUTPUT", ":", " ", "eList"}]}], 
       " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"list", " ", "of", " ", 
            SubscriptBox["e", 
             RowBox[{"i", ",", "j", ",", "..."}]], "corresponding", " ", "to",
             " ", 
            SubscriptBox["e", "i"], 
            SubscriptBox["e", "j"]}], "..."}], " ", "terms", " ", "in", " ", 
          "clif", "\n", "\t\t\t", "1", "st", " ", "term", " ", "is", " ", 
          "replaced", " ", "by", " ", "0", " ", "if", " ", "constant", " ", 
          "term", " ", "of", " ", "clif", " ", "is", " ", "non"}], "-", 
         RowBox[{"zero", " ", "\n", "\t\t\t", "eList"}]}], " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", " ", "0", " ", "}"}], " ", "if", " ", "clif"}], " ", 
         "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"0", "\n", "\t\t\t", 
            RowBox[{"Example", ":", " ", 
             RowBox[{"5", " ", "+", " ", 
              RowBox[{
               SqrtBox["5"], 
               SubscriptBox["e", "1"], 
               SubscriptBox["e", 
                RowBox[{"2", " "}]]}], "+", " ", 
              RowBox[{"3", " ", 
               SubscriptBox["e", "1"], 
               SubscriptBox["e", "2"]}]}]}]}], " ", "\[Rule]", " ", "eList"}],
           " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", 
            RowBox[{
             SubscriptBox["e", 
              RowBox[{"1", ",", "2"}]], " ", 
             SubscriptBox["e", 
              RowBox[{"1", ",", "2"}]]}]}], "}"}]}]}]}]}]}], "  ", "*)"}], 
    "\n", "\n", "\t", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"clifList", ",", "eList", ",", "const"}], "}"}], ",", "\n", 
      "\t\t", 
      RowBox[{
       RowBox[{"clifList", "=", 
        RowBox[{
         RowBox[{"ClifToListG", "[", "clif", "]"}], "/.", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["e", "u_"], "2"], "\[Rule]", 
          SubscriptBox["e", 
           RowBox[{"u", ",", "u"}]]}]}]}], ";", " ", "\n", "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Reduce", " ", "square", " ", "terms"}], ",", " ", 
         RowBox[{"if", " ", 
          RowBox[{"any", ".", " ", 
           RowBox[{"Example", ":", " ", 
            RowBox[{
             SubsuperscriptBox["e", "3", "2"], 
             SubsuperscriptBox["e", "4", "2"], " ", "changes", " ", "to", " ", 
             SubscriptBox["e", 
              RowBox[{"3", ",", "3"}]], " ", 
             SubscriptBox["e", 
              RowBox[{"4", ",", "4"}]], "  ", "\n", "\t\t\t", "Note"}], ":", 
            " ", 
            RowBox[{
            "The", " ", "only", " ", "time", " ", "there", " ", "may", " ", 
             "be", " ", "square", " ", "terms", " ", "is", " ", "during", " ",
              "computation", " ", "of", " ", "geometric", " ", 
             "product"}]}]}]}]}], " ", "*)"}], "\n", "\t\t", 
       RowBox[{"const", "=", 
        RowBox[{"ConstantG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"eList", "=", 
        RowBox[{"AtomListToEijListG", "[", 
         RowBox[{"ConstantToZeroG", "[", 
          RowBox[{"clifList", ",", "const"}], "]"}], "]"}]}], ";", "\n", "\n",
        "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "AtomListToEijList", " ", "changes", " ", "clif", " ", "list", " ", 
           "into", " ", "a", " ", 
           SubscriptBox["e", 
            RowBox[{"i", ",", 
             RowBox[{"j", "..."}]}]]}], "-", 
          RowBox[{
          "subscript", " ", "list", "\n", "\t\t\t", "ConstantToZeroG", " ", 
           "changees", " ", "the", " ", "1", "st", " ", "element", " ", "in", 
           " ", "the", " ", "list", " ", "to", " ", "0", " ", "if", " ", 
           "constant", " ", "term"}]}], " ", "\[NotEqual]", " ", "0"}], 
        "    ", "*)"}], "\n", "\t\t", "eList"}]}], "\n", "\t", "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"End", " ", "of", " ", "EijListG"}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"AtomListG", "[", "0", "]"}], ":=", 
    RowBox[{"{", "1", "}"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"AtomListG", "[", "clif_", "]"}], ":=", "\n", 
    RowBox[{"(*", "  ", 
     RowBox[{
      RowBox[{"INPUT", ":", " ", 
       RowBox[{"A", " ", "clif", "\n", "\t", "OUTPUT"}], ":", " ", 
       RowBox[{
       "A", " ", "list", " ", "of", " ", "the", " ", "atoms", " ", "of", " ", 
        "clif"}]}], ",", " ", 
      RowBox[{"1", "-", 
       RowBox[{"1", " ", "matching", " ", "ClifToListG", " \t", "\n", "\t", 
        RowBox[{"Note", ":", " ", 
         RowBox[{"Unlike", " ", "EijListG"}]}]}]}], ",", " ", 
      RowBox[{
       RowBox[{
       "1", "st", " ", "term", " ", "equals", " ", "1", " ", "if", " ", 
        "clif", " ", "constant", " ", "is", " ", "non"}], "-", "zero"}]}], 
     " ", "*)"}], "\n", "\t", "\n", "\t", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "atomList", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"atomList", "=", 
        RowBox[{
         RowBox[{"EijListG", "[", "clif", "]"}], " ", "//.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["e", 
             RowBox[{"u_", ",", "v__"}]], "\[Rule]", 
            RowBox[{
             SubscriptBox["e", "u"], " ", 
             SubscriptBox["e", "v"]}]}], ",", 
           RowBox[{
            SubscriptBox["e", 
             RowBox[{
              RowBox[{"u_v", "_"}], ",", "w__"}]], "\[Rule]", 
            RowBox[{
             SubscriptBox["e", "uv"], " ", 
             SubscriptBox["e", "w"]}]}]}], "}"}]}]}], ";", " ", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ConstantG", "[", "clif", "]"}], "===", "0"}], "||", 
          RowBox[{
           RowBox[{"ConstantG", "[", "clif", "]"}], "===", "0."}]}], ",", ",", 
         RowBox[{"atomList", "=", 
          RowBox[{"ReplacePart", "[", 
           RowBox[{"atomList", ",", 
            RowBox[{"1", "\[Rule]", "1"}]}], "]"}]}]}], "]"}], ";", "\n", 
       "\t", "atomList"}]}], "\n", "\t", "]"}]}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"End", " ", "of", " ", "AtomListG", " ", "module"}], " ", "*)"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"AtomListToEijListG", "[", "list_", "]"}], ":=", 
    RowBox[{"list", "//.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["e", "u__"], 
         SubscriptBox["e", "v__"]}], "->", 
        SubscriptBox["e", 
         RowBox[{"u", ",", "v"}]]}], ",", 
       RowBox[{
        RowBox[{"w_", " ", 
         SubscriptBox["e", "u__"]}], "\[Rule]", 
        SubscriptBox["e", "u"]}], ",", 
       RowBox[{
        SubscriptBox["e", "u__"], "\[RuleDelayed]", 
        RowBox[{"Subscript", "[", 
         RowBox[{"e", ",", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"Sort", "[", 
            RowBox[{"List", "[", "u", "]"}], "]"}]}]}], "]"}]}]}], "}"}]}]}], 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
       "The", " ", "repeated", " ", "replace", " ", "changes", " ", "clif", 
        " ", "list", " ", "into", " ", "a", " ", 
        SubscriptBox["e", 
         RowBox[{"i", ",", "j", ",", "..."}]], " ", "subscript", " ", "list", 
        "\n", "\t", "But"}], "..."}], " ", "Mathematica", " ", "replaces", 
      " ", 
      SubscriptBox["e", "1"], 
      SubscriptBox["e", "2"], 
      SubscriptBox["e", "3"], " ", "by", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["e", 
         RowBox[{"3", ",", "1", ",", "2"}]], " ", "!!"}], "!"}], "\n", "\t", 
      "Thus"}], ",", " ", 
     RowBox[{"we", " ", "sort", " ", 
      RowBox[{"List", "[", 
       RowBox[{"3", ",", "1", ",", "2"}], "]"}], " ", "to", " ", "get", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], " ", "and", " ", "then", " ",
       "use", " ", "Sequence", " ", "to", " ", "move", " ", "it", " ", "into",
       " ", "a", " ", "subscript", " ", "of", " ", "e"}]}], "  ", "*)"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"EijListToAtomListG", "[", "list_", "]"}], ":=", 
    RowBox[{"list", " ", "//.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["e", 
         RowBox[{"u_", ",", "v__"}]], "\[Rule]", 
        RowBox[{
         SubscriptBox["e", "u"], " ", 
         SubscriptBox["e", "v"]}]}], ",", 
       RowBox[{
        SubscriptBox["e", 
         RowBox[{
          RowBox[{"_", " ", "u_v"}], ",", "w__"}]], "\[Rule]", 
        RowBox[{
         SubscriptBox["e", "uv"], " ", 
         SubscriptBox["e", "w"]}]}]}], "}"}]}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CoeffListG", "[", "clif_", "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"atomList", ",", "atomCoefList"}], "}"}], ",", "\n", "\n", 
       RowBox[{"(*", "  ", 
        RowBox[{
         RowBox[{"INPUT", ":", " ", 
          RowBox[{"A", " ", "Clif", "\n", "\t", "PROCESS"}], ":", " ", 
          RowBox[{
          "atomList", " ", "is", " ", "a", " ", "list", " ", "of", " ", "the",
            " ", "atoms"}]}], ",", " ", 
         RowBox[{"1", "-", 
          RowBox[{"1", " ", "matching", " ", 
           RowBox[{"ClifToListG", "[", "clif", "]"}], "\n", "\t", 
           RowBox[{"OUTPUT", ":", " ", 
            RowBox[{
            "atomCoefList", " ", "is", " ", "a", " ", "list", " ", "of", " ", 
             "the", " ", "coefficients", " ", "of", " ", 
             RowBox[{"clif", ".", " ", "The"}], " ", "list", " ", "matches", 
             " ", "ClifToListG"}]}]}]}]}], "\n", "*)"}], "\n", "\t", 
       RowBox[{
        RowBox[{"clifList", "=", 
         RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", "\t", 
        RowBox[{"atomCoefList", "=", 
         RowBox[{"clifList", " ", "/.", " ", 
          RowBox[{
           SubscriptBox["e", "u_"], "\[Rule]", "1"}]}]}]}]}], "\n", "\t", 
      "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"End", " ", "of", " ", "CoeffListG", " ", "module"}], " ", "*)"}],
    "\n", "\n", 
   RowBox[{
    RowBox[{"ConstantToZeroG", "[", 
     RowBox[{"list_", ",", "const_"}], "]"}], ":=", "  ", 
    RowBox[{"(*", "\n", "\t", 
     RowBox[{
      RowBox[{"INPUT", ":", " ", "Clif"}], ",", " ", 
      RowBox[{
       RowBox[{
       "a", " ", "list", " ", "of", " ", "clif", " ", "subscripts", " ", "or",
         " ", "e"}], "-", "subscripts"}], ",", " ", 
      RowBox[{
      "and", " ", "the", " ", "constant", " ", "term", " ", "of", " ", "the", 
       " ", "clif", "\n", "\t", 
       RowBox[{"PROCESS", ":", " ", 
        RowBox[{
        "This", " ", "is", " ", "an", " ", "internal", " ", "function"}]}]}], 
      ",", " ", 
      RowBox[{
       RowBox[{
       "used", " ", "by", " ", "GradeListG", " ", "and", " ", "EijListG", 
        "\n", "\t", 
        RowBox[{"OUTPUT", ":", " ", "list1"}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{
        "Clif", " ", "list", " ", "with", " ", "1", "st", " ", "term", " ", 
         "replaced", " ", "by", " ", "0", " ", "if", " ", "constant", " ", 
         "is", " ", "non"}], "-", "zero"}]}]}], "  ", "*)"}], "\n", "\n", 
    "\t", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "list1", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"const", "===", "0"}], "||", 
          RowBox[{"const", "===", "0."}]}], ",", 
         RowBox[{"list1", "=", "list"}], ",", 
         RowBox[{"list1", "=", 
          RowBox[{"ReplacePart", "[", 
           RowBox[{"list", ",", 
            RowBox[{"1", "->", "0"}]}], "]"}]}]}], "]"}], ";", "\n", "\t", 
       "list1"}]}], "]"}]}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Sends", " ", "constant", " ", "term", " ", "of", " ", "list"}], 
     ",", " ", 
     RowBox[{"if", " ", "any"}], ",", " ", 
     RowBox[{"to", " ", "0"}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"GradeListG", "[", "clif_", "]"}], ":=", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"User", "'"}], "s", " ", "Clif", " ", "is", " ", 
        SubscriptBox["c", "0"]}], " ", "+", " ", 
       RowBox[{
        SubscriptBox["c", "1"], " ", 
        SubscriptBox["e", "1"]}], " ", "+", " ", 
       RowBox[{
        SubscriptBox["c", 
         RowBox[{"1", ",", "2"}]], " ", 
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"]}], " ", "+"}], " ", "..."}], "  ", "*)"}], 
    "\n", "\n", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"INPUTS", ":", "\n", "\t", "clifc"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"a", " ", "Clif", "\n", "\n", "\t", 
         RowBox[{"PROCESS", ":", "\n", "\t", 
          RowBox[{
          "This", " ", "function", " ", "is", " ", "called", " ", "by", " ", 
           "pSliceG", " ", "and", " ", "ReverseG", "\n", "\t", "It", " ", 
           "creates", " ", "a", " ", "list", " ", "of", " ", "the", " ", 
           "grades", " ", "of", " ", "the", " ", "terms", "\n", "\t", "The", 
           " ", "process", " ", "starts", " ", "by", " ", "grabbing", " ", 
           "the", " ", "subscript", " ", "list", " ", "using", " ", 
           "SubscriptListG", "\n", "\t", "The", " ", "length", " ", "of", " ", 
           SubscriptBox["e", 
            RowBox[{"i", ",", "j", ",", "..."}]]}]}]}], " ", "=", " ", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{
         "#", " ", "of", " ", "subscripts", " ", "since", " ", "base", " ", 
          "e", " ", "is", " ", "part", " ", "of", " ", "the", " ", "length", 
          "\n", "\t", "The", " ", "constant", " ", "term", 
          RowBox[{"(", "s", ")"}], " ", "could", " ", "be", " ", "of", " ", 
          "various", " ", "lengths"}]}]}]}], ",", " ", 
      RowBox[{
       RowBox[{
       "so", " ", "its", " ", "grade", " ", "is", " ", "simply", " ", "set", 
        " ", "to", " ", "zero", "\n", "\n", "\t", 
        RowBox[{"OUTPUT", ":", "\n", "\t", "gradeList"}]}], " ", "=", " ", 
       RowBox[{"A", " ", "list"}]}], ",", " ", 
      RowBox[{"matching", " ", "the", " ", "ordering", " ", "of", " ", 
       RowBox[{"ClifToListG", "[", "clif", "]"}]}], ",", " ", 
      RowBox[{
      "of", " ", "the", " ", "grades", " ", "of", " ", "\n", "\t\t\t\t", 
       "each", " ", "term"}]}], "\n", "*)"}], "\n", "\n", "\t", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"clif1", ",", "gradeList", ",", "const"}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"clif1", "=", 
        RowBox[{"Expand", "[", "clif", "]"}]}], ";", "\n", "\t", 
       RowBox[{"const", "=", 
        RowBox[{"ConstantG", "[", "clif1", "]"}]}], ";", "\n", "\t", 
       RowBox[{"gradeList", "=", 
        RowBox[{"ConstantToZeroG", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "/@", 
            RowBox[{"EijListG", "[", "clif1", "]"}]}], "-", "1"}], ",", 
          "const"}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"(*", "  ", 
        RowBox[{
        "List", " ", "of", " ", "grades", " ", "of", " ", "clif", " ", 
         "terms", " ", 
         RowBox[{"(", 
          RowBox[{"=", " ", 
           RowBox[{
           "number", " ", "of", " ", "subscripts", " ", "on", " ", "e", " ", 
            "terms"}]}], ")"}], "\n", "\t\t\t", "Length", " ", "operator", 
         " ", "converts", " ", "atoms", " ", "to", " ", "their", " ", 
         "grades", "\n", "\t\t\t", "Constant", " ", "1", "st", " ", "term", 
         " ", 
         RowBox[{"(", 
          RowBox[{"if", " ", "any"}], ")"}], " ", "gets", " ", "assigned", 
         " ", "value", " ", "of", " ", "0", " ", "by", " ", "ConstantToZeroG",
          " \t\t", "\n", "\t\t\t", "For", " ", "other", " ", "terms", " ", 
         "subtract", " ", "1", " ", "because", " ", "Length", " ", "counts", 
         " ", "base", " ", "e", " ", "along", " ", "with", " ", "\n", 
         "\t\t\t\t", "subscripts"}], " ", "*)"}], "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{"debug4", ",", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GradeListG: List of grades of terms of \>\"", ",", "clif1", 
           ",", "\"\< = \>\"", ",", "gradeList"}], "]"}]}], "]"}], ";", "\n", 
       "\n", "\t", "gradeList"}]}], "\n", "\t", "]"}]}], "     ", 
   RowBox[{"(*", " ", 
    RowBox[{"End", " ", "of", " ", "GradeListG", " ", "Module"}], "  ", 
    "*)"}], "\n", "\n", "\n", 
   RowBox[{
    RowBox[{"DimListG", "[", "clif_", "]"}], " ", ":=", " ", 
    RowBox[{"MaxDimG", " ", "/@", " ", 
     RowBox[{"ClifToListG", "[", "clif", "]"}]}]}], "\n", 
   RowBox[{"(*", " ", "\n", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", "clif"}], ",", " ", 
     RowBox[{"a", " ", "multivector", "\n", 
      RowBox[{"OUTPUT", ":", " ", 
       RowBox[{
       "A", " ", "list", " ", "of", " ", "the", " ", "highest", " ", 
        "dimension", " ", "atom", " ", "in", " ", "each", " ", "term", " ", 
        "of", " ", "clif"}]}]}]}], " ", "\n", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "This", " ", "next", " ", "function", " ", "is", " ", "trivial", " ", 
     "but", " ", "is", " ", "provided", " ", "so", " ", "that", " ", "user", 
     " ", 
     RowBox[{"doesn", "'"}], "t", " ", "have", " ", "to", " ", "think", " ", 
     "about", " ", "how", " ", "to", " ", "do", " ", "this"}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"ListToClifG", "[", "clifList_", "]"}], ":=", 
    RowBox[{"clifList", "/.", 
     RowBox[{"List", "\[Rule]", "Plus"}]}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"SignatureG", "[", "list_", "]"}], ":=", "\n", 
    RowBox[{"(*", "\n", "\t", 
     RowBox[{
      RowBox[{"INPUT", ":", " ", 
       RowBox[{"A", " ", "list", " ", "of", " ", "integers"}]}], ",", " ", 
      RowBox[{"letters", " ", "or", " ", "words"}], ",", " ", 
      RowBox[{
       RowBox[{
       "or", " ", "other", " ", "items", " ", "that", " ", "Mathematica", " ",
         "\n", "\t\t\t", "can", " ", "sort", " ", "by", " ", "structure", " ",
         "\n", "\n", "\t", 
        RowBox[{"PROCESS", ":", "  ", 
         RowBox[{
          RowBox[{
          "Find", " ", "the", " ", "list", " ", "of", " ", "permutations", 
           " ", "cycles", " ", "that", " ", "convert", " ", "this", " ", 
           "list", " ", "to", " ", "an", " ", "ordered", " ", "one", "\n", 
           "\t\t\t  ", "Replace", " ", "each", " ", "cycle", " ", "by", " ", 
           "its", " ", "length", "\n", "\t\t\t  ", "Replace", " ", "even", 
           " ", "lengths", " ", "with"}], " ", "-", 
          RowBox[{"1", " ", "and", " ", "odd", " ", "lengths", " ", "with"}], 
          " ", "+", 
          RowBox[{
           RowBox[{
           "1", "\n", "\t\t\t  ", "The", " ", "signature", " ", "is", " ", 
            "the", " ", "product", " ", "of", " ", "the"}], " ", 
           "\[PlusMinus]", 
           RowBox[{
            RowBox[{"1", "'"}], "s", "\n", "\n", "\t", "OUTPUT"}]}]}], ":", 
         " ", 
         RowBox[{"The", " ", "signature", " ", "of", " ", "the", " ", 
          RowBox[{"list", ":", "\n", "\t\t\t\t", 
           RowBox[{"Let", " ", "n"}]}]}]}]}], " ", "=", " ", 
       RowBox[{
       "minimum", " ", "#", " ", "of", " ", "pairwise", " ", "permutations", 
        " ", "required", " ", "to", " ", "put", " ", "the", " ", "list", " ", 
        "\n", "\t\t\t\t\t", "in", " ", "order", "\n", "\t\t\t\t", 
        RowBox[{"Note", ":", " ", 
         RowBox[{"If", " ", "an", " ", "integer", " ", "repeats"}]}]}]}], ",",
       " ", 
      RowBox[{
       RowBox[{
       "this", " ", "means", " ", "not", " ", "to", " ", "permute", " ", 
        "adjacent", " ", "equal", " ", "items", "\n", "\t\t\t\t", 
        "Signature"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"+", "1"}], " ", "if", " ", "n", " ", "is", " ", "even", 
         "\n", "\t\t\t\t", "Signature"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"-", "1"}], " ", "if", " ", "n", " ", "is", " ", 
         "odd"}]}]}]}], " ", "*)"}], "\n", "\n", "\t", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "cycles", ",", "listOfCycles", ",", "permLength", ",", "evenOddLength",
         ",", "evenOddLength2", ",", "signature"}], "}"}], ",", "\n", "\t\t", 
      
      RowBox[{
       RowBox[{"cycles", "=", 
        RowBox[{"FindPermutation", "[", "list", "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"(*", "  ", 
        RowBox[{
         RowBox[{
         "We", " ", "desire", " ", "the", " ", "cycles", " ", "length", " ", 
          "to", " ", "make", " ", "this", " ", "list", " ", 
          RowBox[{"ordered", ".", "\n", "\t\t\t", "This"}], " ", "is", " ", 
          "the", " ", "list", " ", "of", " ", "permutation", " ", "cycles", 
          " ", "that", " ", "convert", " ", "this", " ", "list", " ", "to", 
          " ", "an", " ", "ordered", " ", "one", "\n", "\t\t\t", 
          RowBox[{"Note", ":", " ", "Technically"}]}], ",", " ", 
         RowBox[{
         "this", " ", "converts", " ", "an", " ", "ordered", " ", "list", " ",
           "into", " ", "this", " ", "one"}], ",", " ", 
         RowBox[{
         "but", " ", "the", " ", "\n", "\t\t\t\t", "result", " ", "is", " ", 
          "the", " ", "same"}]}], "\n", "\t\t ", "*)"}], "\n", "\t\t", 
       RowBox[{"listOfCycles", "=", 
        RowBox[{
         RowBox[{"List", "@@", "cycles"}], " ", "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"{", "u__", "}"}], "}"}], "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", "u", "}"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "u__", "}"}], ",", "v__"}], "}"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "u", "}"}], ",", "v"}], "}"}]}]}], "}"}]}]}], ";", 
       "\n", "\t\t\t", 
       RowBox[{"(*", "  ", 
        RowBox[{"Replace", " ", "head", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"i", ".", "e", "."}], ",", " ", "\"\<Cycles\>\""}], ")"}], 
         " ", "with", " ", "\"\<List\>\"", "\n", "\t\t\t\t", "Then", " ", 
         "reduce", " ", "one", " ", "level", " ", "of", " ", "braces"}], " ", 
        "*)"}], "\n", "\t\t", 
       RowBox[{"permLength", "=", 
        RowBox[{
         RowBox[{"Length", "/@", "listOfCycles"}], "/.", " ", 
         RowBox[{
          RowBox[{"u_", "/;", 
           RowBox[{"u", "\[Equal]", "0"}]}], "\[Rule]", "1"}]}]}], ";", "\n", 
       "\t\t\t", 
       RowBox[{"(*", "  ", 
        RowBox[{
        "Find", " ", "the", " ", "lengths", " ", "of", " ", "the", " ", 
         "cycles", " ", "in", " ", "the", " ", "list", "\n", "\t\t\t\t", 
         RowBox[{"Note", ":", " ", 
          RowBox[{
          "null", " ", "cycles", " ", "map", " ", "to", " ", "zero", " ", 
           "so", " ", "we", " ", "change", " ", "them", " ", "to", " ", "1.", 
           " ", "See", " ", "example"}]}]}], "   ", "*)"}], "\n", "\t\t", 
       RowBox[{"evenOddLength", "=", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"Mod", "[", 
           RowBox[{"permLength", ",", "2"}], "]"}]}], "-", "1"}]}], ";", "\n",
        "\t\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Map", " ", "even", " ", "length", " ", "cycles", " ", "to"}], " ", 
         "-", 
         RowBox[{
         "1", " ", "and", " ", "odd", " ", "length", " ", "cycles", " ", 
          "to"}], " ", "+", "1"}], " ", "*)"}], "\n", "\t\t", 
       RowBox[{"signature", "=", 
        RowBox[{"evenOddLength", "/.", " ", 
         RowBox[{"List", "\[Rule]", "Times"}]}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Remove", " ", "one", " ", "level", " ", "of", " ", "brackets", " ", 
          "\n", "\n", "\t\t", 
          RowBox[{"Ex", " ", ".", "   ", "list"}]}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", " ", "1", ",", " ", "2", ",", " ", "4"}], " ", 
            "}"}], "   ", "This", " ", "list", " ", "shows", " ", "that", " ",
            "null", " ", "cycles", " ", "have", " ", "to", " ", "be", " ", 
           "handled", "\n", "\t\t\t\t", "cycles"}], " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Cycles", "[", 
             RowBox[{"{", "}"}], "]"}], "\n", "\t\t\t\t", "listOfCycles"}], 
           " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"{", " ", 
              RowBox[{"{", " ", "}"}], " ", "}"}], "\n", "\t\t\t\t", 
             "permLength"}], " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"{", "1", "}"}], "\n", "\t\t\t\t", "evenOddLength"}], 
             " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "1", "}"}], "\n", "\t\t\t\t", "signature"}], " ", 
              "=", " ", 
              RowBox[{
               RowBox[{"1", " ", "\n", "\n", "\t\t", "Ex", "      ", "list"}],
                "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "2", ",", " ", "3", ",", " ", "4", ",", " ", "1", ",", " ", 
                   "2"}], " ", "}"}], "  ", "\n", "\t\t\t\t\t", "This", " ", 
                 "list", " ", "shows", " ", "that", " ", "a", " ", "simple", 
                 " ", "product", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SubscriptBox["e", "2"], 
                   SubscriptBox["e", "3"], 
                   RowBox[{
                    SubscriptBox["e", "4"], "\[Wedge]", 
                    SubscriptBox["e", "1"]}], 
                   SubscriptBox["e", "2"]}], ")"}], "can", " ", "have", " ", 
                 "more", " ", "than", " ", "1", " ", "cycle", "\n", 
                 "\t\t\t\t", "cycles"}], " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cycles", "[", " ", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", " ", "4", ",", " ", "2"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", " ", 
                    RowBox[{"3", ",", " ", "5"}], "}"}]}], " ", "]"}], "\n", 
                  "\t\t\t\t", "listOfCycles"}], " ", "=", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", " ", 
                    RowBox[{
                    RowBox[{"{", " ", 
                    RowBox[{"1", ",", " ", "4", ",", " ", "2"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", " ", 
                    RowBox[{"3", ",", " ", "5"}], "}"}]}], " ", "}"}], "\n", 
                   "\t\t\t\t", "permLength"}], " ", "=", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}], "\n", "\t\t\t\t", 
                    "evenOddLength"}], " ", "=", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], "\n", "\t\t\t\t", 
                    "signature"}], " ", "=", " ", 
                    RowBox[{"-", "1"}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "\n", 
        "*)"}], "\t", "\n", "\n", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{"debug3", ",", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<SignatureG: List of Product Blade = \>\"", ",", "list", ",", 
            "\"\<,  Cycles of list: \>\"", ",", "cycles"}], "]"}], ";", "\n", 
          "\t\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Cycles sans head (Cycles): \>\"", ",", "listOfCycles", ",", 
            "\"\<, Length of cycles: \>\"", ",", "permLength"}], "]"}], ";", 
          "\n", "\t\t\t", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Even cycle -> -1, odd -> +1: \>\"", ",", "evenOddLength", 
            ",", "\"\<, Signature = Product of \[PlusMinus]1's: \>\"", ",", 
            "\n", "\t\t\t\t", "signature"}], "]"}]}]}], "\t\t", "\n", "\t\t", 
        "]"}], ";", "\n", "\t\t", "signature"}]}], "\t\t", "\n", "]"}]}], 
   "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"End", " ", "of", " ", "SignatureG", " ", "Module"}], " ", "*)"}],
    "\n", "\n", "\n", 
   RowBox[{
    RowBox[{"SubscriptListG", "[", "clif_", "]"}], ":=", "  ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"INPUT", ":", " ", "Clif"}], " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"A", " ", "multivector", "\n", "\t", 
             RowBox[{"PROCESS", ":", "\n", "\t\t", 
              RowBox[{
               RowBox[{
               "Use", " ", "EijList", " ", "to", " ", "obtain", " ", "a", " ",
                 "list", " ", "of", " ", "e"}], "-", 
               RowBox[{
               "subscripts", " ", "of", " ", "terms", " ", "of", " ", "clif", 
                "\n", "\t\t\t", "Example"}]}], ":", " ", 
              RowBox[{"2", " ", "+", " ", 
               RowBox[{"3", " ", 
                SubscriptBox["e", 
                 RowBox[{"2", " "}]], 
                SubscriptBox["e", "4"]}]}]}]}], " ", "\[Rule]", " ", 
            RowBox[{
             RowBox[{"{", " ", 
              RowBox[{"0", ",", " ", 
               SubscriptBox["e", 
                RowBox[{"2", ",", "4"}]]}], " ", "}"}], "\n", "\t\t", 
             "Use"}]}], " ", "/.", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
             "replace", " ", "all", " ", "to", " ", "change", " ", "e"}], "-", 
             RowBox[{"subscripts", " ", "like", " ", 
              SubscriptBox["e", "2"], 
              SubscriptBox["e", "4"], " ", "to", " ", "a", " ", "list", " ", 
              "of", " ", "subscripts", " ", "like", " ", 
              RowBox[{"{", 
               RowBox[{"2", ",", "4"}], "}"}], "\n", "\t\t", "If", " ", 
              "constant", " ", "term"}]}], " ", "\[NotEqual]", " ", "0"}]}]}],
          ",", " ", 
         RowBox[{
          RowBox[{
          "change", " ", "1", "st", " ", "term", " ", "of", " ", "list", " ", 
           "from", " ", "0", " ", "to", " ", 
           RowBox[{"{", "0", "}"}], "\n", "\t\t", "If", " ", "entire", " ", 
           "clif"}], " ", "=", " ", "0"}], ",", " ", 
         RowBox[{
          RowBox[{"make", " ", "subscript", " ", "list"}], " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", " ", 
             RowBox[{"{", "0", "}"}], " ", "}"}], "\n", "\t", 
            RowBox[{"OUTPUT", ":", " ", "subList1"}]}], " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
             "List", " ", "of", " ", "the", " ", "subscripts", " ", "of", " ",
               "the", " ", "e"}], "-", 
             RowBox[{"terms", " ", "\n", "\t\t\t", "1", "st", " ", "term"}]}],
             " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", "0", "}"}], " ", "if", " ", "either", " ", 
               "constant", " ", "is", " ", "non"}], "-", 
              RowBox[{"zero", " ", "or", " ", "entire", " ", "clif"}]}], " ", 
             "=", " ", 
             RowBox[{
              RowBox[{"0", " ", "\n", "\t\t\t", 
               RowBox[{"Example", ":", " ", 
                RowBox[{"5", " ", "+", " ", 
                 RowBox[{"3", " ", 
                  SubscriptBox["e", "1"], 
                  SubscriptBox["e", "2"]}]}]}]}], " ", "\[Rule]", " ", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"{", "0", " ", "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2"}], "}"}]}], " "}]}]}]}]}]}]}], ")"}], 
       " ", "\n", "\t\t\t", 
       RowBox[{"Example", ":", " ", "0"}]}], " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{"{", "0", "}"}], " ", "}"}], "  ", "\n", "\t\t\t", 
        RowBox[{"Example", ":", " ", 
         RowBox[{"3", " ", 
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"]}]}]}], " ", "\[Rule]", " ", 
       RowBox[{"{", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], " ", "}"}]}]}], "   ", "*)"}], "\n", 
    "\n", "\t", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"subList0", ",", "subList1"}], "}"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"subList0", "=", 
        RowBox[{
         RowBox[{"EijListG", "[", "clif", "]"}], "/.", 
         RowBox[{
          SubscriptBox["e", "u__"], "\[Rule]", 
          RowBox[{"{", "u", "}"}]}]}]}], ";", "\n", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ConstantG", "[", "clif", "]"}], "===", "0"}], "||", 
          RowBox[{
           RowBox[{"ConstantG", "[", "clif", "]"}], "===", "0."}]}], ",", 
         RowBox[{"subList1", "=", "subList0"}], ",", 
         RowBox[{"subList1", "=", 
          RowBox[{"ReplacePart", "[", 
           RowBox[{"subList0", ",", 
            RowBox[{"1", "\[Rule]", 
             RowBox[{"{", "0", "}"}]}]}], "]"}]}]}], "]"}], ";", "\n", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"clif", "===", "0"}], "||", 
          RowBox[{"clif", "===", "0."}]}], ",", 
         RowBox[{"subList1", "=", 
          RowBox[{"{", 
           RowBox[{"{", "0", "}"}], "}"}]}]}], "]"}], ";", "\n", "\t\t", 
       "subList1"}]}], "\n", "\t", "]"}]}], "\n", "\t", 
   RowBox[{"(*", " ", 
    RowBox[{"End", " ", "of", " ", "SubscriptListG", " ", "Module"}], " ", 
    "*)"}], "\n", "\t", "\n", "\n", 
   RowBox[{
    RowBox[{"EijSortG", "[", "clifList_", "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{"Sort", "[", 
      RowBox[{"clifList", "//.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["e", "u__"], 
           SubscriptBox["e", "v__"]}], "->", 
          SubscriptBox["e", 
           RowBox[{"u", ",", "v"}]]}], ",", 
         RowBox[{
          SubscriptBox["e", "u__"], "\[RuleDelayed]", 
          RowBox[{"Subscript", "[", 
           RowBox[{"e", ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"Sort", "[", 
              RowBox[{"List", "[", "u", "]"}], "]"}]}]}], "]"}]}]}], "}"}]}], 
      "]"}], "//.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["e", 
         RowBox[{"u_", ",", "v__"}]], "\[Rule]", 
        RowBox[{
         SubscriptBox["e", "u"], " ", 
         SubscriptBox["e", "v"]}]}], ",", 
       RowBox[{
        SubscriptBox["e", 
         RowBox[{
          RowBox[{"_", " ", "u_v"}], ",", "w__"}]], "\[Rule]", 
        RowBox[{
         SubscriptBox["e", "uv"], " ", 
         SubscriptBox["e", "w"]}]}]}], "}"}], " ", 
     RowBox[{"(*", "\n", "\t", 
      RowBox[{
       RowBox[{"INPUT", ":", " ", 
        RowBox[{"A", " ", "clif", " ", "list", "\n", "\t", "PROCESS"}], ":", 
        " ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Sort", " ", "list", " ", "as", " ", "though", " ", "products", " ",
            "like", " ", 
           SubscriptBox["e", "1"], " ", 
           SubscriptBox["e", "2"], " ", "were", " ", 
           RowBox[{"Subscript", "[", 
            RowBox[{"e", ",", " ", "1", ",", " ", "2", ",", " ", "4"}], "]"}],
            " ", "\n", "             ", "Singlets", " ", "precede", " ", 
           "pairs", " ", "precede", " ", "triples"}], " ", "..."}], " ", "\n",
          "             ", "Preserves", " ", "duplicates", " ", "\n", 
         "             ", "First"}]}], ",", " ", 
       RowBox[{"change", " ", "product", " ", "of", " ", 
        RowBox[{
         SubscriptBox["e", "i"], "'"}], "s", " ", "to", " ", 
        SubscriptBox["e", 
         RowBox[{"i", ",", "j", ",", "..."}]], "\n", "                ", 
        RowBox[{"Sequence", "@@", "Sort"}], " ", "ensures", " ", 
        SubscriptBox["e", 
         RowBox[{"1", ",", "2", ",", "3"}]], " ", "for", " ", "example", " ", 
        "rather", " ", "than", " ", 
        SubscriptBox["e", 
         RowBox[{"3", ",", "1", ",", "2"}]], "\n", "             ", "Next"}], 
       ",", " ", 
       RowBox[{"Sort", " ", "the", " ", "subscripted", " ", "list", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", ".", "e", "."}], ",", " ", 
          RowBox[{"an", " ", 
           SubscriptBox["e", 
            RowBox[{"i", ",", "j"}]], " ", "sort"}]}], ")"}], "\n", 
        "             ", "Finally"}], ",", " ", 
       RowBox[{
       "convert", " ", "subscripted", " ", "list", " ", "back", " ", "to", 
        " ", "a", " ", "product", " ", "list", "\n", "    ", 
        RowBox[{"OUTPUT", ":", " ", 
         RowBox[{
         "The", " ", "clif", " ", "list", " ", "sorted", " ", "as", " ", 
          "though", " ", "it", " ", "were", " ", "subscripted", "\n", 
          "            ", "Could", " ", "be", " ", "useful"}]}]}], ",", " ", 
       RowBox[{"for", " ", "example"}], ",", " ", 
       RowBox[{
       "to", " ", "match", " ", "a", " ", "clif", " ", "list", " ", "to", " ",
         "a", " ", "sorted", " ", "coefficient", " ", "list", " ", "like", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["b", 
           RowBox[{"1", ",", "3"}]], ",", " ", 
          SubscriptBox["b", 
           RowBox[{
            RowBox[{"2", ",", "3", ",", "4"}], "}"}]]}], "\n"}]}]}], 
      "*)"}]}]}]}]}]], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691073072029634*^9, 3.691073593702551*^9, 
   3.691073646277369*^9, 3.691073715183025*^9, 3.691073841869029*^9, 
   3.691073879917136*^9, {3.6910742437762337`*^9, 3.691074246906845*^9}, {
   3.691074290856971*^9, 3.691074316518396*^9}, {3.6910744297152367`*^9, 
   3.691074443783609*^9}, {3.691162438368594*^9, 3.691162439095743*^9}, {
   3.691170784724188*^9, 3.691170784737091*^9}, {3.691172107600281*^9, 
   3.69117210875049*^9}, {3.69117217676159*^9, 3.69117217756246*^9}, {
   3.691186175811736*^9, 3.691186240509141*^9}, {3.6911863220181017`*^9, 
   3.691186342619071*^9}, {3.691186860551017*^9, 3.691186885817286*^9}, {
   3.6911869374333963`*^9, 3.691186957803356*^9}, {3.691187267589674*^9, 
   3.691187269091288*^9}, 3.6911876076994667`*^9, 3.691194078836825*^9, {
   3.69123905595233*^9, 3.691239088063758*^9}, {3.6912396252805967`*^9, 
   3.6912396595078773`*^9}, {3.6913468213348417`*^9, 3.691346822963201*^9}, 
   3.69134686343079*^9, {3.6919605972351103`*^9, 3.6919605985651608`*^9}, {
   3.691964605845388*^9, 3.691964662916381*^9}, 3.691964821186797*^9, {
   3.691965053055522*^9, 3.691965054206366*^9}, {3.691966447426881*^9, 
   3.691966484567197*^9}, {3.691967520794083*^9, 3.6919675585617228`*^9}, {
   3.6925522526829567`*^9, 3.692552262554408*^9}, {3.692552773240591*^9, 
   3.692552773991585*^9}, {3.692552804201651*^9, 3.69255280513661*^9}, {
   3.692558758533824*^9, 3.692558827881638*^9}, 3.692564762791512*^9, 
   3.6925666114553967`*^9, {3.6925672580099583`*^9, 3.692567393184073*^9}, {
   3.692567425965393*^9, 3.6925676479457617`*^9}, 3.692567720117198*^9, {
   3.692567896272674*^9, 3.69256790928052*^9}, 3.6934106839781847`*^9, {
   3.693411986954101*^9, 3.693411988757691*^9}, {3.693417359168449*^9, 
   3.6934175236812973`*^9}, {3.693417557086903*^9, 3.69341763378249*^9}, {
   3.6934176783021793`*^9, 3.69341782175448*^9}, {3.693418103596665*^9, 
   3.6934181102791643`*^9}, {3.693443146160388*^9, 3.693443186745969*^9}, {
   3.693443548164789*^9, 3.6934435594356194`*^9}, {3.6934436886072607`*^9, 
   3.693443717962111*^9}, {3.693490456395357*^9, 3.6934905717656*^9}, {
   3.6934913056357822`*^9, 3.6934914448614283`*^9}, {3.693491491895162*^9, 
   3.693491537749947*^9}, {3.693492667380725*^9, 3.6934926825194273`*^9}, {
   3.6934968008187*^9, 3.69349681394088*^9}, {3.693497501118395*^9, 
   3.69349751018495*^9}, {3.6934978562789583`*^9, 3.6934978645326557`*^9}, 
   3.693497972594495*^9, {3.6934980060771503`*^9, 3.693498066229618*^9}, {
   3.6934981182511063`*^9, 3.69349828395382*^9}, 3.693498347529374*^9, 
   3.69349838044261*^9, 3.693498422994424*^9, 3.6934985670874567`*^9, {
   3.693498618360155*^9, 3.69349865227641*^9}, {3.693498684079303*^9, 
   3.6934987639094276`*^9}, {3.693499309336701*^9, 3.693499612707046*^9}, {
   3.693500448678697*^9, 3.693500469251882*^9}, {3.693500533671541*^9, 
   3.6935005771228027`*^9}, {3.693500823866571*^9, 3.69350083530978*^9}, {
   3.6935024583206997`*^9, 3.693502473223585*^9}, {3.695732480854957*^9, 
   3.6957324880714073`*^9}, {3.695734132320497*^9, 3.695734165831356*^9}, 
   3.695744699760768*^9, {3.695771628866851*^9, 3.6957717596908207`*^9}, {
   3.695772348781991*^9, 3.695772358110436*^9}, {3.695772418037466*^9, 
   3.6957724439927273`*^9}, {3.6957728698124027`*^9, 3.695772871908252*^9}, {
   3.695818987207073*^9, 3.695819126448515*^9}, {3.6958191582355537`*^9, 
   3.695819780442247*^9}, {3.6958198632271633`*^9, 3.695819867799015*^9}, 
   3.69581991329774*^9, {3.6958199486090107`*^9, 3.69582002104081*^9}, {
   3.695820087154109*^9, 3.695820136559053*^9}, {3.695820258665784*^9, 
   3.6958203616080933`*^9}, {3.695820392358898*^9, 3.6958204073670187`*^9}, {
   3.695820461533586*^9, 3.6958205222839108`*^9}, {3.6958214522022142`*^9, 
   3.695821481503334*^9}, {3.695822111203779*^9, 3.6958222102344646`*^9}, {
   3.695822245876869*^9, 3.695822253690641*^9}, 3.69582702881758*^9, {
   3.695828502413268*^9, 3.695828800129489*^9}, {3.6958290917200108`*^9, 
   3.6958291355736217`*^9}, {3.695829175597875*^9, 3.695829212883546*^9}, {
   3.6958429905868073`*^9, 3.695843147978652*^9}, {3.695843209498517*^9, 
   3.695843281810257*^9}, {3.6958433238679934`*^9, 3.695843328865196*^9}, {
   3.695843371424499*^9, 3.695843448649987*^9}, 3.695845757536249*^9, {
   3.695845867452508*^9, 3.695846018810631*^9}, {3.695846080287752*^9, 
   3.69584608701797*^9}, {3.695846164021183*^9, 3.695846165532172*^9}, 
   3.6958463230976543`*^9, 3.695846422278957*^9, {3.695846628352573*^9, 
   3.695846832338709*^9}, {3.695846872342218*^9, 3.695846897903164*^9}, {
   3.6958470279161377`*^9, 3.695847028945857*^9}, {3.69584852180669*^9, 
   3.695848544152446*^9}, {3.695848767934144*^9, 3.695848883506884*^9}, {
   3.695849261029049*^9, 3.695849476686075*^9}, {3.695849556546075*^9, 
   3.695849631367141*^9}, {3.695849662025731*^9, 3.695849663434252*^9}, {
   3.695849777255155*^9, 3.695849779222843*^9}, {3.695850880477881*^9, 
   3.6958508837858257`*^9}, {3.695850944472471*^9, 3.6958509469048758`*^9}, {
   3.695914230062276*^9, 3.695914261128736*^9}, {3.695999947361558*^9, 
   3.69599996022007*^9}, {3.696000688932384*^9, 3.696000729967718*^9}, {
   3.696077451991584*^9, 3.6960774714248323`*^9}, 3.696077506171508*^9, {
   3.696079191227707*^9, 3.696079243169139*^9}, {3.6960798318532543`*^9, 
   3.696079862259411*^9}, {3.6960800176486273`*^9, 3.696080040698516*^9}, {
   3.696080077108054*^9, 3.696080078954493*^9}, {3.696080683388695*^9, 
   3.696080765408646*^9}, {3.6960808229347677`*^9, 3.696080832050459*^9}, {
   3.6960813661513977`*^9, 3.696081368828742*^9}, {3.6960832969098387`*^9, 
   3.696083573127898*^9}, {3.6960836204468184`*^9, 3.696083634472033*^9}, {
   3.696083710785329*^9, 3.696083971130752*^9}, 3.696084003829397*^9, {
   3.696092724460294*^9, 3.696092765241118*^9}, {3.6960941601733437`*^9, 
   3.696094199247642*^9}, {3.696095429987636*^9, 3.696095441990737*^9}, {
   3.696095581681726*^9, 3.6960956077677526`*^9}, 3.696095732753447*^9, 
   3.696095845811886*^9, 3.696095900684404*^9, 3.69609602167353*^9, 
   3.696096192899143*^9, {3.696096261005837*^9, 3.696096267845666*^9}, {
   3.696096341092718*^9, 3.696096344172612*^9}, 3.696097295128721*^9, {
   3.69609752315829*^9, 3.696097553673802*^9}, {3.696098016126671*^9, 
   3.696098018403373*^9}, {3.696098107686864*^9, 3.69609813636646*^9}, {
   3.6960982640562572`*^9, 3.696098265319688*^9}, {3.6960991419793043`*^9, 
   3.69609929013301*^9}, {3.696105996528091*^9, 3.696106029050375*^9}, {
   3.6961064815884943`*^9, 3.6961064985733547`*^9}, {3.696106559630352*^9, 
   3.696106570807624*^9}, 3.6961066275346193`*^9, {3.6961067061453533`*^9, 
   3.696106772161428*^9}, {3.696107448379942*^9, 3.696107449119595*^9}, 
   3.696107556143742*^9, {3.696107590644492*^9, 3.696107595878331*^9}, {
   3.6961076489518414`*^9, 3.696107781891183*^9}, {3.696108236511135*^9, 
   3.6961082705853653`*^9}, {3.6961083550316896`*^9, 3.6961083753345213`*^9}, 
   3.696108868455888*^9, {3.6961095699742727`*^9, 3.696109583995894*^9}, {
   3.696109623412315*^9, 3.696109700457329*^9}, {3.696109758956052*^9, 
   3.696109768001793*^9}, {3.696115021540352*^9, 3.696115073008628*^9}, {
   3.696116068411652*^9, 3.696116078458647*^9}, {3.696116135893812*^9, 
   3.696116147204878*^9}, {3.696116199907048*^9, 3.69611628655879*^9}, {
   3.6961165133245907`*^9, 3.696116515503356*^9}, {3.696116560813384*^9, 
   3.6961165864880743`*^9}, {3.69611678952264*^9, 3.6961169057615*^9}, {
   3.696204706942729*^9, 3.696204763748204*^9}, {3.69620479805543*^9, 
   3.696204804511096*^9}, {3.696204935753037*^9, 3.696205018021299*^9}, {
   3.696205053745636*^9, 3.696205111703528*^9}, {3.696205211533939*^9, 
   3.696205296285767*^9}, {3.696206059646842*^9, 3.696206091712418*^9}, {
   3.696206796496337*^9, 3.69620680087278*^9}, {3.696272822845186*^9, 
   3.696272971561103*^9}, {3.6962848887017403`*^9, 3.6962848965492268`*^9}, {
   3.6962915504015493`*^9, 3.696291555336377*^9}, {3.6962916032501917`*^9, 
   3.696291670230001*^9}, {3.696291765660165*^9, 3.696291835616476*^9}, {
   3.6962919890585337`*^9, 3.696291995521372*^9}, {3.696292040384646*^9, 
   3.696292046320023*^9}, {3.6962920965108433`*^9, 3.696292114499303*^9}, {
   3.696292166058732*^9, 3.696292311499179*^9}, {3.69629270478833*^9, 
   3.696292709054996*^9}, {3.69636534219699*^9, 3.696365362711913*^9}, {
   3.696365408274908*^9, 3.6963657199616337`*^9}, {3.6963657602088346`*^9, 
   3.696365761568491*^9}, {3.696365845633854*^9, 3.696365981402483*^9}, 
   3.6963660250052853`*^9, 3.6963661267142267`*^9, {3.696366159493038*^9, 
   3.696366170037991*^9}, {3.6963666047367153`*^9, 3.696366610560445*^9}, 
   3.696366641357057*^9, 3.696367211677112*^9, {3.696367246925178*^9, 
   3.696367437925397*^9}, {3.696548884036927*^9, 3.696548885121347*^9}, {
   3.696552602347845*^9, 3.6965526140995007`*^9}, {3.6966172957725677`*^9, 
   3.6966172971196413`*^9}, {3.696617543681409*^9, 3.696617545117868*^9}, {
   3.696617587466963*^9, 3.6966176499101467`*^9}, {3.696617692034759*^9, 
   3.6966178125525513`*^9}, {3.696852954105671*^9, 3.696852957077058*^9}, {
   3.696853043439715*^9, 3.696853092917054*^9}, {3.69685319286651*^9, 
   3.696853235938266*^9}, {3.696853331082515*^9, 3.696853413877496*^9}, {
   3.6968560003692627`*^9, 3.696856014825593*^9}, {3.696856082935842*^9, 
   3.696856085796195*^9}, {3.696856199957531*^9, 3.696856200811823*^9}, {
   3.696856265740015*^9, 3.696856270146689*^9}, 3.696856301485545*^9, {
   3.696967970669462*^9, 3.696967977461548*^9}, 3.774983194901113*^9, 
   3.774983534721156*^9, 3.774984231070174*^9, 3.774988838537615*^9, {
   3.775041528327669*^9, 3.7750415310040693`*^9}, {3.775069128908887*^9, 
   3.775069181434593*^9}, {3.7750694126021767`*^9, 3.7750694961842327`*^9}, {
   3.7750695518788347`*^9, 3.77506956329041*^9}, {3.775069603711485*^9, 
   3.7750697771678534`*^9}, {3.775069822781452*^9, 3.7750698344573603`*^9}, 
   3.7750699100205507`*^9, {3.7750699466882563`*^9, 3.775069989434929*^9}, 
   3.7750701330888977`*^9, {3.775070171485289*^9, 3.7750702060763817`*^9}, {
   3.775070243769985*^9, 3.775070597555389*^9}, {3.77507063080827*^9, 
   3.77507064285398*^9}, {3.775070681214813*^9, 3.775070757315298*^9}, {
   3.775070805968067*^9, 3.775070854719051*^9}, {3.775073781007833*^9, 
   3.775073781924988*^9}, {3.775073875049098*^9, 3.775073902676074*^9}, {
   3.7750741659517384`*^9, 3.775074188999426*^9}, {3.775075418755673*^9, 
   3.775075446705371*^9}, {3.775130445281828*^9, 3.7751306088286457`*^9}, 
   3.775130708922872*^9, {3.775130785274643*^9, 3.775130819407078*^9}, 
   3.775130923095302*^9, 3.7751360453612843`*^9, 3.7751418038723288`*^9, {
   3.775142692407929*^9, 3.775142726233981*^9}, 3.775142785908558*^9, {
   3.775142836559381*^9, 3.775142858910447*^9}, {3.775144138966249*^9, 
   3.77514415249166*^9}, {3.775164357848298*^9, 3.775164399446685*^9}, {
   3.775164519086679*^9, 3.7751645793016376`*^9}, {3.775164634580817*^9, 
   3.7751647528518744`*^9}, {3.775165088145938*^9, 3.775165252269545*^9}, {
   3.775165289610052*^9, 3.775165448632872*^9}, {3.7751655260362453`*^9, 
   3.7751655977607203`*^9}, {3.775165634687776*^9, 3.775165786862913*^9}, {
   3.775165913022513*^9, 3.775165968832308*^9}, {3.775166027450842*^9, 
   3.775166176795059*^9}, {3.775166293809524*^9, 3.775166344584263*^9}, {
   3.775166424124844*^9, 3.7751665204521112`*^9}, {3.7751665683876762`*^9, 
   3.7751666114612103`*^9}, {3.7751669665435467`*^9, 3.775167010116263*^9}, {
   3.775167091848201*^9, 3.775167092366744*^9}, {3.775167129100678*^9, 
   3.77516712979519*^9}, {3.77516727961337*^9, 3.775167289617652*^9}, {
   3.775234717997982*^9, 3.775234721199275*^9}, {3.775250008847158*^9, 
   3.775250028151617*^9}, {3.77525009412156*^9, 3.775250113444038*^9}, 
   3.775250151922061*^9, {3.775250196808886*^9, 3.775250266159459*^9}, {
   3.77525029769523*^9, 3.7752503709205627`*^9}, {3.775250402288848*^9, 
   3.775250416898733*^9}, {3.775250519660042*^9, 3.7752505348493977`*^9}, {
   3.77525057150187*^9, 3.775250594309618*^9}, {3.775250651394841*^9, 
   3.775250673276944*^9}, {3.775250704838037*^9, 3.77525072342863*^9}, {
   3.7752508691312437`*^9, 3.7752508998760843`*^9}, {3.7752509321920567`*^9, 
   3.775250985423485*^9}, {3.775251067008951*^9, 3.775251151972698*^9}, {
   3.775251184532469*^9, 3.775251240094639*^9}, {3.775251351017001*^9, 
   3.775251401750063*^9}, {3.775251453943891*^9, 3.775251469101502*^9}, {
   3.775251506361415*^9, 3.7752516635893307`*^9}, 3.775251738212207*^9, {
   3.7752517706157837`*^9, 3.775251772383189*^9}, 3.7752518143740892`*^9, {
   3.775251856999762*^9, 3.775251905254834*^9}, {3.775252030636405*^9, 
   3.775252056994484*^9}, {3.775252107671817*^9, 3.775252208529463*^9}, {
   3.775252338564179*^9, 3.775252343126567*^9}, {3.7752523803139753`*^9, 
   3.77525254883212*^9}, {3.7752526060969954`*^9, 3.775252627443761*^9}, {
   3.775253412687599*^9, 3.7752535363879137`*^9}, {3.775253577585705*^9, 
   3.7752536357168627`*^9}, 3.77525409241928*^9, {3.775258192304435*^9, 
   3.7752582103437653`*^9}, {3.775258338920985*^9, 3.775258520398345*^9}, 
   3.775258584767435*^9, {3.775258644275982*^9, 3.775258664751585*^9}, 
   3.775258707908687*^9, {3.775258760369928*^9, 3.775258888275958*^9}, {
   3.7753123936801357`*^9, 3.775312417125251*^9}, {3.7753124606005173`*^9, 
   3.775312496288683*^9}, {3.775312551946059*^9, 3.775312557216751*^9}, {
   3.775312751348441*^9, 3.7753127878395967`*^9}, {3.775312826653365*^9, 
   3.775312830363646*^9}, {3.775312893529004*^9, 3.7753128953370934`*^9}, {
   3.775312957075389*^9, 3.775312958310912*^9}, {3.775313070256165*^9, 
   3.775313071112109*^9}, {3.7753131094289513`*^9, 3.775313126897434*^9}, {
   3.775313161832864*^9, 3.775313310452938*^9}, {3.775313342913369*^9, 
   3.775313345983665*^9}, {3.77531347504224*^9, 3.775313514246195*^9}, {
   3.775313578825004*^9, 3.7753136062030983`*^9}, {3.7753136520858793`*^9, 
   3.775313662039345*^9}, {3.775313759709251*^9, 3.775314037962739*^9}, {
   3.7753140835332403`*^9, 3.775314110825018*^9}, {3.775314209286602*^9, 
   3.77531428557141*^9}, 3.7753143202796097`*^9, {3.775315211256535*^9, 
   3.775315230208313*^9}, {3.775315268812304*^9, 3.775315271098988*^9}, {
   3.775315303087058*^9, 3.775315303382648*^9}, 3.775319966434836*^9, {
   3.77532300022826*^9, 3.775323001980225*^9}, {3.775323289307768*^9, 
   3.7753233629831038`*^9}, {3.7753233932881937`*^9, 
   3.7753234512190123`*^9}, {3.775323493170417*^9, 3.775323547860589*^9}, 
   3.775323603043055*^9, {3.7753236635521793`*^9, 3.7753237222019243`*^9}, {
   3.775323764112444*^9, 3.775323780970166*^9}, {3.775323889306634*^9, 
   3.775324045222172*^9}, {3.7754262898626347`*^9, 3.775426297971507*^9}, {
   3.7754263358231897`*^9, 3.775426403735776*^9}, {3.775941273738418*^9, 
   3.775941275578945*^9}, {3.7759413390025673`*^9, 3.7759414151492777`*^9}, 
   3.775944965732349*^9, {3.775945388379376*^9, 3.775945398464837*^9}, {
   3.775945651861813*^9, 3.775945657653391*^9}, {3.775945870633864*^9, 
   3.7759458729558353`*^9}, {3.7759464458169317`*^9, 3.775946472292601*^9}, 
   3.776001751262906*^9, {3.776001792651334*^9, 3.776001911433197*^9}, {
   3.776001946340021*^9, 3.7760019751845083`*^9}, {3.776002042323656*^9, 
   3.776002064459176*^9}, {3.7760021065364428`*^9, 3.776002154634845*^9}, 
   3.776005376721629*^9, {3.778022697787554*^9, 3.7780227309090548`*^9}, {
   3.7780227679539137`*^9, 3.7780227720469637`*^9}, {3.7780228420703497`*^9, 
   3.778022842859881*^9}, {3.7786215985608873`*^9, 3.778621607163808*^9}, {
   3.778621762731716*^9, 3.778621763295855*^9}, {3.778621811470951*^9, 
   3.778621835966031*^9}, {3.778621908211347*^9, 3.778621944537122*^9}, {
   3.778622154554508*^9, 3.778622221980188*^9}, {3.77884078049496*^9, 
   3.778840795575282*^9}, {3.7788409029483833`*^9, 3.778840917014233*^9}, {
   3.778840948783299*^9, 3.7788409547388487`*^9}, {3.7788409974172297`*^9, 
   3.778841025154604*^9}, {3.778841235894061*^9, 3.7788412824696617`*^9}, 
   3.7788447634971457`*^9, {3.778845054202299*^9, 3.778845123745105*^9}, {
   3.77884532711653*^9, 3.778845454380855*^9}, {3.778845487650425*^9, 
   3.7788454896868134`*^9}, {3.778845538361224*^9, 3.7788455415023746`*^9}, {
   3.7788455835776453`*^9, 3.778845609651104*^9}, {3.778845767040596*^9, 
   3.778845846307096*^9}, {3.7788619867068357`*^9, 3.778862078293138*^9}, {
   3.778862109489846*^9, 3.778862311812386*^9}, {3.7788624161409903`*^9, 
   3.7788626070830603`*^9}, {3.778862768075809*^9, 3.7788628008739557`*^9}, {
   3.778862881586177*^9, 3.778862882473751*^9}, {3.7788629315563498`*^9, 
   3.7788629471933727`*^9}, {3.778863069331356*^9, 3.7788631684562387`*^9}, {
   3.7788632049881763`*^9, 3.778863406678536*^9}, {3.778863443269465*^9, 
   3.778863615721387*^9}, {3.778863650026497*^9, 3.778863671927257*^9}, {
   3.778867672458761*^9, 3.7788676794860497`*^9}, {3.779033644507044*^9, 
   3.779033662808722*^9}, 3.7790337323054113`*^9, {3.779034278675323*^9, 
   3.779034320065803*^9}, {3.779037152133876*^9, 3.779037288200972*^9}, 
   3.77903811551853*^9, {3.7790385050857162`*^9, 3.77903855445605*^9}, {
   3.779039846390087*^9, 3.779039848760129*^9}, {3.779048112484322*^9, 
   3.7790481735439787`*^9}, {3.7790483120015383`*^9, 3.77904831698695*^9}, {
   3.77911013666819*^9, 3.779110173922703*^9}, {3.779110314720332*^9, 
   3.779110334058585*^9}, {3.779110381355462*^9, 3.779110465381074*^9}, {
   3.779110495877336*^9, 3.779110564122591*^9}, {3.779110638111312*^9, 
   3.7791107155185204`*^9}, {3.77939385605653*^9, 3.779393859890224*^9}, {
   3.779394273392818*^9, 3.779394292084826*^9}, {3.779394409124611*^9, 
   3.7793944129013653`*^9}, {3.779394507874016*^9, 3.779394509672906*^9}, {
   3.779394771815062*^9, 3.7793948226018877`*^9}, 3.779395098111453*^9, {
   3.779395191693451*^9, 3.779395243025589*^9}, {3.779395901527179*^9, 
   3.779395934595215*^9}, 3.7793959774385147`*^9, {3.7793960084698057`*^9, 
   3.7793960817414913`*^9}, {3.7793961563505497`*^9, 3.779396163933777*^9}, {
   3.77939725316391*^9, 3.7793972727209187`*^9}, {3.779397336188492*^9, 
   3.779397342048086*^9}, {3.779397396487748*^9, 3.7793974003517723`*^9}, {
   3.77939744424476*^9, 3.779397504759123*^9}, {3.779397545540091*^9, 
   3.779397551854529*^9}, {3.779398036683157*^9, 3.779398046672182*^9}, {
   3.779398340371122*^9, 3.779398375040558*^9}, {3.779398406597391*^9, 
   3.779398408367506*^9}, {3.779399841595326*^9, 3.779399985521468*^9}, 
   3.7794001930583153`*^9, {3.779402196364098*^9, 3.7794022391924257`*^9}, {
   3.779402323683868*^9, 3.7794023262562847`*^9}, {3.779444503284111*^9, 
   3.779444509924898*^9}, {3.779444540391955*^9, 3.7794445763808603`*^9}, {
   3.7794800964050407`*^9, 3.7794805093626738`*^9}, {3.779480549295912*^9, 
   3.7794806950882187`*^9}, {3.7794807366177683`*^9, 3.779480773084024*^9}, {
   3.77948084601195*^9, 3.779480858084553*^9}, {3.779480898768421*^9, 
   3.7794809968643723`*^9}, {3.7794810436237497`*^9, 
   3.7794813785064917`*^9}, {3.779481415582551*^9, 3.779481418802849*^9}, {
   3.779481486221704*^9, 3.779481677371889*^9}, {3.779481907996022*^9, 
   3.779481927218821*^9}, {3.779482015045779*^9, 3.7794820247102203`*^9}, {
   3.779482105775154*^9, 3.77948247478406*^9}, {3.7794825054111853`*^9, 
   3.779482524814086*^9}, {3.779482694327018*^9, 3.779482726393261*^9}, {
   3.779482789731214*^9, 3.779482805504257*^9}, {3.779482879022169*^9, 
   3.779482909967506*^9}, {3.779484148631238*^9, 3.779484225399007*^9}, {
   3.7794842715879927`*^9, 3.7794843060815907`*^9}, {3.779484381738022*^9, 
   3.779484389318284*^9}, {3.779487106048107*^9, 3.7794871238226624`*^9}, 
   3.7794871820460653`*^9, {3.77948721713317*^9, 3.779487220912273*^9}, {
   3.779487276734619*^9, 3.779487290559629*^9}, {3.7794894431136*^9, 
   3.779489469946666*^9}, {3.779784128433652*^9, 3.779784155175622*^9}, {
   3.7798326804498577`*^9, 3.779832748509782*^9}, {3.779832786430724*^9, 
   3.77983282845758*^9}, 3.77983285862143*^9, {3.7798329928855143`*^9, 
   3.779833029899994*^9}, {3.7798331352772303`*^9, 3.779833255140033*^9}, {
   3.779833301099079*^9, 3.7798334424232197`*^9}, {3.779833479266398*^9, 
   3.7798335334094257`*^9}, {3.779833838645618*^9, 3.779833967437744*^9}, {
   3.779834070766725*^9, 3.7798341028851748`*^9}, {3.779969748322538*^9, 
   3.7799697720845947`*^9}, {3.779972192432929*^9, 3.779972198119748*^9}, {
   3.779972336057046*^9, 3.779972361788706*^9}, 3.7799724062576237`*^9, {
   3.779973615665147*^9, 3.779973641226108*^9}, {3.7799736947987823`*^9, 
   3.779973911725975*^9}, 3.77997395435469*^9, {3.779974358078724*^9, 
   3.779974388750577*^9}, 3.780779136080361*^9, 3.781015014095047*^9, {
   3.7810198441260138`*^9, 3.78101986867594*^9}, {3.7820842492581043`*^9, 
   3.782084327666787*^9}, {3.782258157312935*^9, 3.782258288290019*^9}, {
   3.782258376626354*^9, 3.782258405433157*^9}, {3.7822584355493526`*^9, 
   3.7822587872614727`*^9}, {3.7822588212584553`*^9, 
   3.782259107898672*^9}},ExpressionUUID->"0cd99394-7461-4bed-8931-\
53bb46a7c3e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "7 Secondary Geometric Algebra Operations:\n",
 StyleBox["\tHodge Dual, Norm, Gorm, Reverse, Inverse", "Subchapter"]
}], "Chapter",
 CellChangeTimes->{{3.6910744651461782`*^9, 3.691074524520515*^9}, {
  3.777991856354135*^9, 
  3.777991857764748*^9}},ExpressionUUID->"c4071c67-5988-4b9c-9562-\
4d1442c8ccac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GormG", "[", "clif_", "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"ScalarPrdtG", "[", 
     RowBox[{
      RowBox[{"ReverseG", "[", "clif", "]"}], ",", "clif"}], "]"}], "]"}]}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{" ", 
    RowBox[{"atom", " ", "=", " ", 
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"Subscript", "[", 
        RowBox[{"e", ",", " ", "i"}], "]"}], 
       RowBox[{"Subscript", "[", 
        RowBox[{"e", ",", " ", "j"}], "]"}]}], "..."}]}], "  ", ")"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HodgeDual5G", "[", 
    RowBox[{"clif_", ",", " ", "n_"}], "]"}], " ", ":=", "  ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\n", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"INPUTS", ":", " ", 
             RowBox[{
             "A", " ", "clif", " ", "and", " ", "dimension", " ", "n", "\n", 
              "\n", "METHOD"}], ":", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                StyleBox["Experimental",
                 FontWeight->"Plain",
                 FontVariations->{"Underline"->True}], 
                StyleBox[" ",
                 FontWeight->"Plain",
                 FontVariations->{"Underline"->True}], 
                RowBox[{
                 StyleBox["version",
                  FontWeight->"Plain",
                  FontVariations->{"Underline"->True}], ".", " ", "Nice"}], 
                " ", "properties", " ", "but"}], "..."}], " ", "fails", " ", 
              "to", " ", "preserve", " ", "some", " ", 
              RowBox[{"identities", ".", "\n", "Let"}], "  ", "V"}]}], " ", 
            "=", " ", 
            RowBox[{
             RowBox[{
             "reals", " ", "or", " ", "complex", " ", "numbers", " ", "of", 
              " ", "dimension", " ", 
              RowBox[{
               RowBox[{"n", ".", "  ", "Let"}], " ", 
               SuperscriptBox["\[Wedge]", "p"], "V"}], " ", 
              RowBox[{"and", " ", 
               SuperscriptBox["\[Wedge]", 
                RowBox[{"n", "-", "p"}]], "V"}], " ", "be", " ", "the", " ", 
              SuperscriptBox["p", "th"], " ", "and", " ", "\n", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"n", "-", "p"}], ")"}], "th"], " ", "exterior", " ", 
              "powers", " ", "of", " ", "V", " ", "for", " ", "every", " ", 
              "p"}], " ", "\[LessEqual]", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"n", ".", " ", "A"}], " ", "Hodge", " ", "dual", " ", 
               "maps", " ", "members", " ", 
               RowBox[{"of", " ", 
                SuperscriptBox["\[Wedge]", "p"], "V"}], " ", 
               RowBox[{"to", " ", 
                SuperscriptBox["\[Wedge]", 
                 RowBox[{"n", "-", "p"}]], "V"}], " ", "\n", "and", " ", 
               "vice", " ", 
               RowBox[{"versa", ".", " ", "There"}], " ", "are", " ", 
               "various", " ", "Hodge", " ", "duals", " ", "in", " ", "the", 
               " ", "literature", " ", "but", " ", "to", " ", "my", " ", 
               "knowledge", "\n", "none", " ", "of", " ", "them", " ", "are", 
               " ", "isomorphisms", " ", "because", " ", "they", " ", "rely", 
               " ", "on", " ", "a", " ", "geometric", " ", "product", " ", 
               "with", " ", "the", " ", "pseudo"}], "-", "\n", 
              RowBox[{"scalar", " ", "i", " ", 
               RowBox[{"(", 
                RowBox[{"or", " ", 
                 SuperscriptBox["i", 
                  RowBox[{"-", "1"}]]}], ")"}]}]}]}]}], ",", " ", 
           RowBox[{
            RowBox[{
            "and", " ", "since", " ", "there", " ", "are", " ", "always", " ",
              "values", " ", "of", " ", "n", " ", "such", " ", "that", " ", 
             SuperscriptBox["i", "2"]}], "=", " ", 
            RowBox[{"-", "1"}]}], ",", " ", 
           RowBox[{
            RowBox[{
            "then", " ", "these", " ", "\n", "Hodge", " ", "formulas", " ", 
             "send", " ", "clif"}], " ", "\[Rule]", " ", 
            RowBox[{
             RowBox[{"hodge", " ", "but", " ", "hodge"}], " ", "\[Rule]", " ", 
             RowBox[{
              RowBox[{"-", " ", "clif"}], " ", "in", " ", "such", " ", 
              RowBox[{"cases", ".", "\n", "\n", "It"}], " ", "is", " ", 
              "desireable", " ", "to", " ", "have", " ", "a", " ", "hodge", 
              " ", "dual", " ", "formula", " ", "that", " ", "represents", 
              " ", "an", " ", "isomorphism", " ", "for", " ", "every", "\n", 
              "case"}]}]}], ",", " ", 
           RowBox[{
            RowBox[{
            "and", " ", "that", " ", "is", " ", "what", " ", "is", " ", 
             "defined", " ", 
             RowBox[{"here", ".", " ", "This"}], " ", "Hodge", " ", "dual", 
             " ", "formula", " ", "sends", " ", "clif"}], " ", "\[Rule]", " ", 
            RowBox[{
             RowBox[{"hodge", " ", "and", "\n", "hodge"}], " ", "\[Rule]", 
             " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "clif", " ", "for", " ", "every", " ", "n", " ", "and", 
                    " ", "p"}], " ", "\[LessEqual]", " ", 
                    RowBox[{
                    RowBox[{"n", ".", " ", "The"}], " ", "pseudoscalar", " ", 
                    "is", " ", "only", " ", "used", " ", "for", " ", 
                    "finding", " ", "the", "\n", "complementary", " ", 
                    "basis", " ", 
                    RowBox[{"elements", ".", " ", "It"}], " ", "is", " ", 
                    "not", " ", "used", " ", "in", " ", "a", " ", "geometric",
                     " ", 
                    RowBox[{"product", ".", "\n", "\t", "\n", "The"}], " ", 
                    "method", " ", "begins", " ", "by", " ", "sending", " ", 
                    "an", " ", "\"\<atom\>\"", " ", "a", " ", 
                    SubscriptBox["e", 
                    RowBox[{"i", 
                    RowBox[{"(", "1", ")"}]}]], 
                    SubscriptBox["e", 
                    RowBox[{"i", 
                    RowBox[{"(", "2", ")"}]}]]}]}], "..."}], 
                   SubscriptBox["e", 
                    RowBox[{"i", 
                    RowBox[{"(", "k", ")"}]}]], " ", "to", " ", "a", " ", 
                   SubscriptBox["e", 
                    RowBox[{"i", 
                    RowBox[{"(", 
                    RowBox[{"k", "+", "1"}], ")"}]}]]}], "..."}], 
                 SubscriptBox["e", 
                  RowBox[{"i", 
                   RowBox[{"(", "n", ")"}]}]], " ", "where", "\n", "   ", "i", 
                 RowBox[{"(", "1", ")"}]}], " ", "<", " ", 
                RowBox[{"i", 
                 RowBox[{"(", "2", ")"}]}], " ", "<"}], " ", "..."}], " ", 
              "<", " ", 
              RowBox[{"i", 
               RowBox[{"(", "k", ")"}]}]}]}]}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"i", 
               RowBox[{"(", 
                RowBox[{"k", "+", "1"}], ")"}]}], " ", "<"}], " ", "..."}], 
            " ", "<", " ", 
            RowBox[{"i", 
             RowBox[{"(", "n", ")"}]}]}], ",", " ", 
           RowBox[{
            RowBox[{"and", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"i", 
                RowBox[{"(", "1", ")"}]}], ",", " ", "...", ",", " ", 
               RowBox[{"i", 
                RowBox[{"(", "n", ")"}]}]}], "}"}]}], " ", "=", " ", 
            RowBox[{"(", 
             RowBox[{"1", ",", " ", "...", ",", " ", "n"}]}]}]}], "}"}], ".", 
         "\n", "Then"}], " ", "the", " ", "Mathematica", " ", "outer", " ", 
        "product", " ", "is", " ", "used", " ", "to", " ", "extend", " ", 
        "this", " ", "to", " ", "any", " ", "linear", " ", "combination", " ",
         "of", " ", "\n", "expressions", " ", "like", " ", "a", " ", 
        SubscriptBox["e", 
         RowBox[{"i", 
          RowBox[{"(", "1", ")"}]}]], 
        SubscriptBox["e", 
         RowBox[{"i", 
          RowBox[{"(", "2", ")"}]}]]}], "..."}], 
      RowBox[{
       SubscriptBox["e", 
        RowBox[{"i", 
         RowBox[{"(", "k", ")"}]}]], ".", " ", "Since"}], " ", "every", " ", 
      "multivector"}], ",", " ", 
     RowBox[{"whether", " ", "homogeneous", " ", "or", " ", "not"}], ",", 
     "\n", 
     RowBox[{"is", " ", "such", " ", "a", " ", "linear", " ", "combination"}],
      ",", " ", 
     RowBox[{"this", " ", "completes", " ", "the", " ", 
      RowBox[{"definition", ".", "\n", "\n", "HodegDual0"}], " ", "processes",
       " ", "an", " ", 
      RowBox[{"atom", ".", " ", "HodgeDual5G"}], " ", "performs", " ", "the", 
      " ", "outer", " ", 
      RowBox[{"product", ".", "\n", "\n", 
       RowBox[{"OUTPUT", ":", " ", 
        RowBox[{
        "The", " ", "Hodge", " ", "Dual", " ", "of", " ", "clif"}]}]}]}]}], 
    "  ", "*)"}], "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cliflist", ",", " ", "hodgelist", ",", " ", "hodge"}], "}"}], 
     ",", "\n", "  ", 
     RowBox[{
      RowBox[{"cliflist", " ", "=", " ", 
       RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", "  ", 
      RowBox[{"hodgelist", " ", "=", " ", 
       RowBox[{"Outer", "[", 
        RowBox[{"HodgeDual0G", ",", " ", "cliflist", ",", " ", 
         RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"hodge", " ", "=", " ", 
       RowBox[{"ListToClifG", "[", "hodgelist", "]"}]}]}]}], "]"}]}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "HodgeDual5G"}], "  ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Used", " ", "by", " ", "HodgeDual5G"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HodgeDual0G", "[", 
    RowBox[{"atom_", ",", " ", "n_"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "free", ",", " ", "elist", ",", " ", "ilist", ",", " ", "hodgelist", 
       ",", " ", "ehodge", ",", " ", "coef", ",", " ", "hodge"}], "}"}], ",", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"free", " ", "=", " ", 
       RowBox[{"FreeTermG", "[", "atom", "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Non", "-", 
         RowBox[{"constant", " ", "terms"}]}], ",", " ", 
        RowBox[{"if", " ", "any"}]}], " ", "*)"}], "\n", "  ", 
      RowBox[{"coef", " ", "=", " ", 
       RowBox[{"atom", " ", "/.", " ", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "u_"}], "]"}], " ", "->", " ", "1"}]}]}], 
      ";", "\n", "  ", 
      RowBox[{"elist", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"SubscriptListG", "[", "atom", "]"}], "]"}]}], ";", "\n", 
      "  ", 
      RowBox[{"i", " ", "=", " ", 
       RowBox[{"PseudoScalarG", "[", "n", "]"}]}], ";", "\n", "  ", 
      RowBox[{"ilist", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"SubscriptListG", "[", "i", "]"}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"hodgelist", " ", "=", " ", 
       RowBox[{"Complement", "[", 
        RowBox[{"ilist", ",", " ", "elist"}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{"debug8", ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<atom = \>\"", ",", "atom", ",", " ", "\"\<, free term = \>\"", 
          ",", " ", "free", ",", " ", 
          "\"\<, \n\tlist of bassis elements in the dual = \>\"", ",", " ", 
          "hodgelist"}], "]"}]}], "]"}], ";", "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"hodgelist", " ", "===", " ", 
         RowBox[{"{", "}"}]}], ",", "\n", "   \t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"free", " ", "===", " ", "0"}], " ", "||", " ", 
           RowBox[{"free", " ", "===", " ", "0."}]}], ",", "\n", "    \t\t", 
          RowBox[{"hodge", " ", "=", " ", "atom"}], ",", "    ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"atom", " ", "is", " ", "a", " ", "constant"}], ",", " ", 
            
            RowBox[{"dimension", " ", "is", " ", "zero"}]}], " ", "*)"}], 
          "\n", "    \t\t", 
          RowBox[{"hodge", " ", "=", " ", "coef"}]}], "]"}], ",", "   ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "atom", " ", "is", " ", "a", " ", "constant", " ", "times", " ", 
          "i"}], " ", "*)"}], "\n", "   \t", "\n", "   \t", 
        RowBox[{
         RowBox[{"ehodge", " ", "=", " ", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"e", ",", " ", 
             RowBox[{"Sequence", " ", "@@", " ", "hodgelist"}]}], "]"}], " ", 
           "//.", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["e", 
               RowBox[{"u_", ",", "v__"}]], " ", "->", " ", 
              RowBox[{
               SubscriptBox["e", "u"], " ", 
               SubscriptBox["e", "v"]}]}], ",", " ", 
             RowBox[{
              SubscriptBox["e", 
               RowBox[{"uv_", ",", "w__"}]], " ", "->", "  ", 
              RowBox[{
               SubscriptBox["e", "uv"], " ", 
               SubscriptBox["e", "w"]}]}]}], "}"}]}]}], ";", "\n", "   \t", 
         RowBox[{"hodge", " ", "=", " ", 
          RowBox[{"coef", " ", "ehodge"}]}]}]}], "]"}], ";", "\n", "  ", 
      "hodge"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "HodgeDual0G"}], "  ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HodgeDualG", "[", 
    RowBox[{"clif_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"clif", "\[Diamond]", 
    RowBox[{"PseudoScalarG", "[", "n", "]"}]}]}], "  ", 
  RowBox[{"(*", "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"INPUTS", ":", " ", 
      RowBox[{
      "A", " ", "clif", " ", "and", " ", "space", " ", "dimension", " ", "n", 
       "\n", "\n", "METHOD"}], ":", " ", 
      RowBox[{
       RowBox[{"The", " ", "Hodge", " ", "Dual", " ", 
        RowBox[{"(", 
         RowBox[{"or", " ", "Hodge", " ", "Star"}], ")"}], " ", "of", " ", 
        "a", " ", "clif", " ", "of", " ", "grade", " ", "p"}], " ", 
       "\[LessEqual]", " ", 
       RowBox[{
        RowBox[{
        "n", " ", "is", " ", "the", " ", "unique", " ", "\n", "\t", 
         "multivector"}], " ", "\[Star]", 
        RowBox[{"clif2", " ", "that", " ", "satisfies", "\n", "\t\t", 
         RowBox[{"clif1", " ", "\[Wedge]"}]}], " ", "\[Star]", "clif2"}]}]}], 
     " ", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"clif1", " ", "\[CenterDot]", " ", "clif2"}], ")"}], " ", 
       "\[Diamond]", " ", "i"}], "  ", "for", " ", "every", " ", "clif1", " ",
       "of", " ", "same", " ", "grade", " ", "as", " ", "clif2"}]}], ",", 
    "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
        "where", " ", "i", " ", "is", " ", "the", " ", "PseudoScalar", " ", 
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"]}], "..."}], 
       SubscriptBox["e", "n"], "\n", "\t", "\n", "\t", "This", " ", 
       "definition", " ", "extends", " ", "linearly", " ", "to", " ", "a", 
       " ", "general", " ", "clif", " ", "of", " ", "dimension", " ", "n", 
       " ", "which", "\n", "\t", "is", " ", "the", " ", "sum", " ", "of", " ",
        "blades", " ", "of", " ", "grades", " ", "0"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"n", ".", "\n", "\t", "\n", "\t", "This"}], " ", "package", 
       " ", "can", " ", "be", " ", "used", " ", "to", " ", "check", " ", 
       "that", " ", "the", " ", "following", " ", "definition", " ", 
       "satisfies", " ", "\n", "\t", "the", " ", 
       RowBox[{"condition", ":", "\n", "\t\t", 
        RowBox[{"*", "clif2"}]}]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"clif2", " ", "\[Diamond]", " ", "i"}], "\n", "\t", "\n", "\t", 
      
      RowBox[{"Note", ":", " ", 
       RowBox[{"i", " ", "\[Diamond]", " ", "clif2"}]}]}]}], ",", " ", 
    RowBox[{
     SuperscriptBox["i", 
      RowBox[{"-", "1", " "}]], "\[Diamond]", " ", "clif2"}], ",", " ", 
    RowBox[{"and", " ", 
     RowBox[{"clif2", " ", "\[Diamond]", " ", 
      SuperscriptBox["i", 
       RowBox[{"-", "1"}]]}], " ", "all", " ", "fail", " ", "to", " ", 
     "satisfy", " ", "this", " ", "condition", "\n", "\t\t", "This", " ", 
     "product", " ", "is", " ", "sometimes", " ", "used", " ", "in", " ", 
     "books", " ", "and", " ", "so", " ", "is", " ", "the", " ", "alternate", 
     " ", "definition"}], ",", " ", 
    RowBox[{"below", "\n", "\n", 
     RowBox[{"OUTPUT", ":", " ", 
      RowBox[{
      "The", " ", "Hodge", " ", "Dual", " ", "of", " ", "clif"}]}]}]}], "  ", 
   "*)"}], "\n", "  ", "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "HodgeDualG"}], "  ", "*)"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"HodgeDual2G", "[", 
    RowBox[{"clif_", ",", "n_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "inverse", ",", "hodge"}], "}"}], ",", 
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"PseudoScalarG", "[", "n", "]"}]}], ";", 
      RowBox[{"inverse", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", "\[Diamond]", "i"}], ")"}], "i"}]}], ";", 
      RowBox[{"hodge", "=", 
       RowBox[{"clif", "\[Diamond]", "inverse"}]}]}]}], "]"}]}], "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Alternate", " ", 
     RowBox[{"version", ":", " ", "hodge"}]}], " ", "=", " ", 
    RowBox[{"clif", " ", "\[Diamond]", " ", 
     SuperscriptBox["i", 
      RowBox[{"-", "1"}]]}]}], "  ", "*)"}], "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifClifG", "[", "clifclif_", "]"}], ":=", 
   RowBox[{"ListToClifG", "[", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"AtomListG", "[", "clifclif", "]"}], ",", "\n", 
       RowBox[{"AtomListG", "[", 
        RowBox[{"CollectG", "[", 
         RowBox[{"clifglobal", "\[Diamond]", "clifclif"}], "]"}], "]"}]}], 
      "]"}], "]"}], "]"}]}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Local", " ", "function", " ", "used", " ", "only", " ", "in", " ", 
     RowBox[{"InverseG", ".", " ", "It"}], " ", "is", " ", "run", " ", 
     "iteratively", " ", "by", " ", 
     RowBox[{"FixedPoint", ".", " ", "\n", "   ", "Makes"}], " ", "an", " ", 
     "expression", " ", "with", " ", "unit", " ", "coefficients", " ", "from",
      " ", 
     RowBox[{"clif", " ", "\[Diamond]", " ", "clifclif"}]}], ",", " ", 
    RowBox[{
     RowBox[{"where", " ", "clifglobal"}], " ", "=", " ", "\n", "   ", 
     "clif"}], ",", " ", 
    RowBox[{
    "a", " ", "global", " ", "variable", " ", "for", " ", "clif", " ", "in", 
     " ", 
     RowBox[{"InverseG", ".", " ", "Must"}], " ", "assign", " ", "a", " ", 
     "global", " ", "variable", " ", "because", " ", "\n", "   ", "ClifClifG",
      " ", "can", " ", "have", " ", "just", " ", "a", " ", "single", " ", 
     "input", " ", "in", " ", "order", " ", "for", " ", "FixedPoint", " ", 
     "to", " ", "work", " ", 
     RowBox[{"properly", ".", "\n", "   ", "It"}], " ", "would", " ", "have", 
     " ", "been", " ", "nice", " ", "to", " ", "also", " ", "pass", " ", 
     "clif", " ", "as", " ", "an", " ", "input", " ", "but", " ", "the", " ", 
     "result", " ", "of", " ", "\n", "   ", 
     RowBox[{"ClifClifG", "[", "clifclif", "]"}], " ", "is", " ", "fed", " ", 
     "back", " ", "into", " ", "the", " ", "clifclif", " ", "input", " ", 
     "to", " ", "be", " ", "run", " ", 
     RowBox[{"iteratively", ".", " ", "Were"}], " ", "there", " ", "\n", 
     "   ", "two", " ", "inputs"}], ",", " ", 
    RowBox[{
    "Mathematica", " ", "would", " ", "not", " ", "know", " ", "which", " ", 
     "input", " ", "to", " ", "feed", " ", "the", " ", "result", " ", "back", 
     " ", 
     RowBox[{"into", "."}]}]}], " ", "*)"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseG", "[", "clif_", "]"}], ":=", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"  ", 
        RowBox[{
         RowBox[{"INPUT", ":", "  ", "clif"}], ",", " ", 
         RowBox[{"a", " ", 
          RowBox[{"multivector", ".", "\n", "\n", "\t", 
           RowBox[{"PROCESS", ":", "\n", "\t\t", 
            RowBox[{
             RowBox[{"The", " ", "straight"}], "-", "forward"}]}]}]}], ",", 
         " ", 
         RowBox[{"but", " ", "computationally", " ", "expensive"}], ",", " ", 
         
         RowBox[{
          RowBox[{"way", " ", "to", " ", "compute", " ", 
           RowBox[{
            SuperscriptBox["clif", 
             RowBox[{"-", "1"}]], ":", "\n", "\t\t\t", 
            RowBox[{"Set", " ", 
             SuperscriptBox["clif", 
              RowBox[{"-", "1"}]]}]}]}], " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["b", "0"], " ", "+", " ", 
              RowBox[{
               SubscriptBox["b", "1"], 
               SubscriptBox["e", "1"]}], " ", "+"}], " ", "..."}], " ", "+", 
            " ", 
            RowBox[{
             SubscriptBox["b", 
              RowBox[{"1", ",", "...", ",", "n"}]], 
             SubscriptBox["e", 
              RowBox[{"1", ",", "...", ",", "n"}]], " ", 
             RowBox[{"(", 
              RowBox[{"Note", ":", " ", 
               RowBox[{
                SuperscriptBox["2", "n"], " ", "unknowns"}]}], ")"}], "\n", 
             "\t\t\t", "Compute", " ", 
             RowBox[{"clif", " ", "\[Diamond]", " ", 
              SuperscriptBox["clif", 
               RowBox[{"-", "1"}]]}]}]}], " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"1", " ", "+", " ", 
              RowBox[{"0", " ", 
               SubscriptBox["e", "1"]}], " ", "+"}], " ", "..."}], " ", "+", 
            " ", 
            RowBox[{"0", " ", 
             SubscriptBox["e", 
              RowBox[{"1", ",", "...", ",", "n"}]], " ", 
             RowBox[{"(", 
              RowBox[{"Note", ":", " ", 
               RowBox[{
                SuperscriptBox["2", "n"], " ", "equations"}]}], ")"}], "\n", 
             "\t\t\t", "Solve", " ", "the", " ", 
             SuperscriptBox["2", "n"], " ", "equations", " ", "in", " ", 
             "the", " ", 
             SuperscriptBox["2", "n"], " ", "unknowns", "\n", "\t\t\t", 
             "This", " ", "computation", " ", "grows", " ", "as", " ", 
             SuperscriptBox["2", "n"], " ", "where", " ", "n", " ", "is", " ",
              "the", " ", "dimension", " ", "of", " ", "the", " ", "clif", 
             "\n", "\t\t", "The", " ", "computationally", " ", "efficient", 
             " ", 
             RowBox[{"way", ":", "\n", "\t\t\t", 
              RowBox[{"For", " ", "a", " ", "given", " ", "clif"}]}]}]}]}]}], 
         ",", " ", 
         RowBox[{
          RowBox[{
          "find", " ", "a", " ", "smaller", " ", "set", " ", "of", " ", 
           RowBox[{"b", "'"}], "s", " ", "that", " ", "might", " ", "be", " ",
            "non"}], "-", 
          RowBox[{"zero", ".", " ", "Say"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"m", " ", "of", " ", 
          RowBox[{"them", ".", " ", "Must"}], " ", "be", " ", "sure", " ", 
          "that", " ", "the", " ", "deleted", " ", 
          RowBox[{"b", "'"}], "s", " ", "would", " ", "have", " ", "been", 
          " ", "set", " ", "to", " ", "0.", "\n", "\t\t\t", "Sove", " ", 
          "the", " ", "m", " ", "equations", " ", "in", " ", "m", " ", 
          RowBox[{"unkowns", ".", "\n", "\t\t\t", "This"}], " ", 
          "computation", " ", "is", " ", "proportional", " ", "to", " ", 
          "the", " ", "number", " ", "of", " ", "terms", " ", "m", " ", 
          "that", " ", "are", " ", "required"}], ",", " ", "\n", "\t\t\t\t", 
         RowBox[{
         "usually", " ", "closer", " ", "to", " ", "the", " ", "number", " ", 
          "of", " ", "terms", " ", "in", " ", "clif", " ", "than", " ", "to", 
          " ", 
          SuperscriptBox["2", "n"], "\t\t\t", "\n", "\t\t\t", "The", " ", 
          "effort", " ", "remains", " ", "constant", " ", "as", " ", "n", " ", 
          RowBox[{"grows", ".", " ", "For"}], " ", "ANY", " ", "n"}], ",", 
         " ", 
         RowBox[{
          RowBox[{
          "it", " ", "depends", " ", "only", " ", "on", " ", "m", "\n", 
           "\t\t", "Procedure", " ", "for", " ", "finding", " ", "the", " ", 
           "minimal", " ", "expression", " ", "for", " ", 
           RowBox[{
            SuperscriptBox["clif", 
             RowBox[{"-", "1"}]], ":", "\n", "\t\t\t", 
            RowBox[{"Start", " ", "with", " ", 
             SuperscriptBox["clif", 
              RowBox[{"-", "1"}]], " ", "having", " ", "the", " ", "same", 
             " ", "atoms", " ", "as", " ", 
             RowBox[{"clif", ".", "\n", "\t\t\t", "Compute"}], " ", 
             RowBox[{"clif", " ", "\[Diamond]", " ", 
              SuperscriptBox["clif", 
               RowBox[{"-", "1"}]]}], " ", "and", " ", "add", " ", "any", " ",
              "new", " ", "atoms", " ", "to", " ", "those", " ", "already", 
             " ", "present", " ", "in", " ", 
             SuperscriptBox["clif", 
              RowBox[{"-", "1"}]], "\n", "\t\t\t", "Compute", " ", 
             RowBox[{"clif", " ", "\[Diamond]", " ", "new"}], " ", 
             SuperscriptBox["clif", 
              RowBox[{"-", "1"}]], " ", "and", " ", "add", " ", "any", " ", 
             "new", " ", 
             RowBox[{"atoms", ".", " ", "Continue"}], " ", "until", " ", 
             "new", " ", 
             SuperscriptBox["clif", 
              RowBox[{"-", "1"}]], " ", "\n", "\t\t\t\t", 
             RowBox[{"doesn", "'"}], "t", " ", 
             RowBox[{"change", ".", "\n", "\t\t\t", "Often"}], " ", "this", 
             " ", "adds", " ", "just", " ", "a", " ", "few", " ", "new", " ", 
             
             RowBox[{"terms", ".", " ", "In"}], " ", "a", " ", "bad", " ", 
             "case", " ", "it", " ", "generates", " ", "all", " ", 
             RowBox[{
              SuperscriptBox["2", "n"], ".", "\n", "\t\t", "gormClif"}]}]}]}],
           " ", "=", " ", 
          RowBox[{
           RowBox[{"the", " ", "gorm", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"i", ".", "e", "."}], ",", " ", 
              SuperscriptBox["norm", "2"]}], ")"}], " ", "of", " ", 
            RowBox[{"clif", ".", " ", "Used"}], " ", "to", " ", "handle", " ",
             "the", " ", "special", " ", "case", " ", "of", " ", "0.", "\n", 
            "\t\t", "clifGlobal"}], " ", "=", " ", 
           RowBox[{
            RowBox[{"Saved", " ", "value", " ", "of", " ", 
             RowBox[{"clif", ".", " ", "Need"}], " ", "a", " ", "Global`", 
             " ", "variable", " ", "to", " ", "feed", " ", "ClifClifListG", 
             "\n", "\t\t\t", "external", " ", "function", " ", "that", " ", 
             "computes", " ", 
             RowBox[{"clifGlobal", " ", "\[Diamond]", " ", 
              SuperscriptBox["clif", 
               RowBox[{"-", "1"}]]}], " ", "repeatedly", "\n", "\t\t", 
             "sumInvAtom"}], " ", "=", " ", 
            RowBox[{
            "Result", " ", "of", " ", "repeating", " ", "performing", " ", 
             "the", " ", "following", " ", "computations", " ", "until", " ", 
             "\n", "\t\t\t", "the", " ", "result", " ", 
             RowBox[{"doesn", "'"}], "t", " ", 
             RowBox[{"change", ":", "\n", "\t\t\t\t", 
              RowBox[{"Compute", " ", 
               RowBox[{"clif", " ", "\[Diamond]", " ", 
                SuperscriptBox["clif", 
                 RowBox[{"-", "1"}]]}], " ", "\n", "\t\t\t\t", "Create", " ", 
               "the", " ", "atom", " ", "list", " ", "of", " ", 
               RowBox[{"clif", " ", "\[Diamond]", " ", 
                SuperscriptBox["clif", 
                 RowBox[{"-", "1"}]]}], " ", "\n", "\t\t\t\t", "Take", " ", 
               "the", " ", "union", " ", "with", " ", "the", " ", "atom", " ",
                "list", " ", "of", " ", 
               SuperscriptBox["clif", 
                RowBox[{"-", "1"}]], "\n", "\t\t\t\t", "Delete", " ", 
               "duplicate", " ", "atomsfrom", " ", "the", " ", "list", "\n", 
               "\t\t\t\t", "Change", " ", "this", " ", "list", " ", "back", 
               " ", "to", " ", "an", " ", "expression"}]}]}]}]}]}], ",", " ", 
         
         RowBox[{
          RowBox[{"the", " ", "new", " ", 
           SuperscriptBox["clif", 
            RowBox[{"-", "1"}]], "\n", "\t\t\t\t", "Go", " ", "back", " ", 
           "to", " ", "step", " ", "1", " ", "and", " ", "repeat", " ", 
           "until", " ", "new", " ", 
           SuperscriptBox["clif", 
            RowBox[{"-", "1"}]]}], " ", "=", " ", 
          RowBox[{"old", " ", 
           SuperscriptBox["clif", 
            RowBox[{"-", "1"}]], "\n", "\t\t", 
           RowBox[{"FixedPoint", ":", " ", 
            RowBox[{
            "A", " ", "Mathematica", " ", "function", " ", "that", " ", 
             "repeatedly", " ", "computes", " ", "ClifClifG", 
             RowBox[{"{", 
              SuperscriptBox["clif", 
               RowBox[{"-", "1"}]]}]}]}]}]}]}], "]"}], "\n", "\t\t", 
       RowBox[{"ClifClifG", ":", " ", 
        RowBox[{
        "An", " ", "external", " ", "function", " ", "that", " ", "computes", 
         " ", 
         SuperscriptBox["clif", 
          RowBox[{"-", "1"}]], " ", "repeatedly", " ", "until", " ", "it", 
         " ", 
         RowBox[{"doesn", "'"}], "t", " ", "\n", "\t\t\t", 
         RowBox[{"change", ".", " ", "ClifClifG"}], " ", "may", " ", "add", 
         " ", "as", " ", "few", " ", "a", " ", "one", " ", "new", " ", "term",
          " ", 
         RowBox[{"(", 
          RowBox[{"a", " ", "constant"}], ")"}], " ", "or", " ", "it", " ", 
         "could", " ", "grow", " ", "to", "\n", "\t\t\t", 
         SuperscriptBox["2", "n"], " ", "terms", "\n", "\t\t", 
         "atomListInv"}]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
       "List", " ", "of", " ", "the", " ", "atoms", " ", "of", " ", 
        "sumInvAtom"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"atoms", " ", "for", " ", 
         SuperscriptBox["clif", 
          RowBox[{"-", "1"}]], "\n", "\t\t", "len"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"Length", " ", "of", " ", "atomListInv"}], " ", "=", " ", 
         RowBox[{
          RowBox[{
          "number", " ", "of", " ", "unknowns", " ", "to", " ", "solve", " ", 
           "for", "\n", "\t\t", "coefListInv"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"a", " ", "list", " ", 
            RowBox[{"of", " ", "'"}], 
            RowBox[{"b", "'"}], " ", "coefficients", " ", "matching", " ", 
            "atomListInv"}], " ", "=", " ", 
           RowBox[{
            RowBox[{
            "the", " ", "list", " ", "of", " ", "unnowns", "\n", "\t\t\t", 
             "Step", " ", "1"}], ":", " ", 
            RowBox[{"Make", " ", "the", " ", 
             SubscriptBox["e", "ij"], " ", "list", " ", "for", " ", 
             RowBox[{
              SuperscriptBox["clif", 
               RowBox[{"-", "1"}]], " ", ".", " ", "Note"}]}], ":", " ", 
            RowBox[{
            "The", " ", "1", "st", " ", "term", " ", "is", " ", "1.", "\n", 
             "\t\t\t", "Step", " ", "2"}], ":", " ", 
            RowBox[{"Change", " ", "it", " ", "into", " ", "a", " ", 
             SubscriptBox["b", "ij"], " ", 
             RowBox[{"list", ".", " ", "Note"}]}], ":", " ", 
            RowBox[{
            "The", " ", "1", "st", " ", "term", " ", "is", " ", "still", " ", 
             "1", "\n", "\t\t\t", "Step", " ", "3"}], ":", " ", 
            RowBox[{
            "Change", " ", "the", " ", "first", " ", "term", " ", "to", " ", 
             SubscriptBox["b", "0"], "\n", "\t\t", "clifInv"}], ":", " ", 
            RowBox[{
            "Initially", " ", "it", " ", "is", " ", "the", " ", "expression", 
             " ", "for", " ", 
             SuperscriptBox["clif", 
              RowBox[{"-", "1"}]], " ", "in", " ", "terms", " ", "of", " ", 
             "the", " ", 
             RowBox[{"b", "'"}], "s", "\n", "\t\t\t\t ", "Eventually", " ", 
             "we", " ", "sove", " ", "for", " ", "the", " ", 
             RowBox[{
              SubscriptBox["b", 
               RowBox[{"i", ",", "j"}]], "'"}], "s", " ", "and", " ", 
             SuperscriptBox["clif", 
              RowBox[{"-", "1"}]], " ", "morphs", " ", "into", " ", "the", 
             " ", "answer", "\n", "\t\t\t\t ", "If", " ", "there", " ", "is", 
             " ", "no", " ", "inverse"}]}]}]}]}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "we", " ", "just", " ", "set", " ", "it", " ", "to", " ", "0", " ", 
       "and", " ", "print", " ", "a", " ", "message", "\n", "\t\t", 
       "geomPrdt"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"clif", " ", "\[Diamond]", " ", "clifInv"}], "\n", "\t\t\t", 
        "It", " ", "is", " ", "an", " ", "expression", " ", "having", " ", 
        "the", " ", 
        RowBox[{"unknown", " ", "'"}], 
        RowBox[{"b", "'"}], " ", "coefficients", " ", "from", " ", 
        SuperscriptBox["clif", 
         RowBox[{"-", "1"}]], " ", "\n", "\t\t\t", "as", " ", "well", " ", 
        "as", " ", "the", " ", "input", " ", "coefficients", " ", "from", " ",
         "clif", " ", "\n", "\t\t", "listLHS"}], " ", "=", " ", 
       RowBox[{
       "list", " ", "of", " ", "coefficients", " ", "of", " ", 
        "geomPrdt"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "expressions", " ", "in", " ", "terms", " ", "of", " ", "the", " ", 
       RowBox[{"b", "'"}], "s", "\n", "\t\t", "listRHS"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", 
         RowBox[{"...", "0"}]}], "}"}], "\n", "\t\t", 
       RowBox[{"listLHSequalsRHS", ":", " ", 
        RowBox[{"An", " ", "expression", " ", "suitable", " ", "for", " ", 
         RowBox[{"Mathematica", "'"}], "s", " ", "Solve", " ", 
         RowBox[{"function", ".", "\n", "\t\t\t", "For"}], " ", 
         "example"}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"5", 
            SubscriptBox["b", "0"]}], "+", 
           RowBox[{"2", 
            SubscriptBox["b", "1"]}]}], "\[Equal]", "1"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"3", 
            SubscriptBox["b", "0"]}], "-", 
           SubscriptBox["b", "1"]}], "\[Equal]", "0"}]}], "}"}], "\n", "\t\t",
        "\n", "\t\t", "sol"}], " ", "=", " ", 
      RowBox[{
      "the", " ", "rules", " ", "that", " ", "are", " ", "generated", " ", 
       "by", " ", "the", " ", "Solve", " ", 
       RowBox[{"function", ".", " ", "For"}], " ", "example"}]}], ",", " ", 
     "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["b", "0"], "\[Rule]", " ", "0"}], ",", " ", 
        RowBox[{
         SubscriptBox["b", "1"], "\[Rule]", "5"}], ",", " ", "..."}], " ", 
       "}"}], "\n", "\n", "\t\t", "The", " ", "p", " ", "loop", " ", 
      "defines", " ", "the", " ", 
      RowBox[{
       SubscriptBox["b", 
        RowBox[{"i", ",", "j", ",", "..."}]], "'"}], "s", " ", "in", " ", 
      "terms", " ", "of", " ", "the", " ", 
      RowBox[{"rules", ":", "\n", "\t\t\t", "Say"}]}], ",", " ", 
     RowBox[{
      RowBox[{"coefListInv", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["b", "0"], "\n", "\t\t\t", "Writing", " ", 
        RowBox[{"coefListInv", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{"5", " ", "would", " ", "replace", " ", 
         SubscriptBox["b", "0"], " ", "by", " ", "5", " ", "as", " ", "the", 
         " ", "1", "st", " ", "element", " ", "of", " ", "the", " ", "list", 
         "\n", "\t\t\t", "It", " ", "would", " ", "not", " ", "make", " ", 
         SubscriptBox["b", "0"]}], " ", "=", " ", "5"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "which", " ", "is", " ", "what", " ", "we", " ", "want", "\n", "\t\t\t",
        "Writing", " ", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"coefListInv", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"5", " ", "sets", " ", 
        SubscriptBox["b", "0"]}], " ", "=", " ", 
       RowBox[{
        RowBox[{"5", "\n", "\t\t\t", 
         RowBox[{"coefListInv", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
        RowBox[{"sol", " ", "replaces", " ", 
         SubscriptBox["b", "0"], " ", "by", " ", "its", " ", "solution", " ", 
         "using", " ", "the", " ", "ruleset", " ", "of", " ", "sol", "\n", 
         "\t\t\t", "It", " ", "is", " ", "a", " ", "list"}]}]}]}], ",", " ", 
     RowBox[{"so", " ", 
      RowBox[{"Plus", "@@", " ", "changes"}], " ", "it", " ", "to", " ", "an",
       " ", "expression", "\n", "\t\t", 
      RowBox[{"clifInv", ":", " ", 
       RowBox[{"As", " ", "the", " ", 
        RowBox[{"b", "'"}], "s", " ", "are", " ", "defined"}]}]}], ",", " ", 
     RowBox[{
     "clifInv", " ", "automatically", " ", "updates", " ", "since", " ", "it",
       " ", "is", "\n", "\t\t\t", "composed", " ", "of", " ", 
      RowBox[{"b", "'"}], 
      RowBox[{"s", ".", "\n", "\t", 
       RowBox[{"OUTPUT", ":", " ", "clifInv"}]}]}], ",", " ", 
     RowBox[{
     "the", " ", "inverse", " ", "of", " ", "clif", "\n", "\t\t\t", "clifInv",
       " ", "is", " ", "set", " ", "to", " ", "0", " ", "if", " ", "the", " ",
       "inverse", " ", "does", " ", "not", " ", "exist"}], ",", " ", 
     RowBox[{
     "and", " ", "a", " ", "message", " ", "is", " ", "displayed", "\n", 
      "\t\t\t", "For", " ", "readability", " ", "of", " ", "debug", "  ", 
      "output"}], ",", " ", 
     RowBox[{"'", 
      RowBox[{"b", "'"}], " ", "is", " ", "made", " ", "a", " ", "global", 
      " ", "variable", " ", "so", " ", "the", " ", "full", " ", "name", "\n", 
      "\t\t\t\t", "is", " ", "not", " ", "printed", " ", "for", " ", "each", 
      " ", "instance", " ", "of", " ", 
      SubscriptBox["b", "i"]}]}], " \t\t", "\n", "*)"}], "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "b", ",", "gormClif", ",", "clifInv", ",", "sumInvAtoms", ",", 
       "coefListInv", ",", "geomPrdt", ",", "atomListInv", ",", "\n", "\t\t", 
       "listLHS", ",", "len", ",", "listRHS", ",", "listLHSequalsRHS", ",", 
       "sol"}], "}"}], ",", "\n", "\t   ", "\n", "\t   ", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
        RowBox[{"dv_", "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"dv", ",", "b"}], "]"}]}]}], "]"}], ";", " ", 
      RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Clears", " ", "all", " ", "b"}], "-", 
        RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", "\n", 
      "\t", 
      RowBox[{"gormClif", "=", 
       RowBox[{"GormG", "[", "clif", "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"gormClif", "===", "0"}], "||", 
          RowBox[{"gormClif", "===", "0."}]}], ")"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<The zero multivector \>\"", ",", "clif", ",", 
           "\"\< has no inverse\>\""}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"clifInv", "=", "0"}]}], ",", "\n", "\n", "\t\t", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"debug0", ",", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"\"\<clif = \>\"", ",", "clif"}], "]"}], ";"}]}], "\n", 
          "\t\t", "]"}], ";", "\n", "\n", "\t\t", 
         RowBox[{"clifglobal", "=", "clif"}], ";", "\n", "\t\t", 
         RowBox[{"sumInvAtoms", "=", 
          RowBox[{"FixedPoint", "[", 
           RowBox[{"ClifClifG", ",", "clif"}], "]"}]}], ";", "\n", "\t\t", 
         "\n", "\t\t", 
         RowBox[{"atomListInv", "=", 
          RowBox[{"ClifToListG", "[", "sumInvAtoms", "]"}]}], ";", "\n", 
         "\t\t", 
         RowBox[{"len", "=", 
          RowBox[{"Length", "[", "atomListInv", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"coefListInv", "=", 
          RowBox[{"ReplacePart", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"AtomListToEijListG", "[", "atomListInv", "]"}], "//.", 
             RowBox[{
              SubscriptBox["e", "u__"], "->", " ", 
              SubscriptBox["b", "u"]}]}], ",", 
            RowBox[{"1", "->", 
             SubscriptBox["b", "0"]}]}], "]"}]}], ";", "\n", "\t\t", "\n", 
         "\t\t", 
         RowBox[{"clifInv", " ", "=", " ", 
          RowBox[{"coefListInv", ".", "atomListInv"}]}], ";", "\n", "\t\t", 
         RowBox[{"geomPrdt", "=", 
          RowBox[{"CollectG", "[", 
           RowBox[{"clif", "\[Diamond]", "clifInv"}], "]"}]}], ";", "\t\t", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"listLHS", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Outer", "[", 
            RowBox[{"AtomCoefG", ",", 
             RowBox[{"{", "geomPrdt", "}"}], ",", "atomListInv"}], "]"}], 
           "]"}]}], ";", "\t", "\n", "\t\t", 
         RowBox[{"listRHS", "=", 
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", 
              RowBox[{"len", "-", "1"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
         "\n", "\t\t", 
         RowBox[{"listLHSequalsRHS", "=", 
          RowBox[{"Thread", "[", 
           RowBox[{"listLHS", "\[Equal]", "listRHS"}], "]"}]}], ";", "\t", 
         "\n", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{"debug0", ",", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Atom list for \!\(\*SuperscriptBox[\(clif\), \(-1\)]\) = \>\
\"", ",", "atomListInv"}], "]"}], ";", "\n", "\t\t\t", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Length m of \!\(\*SuperscriptBox[\(clif\), \(-1\)]\) atom \
list \[DoubleRightArrow] m of Equations in m unknowns: \>\"", ",", "len"}], 
             "]"}], ";", "\n", "\t\t\t", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<List of \!\(\*SuperscriptBox[\(clif\), \(\(-1\)\(\\\ \
\)\)]\)coefficients = \>\"", ",", "\n", "\t\t\t\t", 
              RowBox[{"coefListInv", "/.", 
               RowBox[{
                RowBox[{"x_", "/;", 
                 RowBox[{"x", "\[Equal]", "b"}]}], "\[RuleDelayed]", 
                "Global`b"}]}]}], "]"}], ";", "\n", "\t\t\t", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<\!\(\*SuperscriptBox[\(clif\), \(-1\)]\) = \>\"", ",", 
              RowBox[{"clifInv", "/.", 
               RowBox[{
                RowBox[{"x_", "/;", 
                 RowBox[{"x", "\[Equal]", "b"}]}], "\[RuleDelayed]", 
                "Global`b"}]}]}], "]"}], ";", "\n", "\t\t\t", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<clif \[Diamond] \!\(\*SuperscriptBox[\(clif\), \(-1\)]\) = \
\>\"", ",", 
              RowBox[{"geomPrdt", "/.", 
               RowBox[{
                RowBox[{"x_", "/;", 
                 RowBox[{"x", "==", "b"}]}], ":>", "Global`b"}]}]}], "]"}], 
            ";", "\n", "\t\t\t", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<LHS = Coefficient list of clif \[Diamond] clifInv = \>\"", 
              ",", 
              RowBox[{"listLHS", "/.", 
               RowBox[{
                RowBox[{"x_", "/;", 
                 RowBox[{"x", "==", "b"}]}], ":>", "Global`b"}]}]}], "]"}], 
            ";", "\n", "\t\t\t", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<RHS = Coefficient list of the unit multivector = \>\"", ",",
               "listRHS"}], "]"}], ";", "\n", "\t\t\t", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<LHS==RHS list is \>\"", ",", 
              RowBox[{"listLHSequalsRHS", "/.", 
               RowBox[{
                RowBox[{"x_", "/;", 
                 RowBox[{"x", "==", "b"}]}], ":>", "Global`b"}]}]}], 
             "]"}]}]}], "\n", "\t\t", "]"}], ";", "\n", 
         "\t\t\t\t\t\t\t\t\t\t", "\n", "\t\t", 
         RowBox[{"sol", "=", 
          RowBox[{"Solve", "[", 
           RowBox[{"listLHSequalsRHS", ",", "coefListInv"}], "]"}]}], ";", 
         "\n", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{"debug0", ",", "\n", "\t\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Solution: \>\"", ",", 
             RowBox[{"sol", "/.", 
              RowBox[{
               RowBox[{"x_", "/;", 
                RowBox[{"x", "==", "b"}]}], ":>", "Global`b"}]}]}], "]"}]}], 
          "\n", "\t\t", "]"}], ";", "\t\t", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"sol", "===", 
            RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
            "Print", "[", "\"\<This algorithm cannot find an inverse\>\"", 
             "]"}], ";", "\n", "\t\t\t", 
            RowBox[{"clifInv", "=", "0"}]}], ",", "\n", "\t\t", "\n", 
           "\t\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"'", 
              RowBox[{"Evaluate", "'"}], " ", "defines", " ", 
              SubscriptBox["b", 
               RowBox[{"i", ",", "j"}]], " ", "rather", " ", "than", " ", 
              "the", " ", "i"}], ",", 
             RowBox[{"j", "-", 
              RowBox[{"member", " ", "of", " ", "coefListInv"}]}]}], " ", 
            "*)"}], "\n", "\n", "\t\t\t", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"p", "=", "1"}], ",", 
             RowBox[{"p", "\[LessEqual]", "len"}], ",", 
             RowBox[{"p", "++"}], ",", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"coefListInv", "[", 
                RowBox[{"[", "p", "]"}], "]"}], "]"}], "\n", "\t\t\t\t", "=", 
              " ", 
              RowBox[{"Simplify", "[", 
               RowBox[{"Plus", "@@", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"coefListInv", "[", 
                   RowBox[{"[", "p", "]"}], "]"}], "/.", "sol"}], ")"}]}], 
               "]"}]}]}], "\t\t", "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
          "]"}], ";", "\n", "\t\t", 
         RowBox[{"clifInv", "=", 
          RowBox[{"Together", "[", "clifInv", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"clifInv", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"CollectG", "[", 
             RowBox[{"Numerator", "[", "clifInv", "]"}], "]"}], "/", 
            RowBox[{"Denominator", "[", "clifInv", "]"}]}], "/.", 
           RowBox[{
            RowBox[{"x_", "/;", 
             RowBox[{"x", "==", "b"}]}], ":>", "Global`b"}]}]}]}]}], "\n", 
       "\t", "]"}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"debug0", "&&", 
         RowBox[{"sol", "\[NotEqual]", 
          RowBox[{"{", "}"}]}]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<clif = \>\"", ",", "clif"}], "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<\!\(\*SuperscriptBox[\(clif\), \(-1\)]\) = \>\"", ",", 
           "clifInv"}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<check: clif \[Diamond] \!\(\*SuperscriptBox[\(clif\), \
\(-1\)]\) = \>\"", ",", 
           RowBox[{"Simplify", "[", 
            RowBox[{"clif", "\[Diamond]", "clifInv"}], "]"}]}], "]"}], 
         ";"}]}], "\n", "\t", "]"}], ";", "\n", "\n", "\t", "clifInv"}]}], 
    "\n", "]"}]}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "InverseG", " ", "module"}], " ", "*)"}], 
  "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NormG", "[", "clif_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Abs", "[", 
     RowBox[{"GormG", "[", "clif", "]"}], "]"}], "]"}]}], "   ", 
  RowBox[{"(*", 
   RowBox[{"/;", 
    RowBox[{
     RowBox[{"NumberQ", "[", 
      RowBox[{"GormG", "[", "clif", "]"}], "]"}], "\[Equal]", "True"}]}], 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReverseG", "[", "0", "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReverseG", "[", "clif_", "]"}], ":=", "\n", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", 
      RowBox[{"A", " ", "clif", "  ", "Example"}], ":", " ", 
      RowBox[{"3", " ", "+", " ", 
       SubscriptBox["e", "2"], " ", "+", " ", 
       RowBox[{
        SubscriptBox["e", "2"], 
        SubscriptBox[
         RowBox[{"e", " "}], "3"]}], " ", "+", " ", 
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"], 
        SubscriptBox["e", "3"], 
        SubscriptBox["e", "4"]}], " ", "+", " ", 
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "3"], 
        SubscriptBox["e", "5"], "\n", "\t", 
        RowBox[{"PROCESS", ":", "\n", "\t\t", 
         RowBox[{
         "Use", " ", "ClifToListG", " ", "to", " ", "get", " ", "a", " ", 
          "list", " ", "of", " ", "clif", " ", "terms"}]}]}]}]}], ",", " ", 
     RowBox[{"like", " ", 
      RowBox[{"{", 
       RowBox[{"3", ",", 
        SubscriptBox["e", "2"], ",", 
        RowBox[{
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "3"]}], ",", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "3"], " ", 
         SubscriptBox["e", "4"]}], ",", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "3"], " ", 
         SubscriptBox["e", "5"]}]}], "}"}], "\n", "\t\t", "Use", " ", 
      "SubscriptListG", " ", "to", " ", "get", " ", "list", " ", "of", " ", 
      "subscripts"}], ",", " ", 
     RowBox[{"like", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", " ", 
        RowBox[{"{", "2", "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "3"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2", ",", " ", "3", ",", " ", "4"}], "}"}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "3", ",", " ", "5"}], "}"}]}], "}"}], "\n", 
      "\t\t", "Use", " ", "Reverse", " ", "to", " ", "get", " ", "reversed", 
      " ", "list", " ", "of", " ", "subscripts"}], ",", " ", 
     RowBox[{"like", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{"{", "2", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "3", ",", "1"}], "}"}]}], "}"}], "\n", "\t\t", 
      "Use", " ", "Signature", " ", "to", " ", "determine", " ", "whether", 
      " ", "reversed", " ", "members", " ", "are", " ", "even", " ", 
      RowBox[{"(", 
       RowBox[{"+", "1"}], ")"}], " ", "or", " ", "odd", " ", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], " ", "permustiions", "\n", "\t\t", 
      "Multiply", " ", "the", " ", "clif", " ", "list", " ", "by", " ", "the",
       " ", "signature", " ", "list", " ", "and", " ", "convert", " ", 
      "result", " ", "to", " ", "a", " ", "multivector", " ", "expression", 
      " ", "\n", "\t", 
      RowBox[{"OUTPUT", ":", " ", 
       RowBox[{"The", " ", "reverse", " ", "clif"}]}]}]}], "\n", "*)"}], "\n",
    "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clifList", ",", "subscriptList", ",", "reverseList", ",", 
       "signatureList", ",", "reverseClif"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"clifList", "=", 
       RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"subscriptList", "=", 
       RowBox[{"SubscriptListG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"reverseList", "=", 
       RowBox[{"Reverse", "/@", "subscriptList"}]}], ";", "\n", "\t\t", 
      RowBox[{"signatureList", "=", 
       RowBox[{"Signature", "/@", "reverseList"}]}], ";", "\n", "\t\t", 
      RowBox[{"reverseClif", "=", 
       RowBox[{"signatureList", ".", "clifList"}]}], ";", "\n", "\n", "\t\t", 
      
      RowBox[{"If", "[", 
       RowBox[{"debug7", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<ReverseG: List of \>\"", ",", "clif", ",", "\"\< = \>\"", ",", 
           "clifList"}], "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Subscript list = \>\"", ",", "subscriptList"}], "]"}], 
         ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<List of reversed subscripts = \>\"", ",", "reverseList"}], 
          "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Signature List = \>\"", ",", "signatureList", ",", 
           "\"\< is \[PlusMinus]1, measuring # of pairwise transpositions \
\>\"", ",", "\n", "\t\t\t\t  ", 
           "\"\<to restore reverse list to original\>\""}], "]"}], ";", "\n", 
         "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Reverse of clif = \>\"", ",", "reverseClif"}], 
          "]"}]}]}], "\n", "\t\t", "]"}], ";", "\n", "\t\t", 
      "reverseClif"}]}], "\n", "\t", "]"}]}], 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "ReverseG", " ", "Module"}], "  ", 
   "*)"}]}], "\n", 
 RowBox[{"\t\t"}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691073072029634*^9, 3.691073593702551*^9, 
   3.691073646277369*^9, 3.691073715183025*^9, 3.691073841869029*^9, 
   3.691073879917136*^9, {3.6910742437762337`*^9, 3.691074246906845*^9}, {
   3.691074290856971*^9, 3.691074316518396*^9}, {3.6910744297152367`*^9, 
   3.691074443783609*^9}, 3.691074602123973*^9, 3.6910746412377787`*^9, 
   3.691162439749679*^9, 3.6911707847484303`*^9, {3.691239783051281*^9, 
   3.6912398212811213`*^9}, {3.691239898618672*^9, 3.691239981128207*^9}, {
   3.691346925733223*^9, 3.69134692898641*^9}, {3.691794215825245*^9, 
   3.691794232320211*^9}, 3.6917943056426888`*^9, 3.6924783516797247`*^9, {
   3.692486101079296*^9, 3.6924861300656633`*^9}, {3.692486225188567*^9, 
   3.6924862592737827`*^9}, {3.6925522732831287`*^9, 3.692552287060831*^9}, {
   3.692552820556539*^9, 3.69255283101068*^9}, {3.692552919113789*^9, 
   3.692552935368544*^9}, {3.6957475999325943`*^9, 3.695747632417718*^9}, {
   3.695820792813661*^9, 3.695820799061962*^9}, {3.69582086515193*^9, 
   3.6958209416138887`*^9}, {3.695820986949973*^9, 3.695820989092721*^9}, {
   3.695821045899899*^9, 3.695821111449418*^9}, {3.6958211611208277`*^9, 
   3.695821184327961*^9}, {3.6958226576993923`*^9, 3.6958226605376577`*^9}, {
   3.695827454326144*^9, 3.6958274584079123`*^9}, {3.695829238949929*^9, 
   3.6958292979730177`*^9}, {3.695847124732131*^9, 3.6958472694464397`*^9}, {
   3.6958473536178102`*^9, 3.695847354561248*^9}, {3.695847601124522*^9, 
   3.695847614345902*^9}, {3.695847717671761*^9, 3.695847718382951*^9}, {
   3.695848114415719*^9, 3.69584818645916*^9}, {3.695848950848604*^9, 
   3.695849035745556*^9}, {3.695849104693282*^9, 3.6958491719580927`*^9}, {
   3.695850254555883*^9, 3.695850402314972*^9}, 3.695999963121153*^9, {
   3.696000741630728*^9, 3.696000748004396*^9}, {3.696108486545052*^9, 
   3.696108501059379*^9}, {3.696116337101284*^9, 3.696116360636071*^9}, {
   3.696284321562648*^9, 3.696284359003634*^9}, {3.6968072880913963`*^9, 
   3.696807292377239*^9}, {3.6968081444257383`*^9, 3.696808150919499*^9}, {
   3.696856550026471*^9, 3.696856577050351*^9}, {3.6968568844912663`*^9, 
   3.6968569091655607`*^9}, {3.6968712561572113`*^9, 3.696871337270104*^9}, {
   3.69687184472225*^9, 3.6968718970706663`*^9}, {3.696871967178689*^9, 
   3.696872303860433*^9}, {3.69687233470337*^9, 3.696872344219792*^9}, {
   3.696872375712117*^9, 3.696872772140077*^9}, {3.696884823967904*^9, 
   3.696884829901882*^9}, {3.6970253363654413`*^9, 3.6970253846098824`*^9}, {
   3.697026777390379*^9, 3.697026807895303*^9}, {3.6970268796534777`*^9, 
   3.697026884393711*^9}, {3.697026928707107*^9, 3.697026943630897*^9}, {
   3.697026974780508*^9, 3.697027001989422*^9}, {3.697027075514344*^9, 
   3.697027085099351*^9}, {3.69702712918753*^9, 3.697027232395236*^9}, {
   3.774994644379012*^9, 3.774994659893199*^9}, {3.7749948920316896`*^9, 
   3.7749948931602993`*^9}, {3.7753254535352373`*^9, 3.775325455474881*^9}, {
   3.777902650602956*^9, 3.777902773198567*^9}, {3.777902813102227*^9, 
   3.7779028998137503`*^9}, 3.777902964718421*^9, {3.777903084260754*^9, 
   3.777903088928753*^9}, 3.777903161725328*^9, {3.777904325817721*^9, 
   3.777904335678358*^9}, {3.777906010403845*^9, 3.7779060197263536`*^9}, {
   3.7779101254904413`*^9, 3.777910148807599*^9}, {3.777923034137865*^9, 
   3.7779230354104967`*^9}, 3.777987789227755*^9, {3.77841569318932*^9, 
   3.7784157320307693`*^9}, {3.7784158122835293`*^9, 3.7784158533989*^9}, {
   3.778415909207752*^9, 3.778415935066143*^9}, {3.778415982170597*^9, 
   3.77841604664342*^9}, {3.7784160935493298`*^9, 3.778416149705779*^9}, {
   3.778416228258914*^9, 3.778416678645294*^9}, {3.7784323557630177`*^9, 
   3.778432505330803*^9}, {3.778432765510612*^9, 3.778432841469531*^9}, {
   3.778432877408506*^9, 3.7784329066101313`*^9}, {3.778432957010746*^9, 
   3.778432958401054*^9}, {3.778432999250895*^9, 3.778433043342767*^9}, {
   3.778433167794415*^9, 3.778433311049258*^9}, {3.778433343226673*^9, 
   3.778433363395027*^9}, {3.7784335205752697`*^9, 3.7784340256858387`*^9}, {
   3.7784340690936213`*^9, 3.7784345258948*^9}, {3.778434555997924*^9, 
   3.778434556709889*^9}, {3.778434597587556*^9, 3.778434598218143*^9}, {
   3.778434630348153*^9, 3.778434653372053*^9}, {3.778434691762022*^9, 
   3.778434798297165*^9}, {3.7784348316681757`*^9, 3.778434849281238*^9}, {
   3.7784349188579493`*^9, 3.778434936995571*^9}, {3.778434983192359*^9, 
   3.778435014307518*^9}, {3.7784351496584473`*^9, 3.778435179321959*^9}, {
   3.77844481833179*^9, 3.778444821978609*^9}, {3.779038567641728*^9, 
   3.779038569969398*^9}, 3.779641963456366*^9, {3.779642039594556*^9, 
   3.7796420929358*^9}, {3.779642458362412*^9, 3.779642471778302*^9}, {
   3.7796428996027527`*^9, 3.779642904680439*^9}, {3.779643084782226*^9, 
   3.779643119257234*^9}, {3.7796431950613613`*^9, 3.779643216258971*^9}, {
   3.779643286080501*^9, 3.779643302721427*^9}, {3.779643412112734*^9, 
   3.779643813524789*^9}, {3.779643851412302*^9, 3.779643852528721*^9}, {
   3.7796440111106443`*^9, 3.779644121133256*^9}, {3.779644189608355*^9, 
   3.779644264273583*^9}, 3.779644356883296*^9, {3.7796447235208187`*^9, 
   3.7796447646328506`*^9}, {3.779644807909144*^9, 3.779644808570532*^9}, {
   3.779644846895378*^9, 3.779645424851673*^9}, {3.779645460262787*^9, 
   3.779645566413127*^9}, {3.779645605133088*^9, 3.7796456915136557`*^9}, {
   3.77965142534385*^9, 3.7796514337216253`*^9}, {3.779651482429646*^9, 
   3.7796514962571*^9}, {3.7796515268383017`*^9, 3.779651538692939*^9}, {
   3.779651575689286*^9, 3.779651599196929*^9}, {3.779651633312866*^9, 
   3.779651680000169*^9}, {3.779651742479848*^9, 3.7796519031276627`*^9}, {
   3.77965194673985*^9, 3.779651984743216*^9}, {3.779652033559409*^9, 
   3.77965206126667*^9}, {3.779652096808951*^9, 3.779652376877613*^9}, {
   3.779652433027689*^9, 3.7796527222603703`*^9}, {3.779652849014606*^9, 
   3.7796528679266033`*^9}, {3.779652921714776*^9, 3.779652976182561*^9}, {
   3.779653075199278*^9, 3.779653159546195*^9}, {3.779653229192768*^9, 
   3.779653247726733*^9}, {3.779653300460156*^9, 3.779653468152656*^9}, {
   3.779654471577673*^9, 3.7796544768467503`*^9}, 3.779654574102696*^9, {
   3.779654610748423*^9, 3.7796546316760693`*^9}, {3.779658155061178*^9, 
   3.779658165134239*^9}, {3.779658203550171*^9, 3.7796582417300053`*^9}, {
   3.779658282219298*^9, 3.7796582988518457`*^9}, {3.779659469999606*^9, 
   3.779659490214839*^9}, {3.7796595202668552`*^9, 3.779659670477483*^9}, 
   3.7796603509944696`*^9, {3.779660384562461*^9, 3.7796604256839733`*^9}, {
   3.77966047833854*^9, 3.779660558133647*^9}, {3.779660588594468*^9, 
   3.7796610540239897`*^9}, {3.779661097919497*^9, 3.779661175047225*^9}, {
   3.7796612102743053`*^9, 3.779661257805916*^9}, {3.779661294249384*^9, 
   3.7796613360747423`*^9}, {3.7796613756580057`*^9, 3.779661470441751*^9}, {
   3.7796615236756353`*^9, 3.779661530816765*^9}, {3.7796615619505157`*^9, 
   3.779661791205961*^9}, {3.779661837744319*^9, 3.7796619703346453`*^9}, {
   3.779662321242844*^9, 3.779662353309383*^9}, {3.7796623958613167`*^9, 
   3.779662425953372*^9}, {3.779662458909287*^9, 3.77966265338396*^9}, {
   3.779663549196957*^9, 3.779663564215897*^9}, {3.779729095911537*^9, 
   3.779729118846195*^9}, {3.779729294270253*^9, 3.77972929583838*^9}, {
   3.779729588401288*^9, 3.7797295938643427`*^9}, {3.7797315185198393`*^9, 
   3.779731523534988*^9}, {3.77973156140704*^9, 3.779731586233486*^9}, {
   3.779731616868804*^9, 3.7797316427508173`*^9}, {3.779731728592334*^9, 
   3.779731728868129*^9}, {3.779732008981082*^9, 3.779732203026403*^9}, {
   3.7797357421171913`*^9, 3.779735785390139*^9}, {3.779735829288378*^9, 
   3.7797359258021917`*^9}, {3.7797359929010143`*^9, 3.779736010198677*^9}, {
   3.779736059173697*^9, 3.7797360635277042`*^9}, 3.779736117431007*^9, {
   3.7797367446016006`*^9, 3.779736750036881*^9}, {3.779736815410408*^9, 
   3.779736822402755*^9}, {3.7798128354306383`*^9, 3.779812938579638*^9}, {
   3.779813841069992*^9, 3.77981384135566*^9}, {3.779813882167015*^9, 
   3.779813943029079*^9}, {3.779813977952882*^9, 3.7798140657310553`*^9}, {
   3.7798141004744377`*^9, 3.779814124057132*^9}, {3.7798141738373117`*^9, 
   3.779814221593951*^9}, 3.779814251745234*^9, 3.779814328968626*^9, {
   3.779814806798655*^9, 3.779814811679929*^9}, {3.7798149457443857`*^9, 
   3.7798150956488867`*^9}, {3.779815135138011*^9, 3.7798151393558702`*^9}, 
   3.779815343808734*^9, {3.779815500606502*^9, 3.779815506519582*^9}, {
   3.779815561042498*^9, 3.779815598668569*^9}, 3.7798162109652443`*^9, {
   3.779816510499332*^9, 3.779816514609157*^9}, {3.779823839152688*^9, 
   3.779823877302816*^9}, 3.779823911600704*^9, {3.779824274354568*^9, 
   3.779824352634617*^9}, {3.7798243829357367`*^9, 3.779824464757169*^9}, {
   3.7798245081637783`*^9, 3.779824571227968*^9}, {3.779824607828351*^9, 
   3.779824660499466*^9}, {3.779824715534706*^9, 3.7798247273433847`*^9}, {
   3.779824776515629*^9, 3.779824843196889*^9}, {3.7798248890109243`*^9, 
   3.779824940593339*^9}, {3.779824985401532*^9, 3.779824985629972*^9}, {
   3.780403423667828*^9, 3.780403436818472*^9}, {3.78040347400049*^9, 
   3.7804036300081472`*^9}, {3.780403685065683*^9, 3.780403703010043*^9}, {
   3.780403748038766*^9, 3.780403753995492*^9}, {3.780403850768032*^9, 
   3.780403881632407*^9}, {3.780404477610331*^9, 3.780404566528118*^9}, {
   3.78040464705337*^9, 3.780404661072297*^9}, {3.7804047090282583`*^9, 
   3.780404748916205*^9}, {3.78040496879428*^9, 3.780404977905081*^9}, {
   3.780405011909853*^9, 3.780405013892692*^9}, {3.7804050608207493`*^9, 
   3.7804051705848417`*^9}, {3.7804052281392612`*^9, 3.780405234064434*^9}, {
   3.780405301973847*^9, 3.780405367147869*^9}, {3.780405411924591*^9, 
   3.780405419603558*^9}, {3.780406016793797*^9, 3.7804060221764593`*^9}, {
   3.780406677369779*^9, 3.7804067970606318`*^9}, 3.78040698717654*^9, {
   3.780407034518001*^9, 3.780407058807152*^9}, {3.7804072427823544`*^9, 
   3.7804072864104767`*^9}, {3.780407434197117*^9, 3.7804074402186317`*^9}, {
   3.780407598695353*^9, 3.780407600998796*^9}, 3.780407647311655*^9, {
   3.7804077846839943`*^9, 3.78040780926752*^9}, {3.780413774230529*^9, 
   3.780413776012939*^9}, {3.780413852545341*^9, 3.780413925641396*^9}, {
   3.7804139578782454`*^9, 3.7804139707654676`*^9}, {3.780414239133217*^9, 
   3.780414241946515*^9}, {3.7804142888011923`*^9, 3.780414366405356*^9}, {
   3.780414423873476*^9, 3.780414438776869*^9}, 3.780414495766603*^9, {
   3.78041462518918*^9, 3.780414637635048*^9}, {3.780414778580908*^9, 
   3.7804148410671463`*^9}, {3.780415610027953*^9, 3.780415615287119*^9}, {
   3.780415659696505*^9, 3.7804156661419783`*^9}, {3.780420096348221*^9, 
   3.780420109024826*^9}, {3.7804201670803947`*^9, 3.780420191945077*^9}, {
   3.78042023379047*^9, 3.780420356674657*^9}, {3.780420391487866*^9, 
   3.7804204214511433`*^9}, {3.78042066814771*^9, 3.780420676431467*^9}, 
   3.780421443537436*^9, {3.7804214991795807`*^9, 3.780421500073924*^9}, {
   3.780421577808305*^9, 3.780421578526553*^9}, {3.7804216155874357`*^9, 
   3.780421642238822*^9}, {3.780421680948152*^9, 3.780421771158326*^9}, 
   3.780421997995945*^9, {3.7805062552791862`*^9, 3.780506423070912*^9}, {
   3.780506457324678*^9, 3.780506574088978*^9}, {3.78050668360159*^9, 
   3.780506710719551*^9}, {3.780506797076165*^9, 3.78050680038448*^9}, {
   3.780506834540794*^9, 3.780506860365623*^9}, {3.7805069076087418`*^9, 
   3.7805069781009207`*^9}, {3.780507032841497*^9, 3.780507053632485*^9}, {
   3.780507101933234*^9, 3.780507102866486*^9}, {3.780507155717869*^9, 
   3.780507172047804*^9}, {3.7805073045258503`*^9, 3.780507317459564*^9}, {
   3.780507355968742*^9, 3.780507418442724*^9}, {3.780507461664722*^9, 
   3.780507504451899*^9}, {3.780507572738812*^9, 3.780507573945245*^9}, 
   3.780507610842636*^9, {3.780507644717527*^9, 3.780507709325548*^9}, {
   3.7805078048963118`*^9, 3.7805078237007227`*^9}, 3.7805080590426693`*^9, {
   3.780508236259302*^9, 3.780508244008039*^9}, {3.780508784915498*^9, 
   3.780508834557279*^9}, 3.780513058840867*^9, {3.780521713252447*^9, 
   3.780521890306036*^9}, 3.780522191970523*^9, 3.780522283164487*^9, 
   3.780523483541114*^9, 3.7805235247000837`*^9, 3.7805830076593857`*^9, {
   3.780585402857231*^9, 3.780585446230884*^9}, {3.780585481576448*^9, 
   3.780585602820483*^9}, {3.78058567179324*^9, 3.7805856733252087`*^9}, {
   3.7805858500487747`*^9, 3.780585935334234*^9}, {3.7805860233415623`*^9, 
   3.780586528856336*^9}, {3.7805865595834923`*^9, 3.780586931941957*^9}, {
   3.780586981470276*^9, 3.7805871396808567`*^9}, {3.7805871899785*^9, 
   3.780587222397015*^9}, {3.78058728043783*^9, 3.7805873282958*^9}, {
   3.7805874985335693`*^9, 3.7805875034375277`*^9}, {3.7805875688873787`*^9, 
   3.780587618395771*^9}, {3.780587659995248*^9, 3.780587663294208*^9}, {
   3.7805877063952427`*^9, 3.780587742890132*^9}, {3.780587890191309*^9, 
   3.780588107377372*^9}, {3.7805881423457813`*^9, 3.780588181340602*^9}, {
   3.7805882178043756`*^9, 3.7805882672806053`*^9}, {3.780588320919785*^9, 
   3.780588507813287*^9}, {3.780588574010131*^9, 3.780588657292828*^9}, {
   3.780588696066325*^9, 3.7805887637523403`*^9}, {3.7805888215019836`*^9, 
   3.780588823290181*^9}, {3.780588853817005*^9, 3.780588884213169*^9}, {
   3.780588928549726*^9, 3.780589010609396*^9}, 3.78058906951644*^9, {
   3.780589126179648*^9, 3.780589187760994*^9}, {3.7805892823812103`*^9, 
   3.780589282802355*^9}, {3.780589332174258*^9, 3.780589333226573*^9}, 
   3.780589363434506*^9, {3.780589398308757*^9, 3.78058942308524*^9}, {
   3.7805895132260303`*^9, 3.780589532412094*^9}, {3.78068872920674*^9, 
   3.7806889452128553`*^9}, {3.780688979002366*^9, 3.780689087161839*^9}, {
   3.780689141490156*^9, 3.7806892312764177`*^9}, {3.780689286013832*^9, 
   3.7806892877239437`*^9}, {3.780689323399374*^9, 3.780689400428246*^9}, {
   3.780689434452601*^9, 3.780689596152555*^9}, {3.7806896273583937`*^9, 
   3.780689723107028*^9}, {3.780689775114791*^9, 3.780689806522332*^9}, 
   3.7806898390026007`*^9, {3.780689905393426*^9, 3.780689921425798*^9}, {
   3.78069000927777*^9, 3.780690456512651*^9}, {3.7806904930931787`*^9, 
   3.780690508355529*^9}, {3.780690586323045*^9, 3.780690607300617*^9}, {
   3.780690641564208*^9, 3.7806907253997993`*^9}, {3.7806907717525*^9, 
   3.780690933817916*^9}, {3.7806910726539793`*^9, 3.780691231776835*^9}, {
   3.7806912647903347`*^9, 3.780691351504672*^9}, {3.7806913889238367`*^9, 
   3.78069140642595*^9}, {3.782168816565978*^9, 3.782168911976471*^9}, 
   3.782253949036804*^9, {3.782327661455288*^9, 3.7823277033062677`*^9}, {
   3.78233888766532*^9, 3.7823389416280622`*^9}, {3.78233897705851*^9, 
   3.782339071411181*^9}, {3.782339105511552*^9, 3.782339123562928*^9}, {
   3.7823391598661413`*^9, 3.78233918229073*^9}, {3.782339223798647*^9, 
   3.782339345001779*^9}, {3.7823394094897633`*^9, 3.7823394283053513`*^9}, {
   3.78234123420849*^9, 3.78234123853216*^9}, {3.782341527167323*^9, 
   3.782341533866467*^9}},ExpressionUUID->"adb2e33b-3392-4e4d-adae-\
ed10dbc77e4d"],

Cell[CellGroupData[{

Cell[BoxData["0"], "Input",
 CellChangeTimes->{{3.779662493905178*^9, 3.7796624964823627`*^9}, 
   3.780691276663245*^9},
 CellLabel->
  "In[6545]:=",ExpressionUUID->"1c61652e-5168-437b-87cc-4f0e2e37e8b2"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7808293573922863`*^9, 3.781384427410583*^9},
 CellLabel->
  "Out[6545]=",ExpressionUUID->"f839aecf-6a58-4cd9-90e1-db71654deab7"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7796519939635344`*^9, 3.779652001702464*^9}},
 CellLabel->
  "In[6546]:=",ExpressionUUID->"8d9a52b3-409d-4aa3-8ff3-e4e69fc1705f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "8 Geometric Algebra Operations\n",
 StyleBox["\tGeometric Product, Dot Product, Wedge Product, \n\tLeft \
Contraction", "Subchapter"]
}], "Chapter",
 CellChangeTimes->{{3.691074731420932*^9, 3.691074785577688*^9}, {
  3.777916275512241*^9, 3.777916278174426*^9}, {3.777922920264551*^9, 
  3.777922921650095*^9}, {3.777923273827155*^9, 3.7779232756493893`*^9}, {
  3.777923976774259*^9, 3.77792397856572*^9}, {3.777924020478815*^9, 
  3.777924021012012*^9}},ExpressionUUID->"5ad0718c-8782-4e67-ac94-\
06033f01f375"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrdtG", "[", 
   RowBox[{"0", ",", "x_", ",", "p_"}], "]"}], ":=", "0"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PrdtG", "[", 
    RowBox[{"x_", ",", "0", ",", "p_"}], "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PrdtG", "[", 
    RowBox[{"clif1_", ",", "clif2_", ",", "prdtType_"}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"INPUTS", ":", "\n", "\t\t", "clif1"}], ",", " ", 
     RowBox[{"clif2", ":", " ", 
      RowBox[{"Two", " ", "clifs", " ", "whose", " ", 
       RowBox[{
        RowBox[{"dot", "/", "wedge"}], "/", "left"}], " ", "or", " ", "right",
        " ", "contraction", " ", "product", " ", "is", " ", "to", " ", "be", 
       " ", "taken", "\n", "\t\t", "prdtType"}], ":", " ", 
      RowBox[{"The", " ", "type", " ", "of", " ", 
       RowBox[{"product", ":", " ", "wedge"}]}]}], ",", " ", "dot", ",", " ", 
     
     RowBox[{
      RowBox[{
      "right", " ", "or", " ", "left", " ", "contraction", "\n", "\t\t", "\n",
        "\t  ", 
       RowBox[{"PROCESS", ":", "\n", "\t    ", "Example", ":", " ", 
        RowBox[{"Wedge", " ", "Product", " ", "of", " ", "clif1"}]}]}], " ", 
      "=", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["e", 
         RowBox[{"1", " "}]], "+", " ", 
        RowBox[{
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "3"], " ", "and", " ", "clif2"}]}], " ", "=", " ", 
       
       RowBox[{
        RowBox[{"4", " ", "-", " ", 
         RowBox[{
          SubscriptBox["e", 
           RowBox[{"3", " "}]], 
          SubscriptBox["e", "4"], "\n", "\t    ", "Make", " ", "lists", " ", 
          "of", " ", "the", " ", "terms", " ", "of", " ", "the", " ", "2", 
          " ", 
          RowBox[{"clifs", ":", " ", "clifList1"}]}]}], " ", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{
            SubscriptBox["e", 
             RowBox[{"1", ","}]], " ", 
            SubscriptBox["e", "2"], " ", 
            SubscriptBox["e", "3"]}], " ", "}"}], " ", "and", " ", 
          "clifList2", " ", 
          RowBox[{"{", " ", 
           RowBox[{"4", ",", " ", 
            RowBox[{
             RowBox[{"-", " ", 
              SubscriptBox["e", 
               RowBox[{"3", " "}]]}], 
             SubscriptBox["e", "4"]}]}], " ", "}"}], "\n", "\t\t", "Use", " ",
           "Outer", " ", "to", " ", "take", " ", "the", " ", "Geometric", " ",
           "Product", " ", "of", " ", "every", " ", "term", " ", "from", " ", 
          "clif1", " ", "with", " ", "every", " ", "term", " ", "from", " ", 
          "clif2", "\n", "\t\t   ", "prdtBladeList"}], " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"4", " ", 
              SubscriptBox["e", "1"]}], ",", " ", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["e", "1"]}], " ", 
              SubscriptBox["e", "3"], " ", 
              SubscriptBox["e", "4"]}], ",", " ", 
             RowBox[{"4", " ", 
              SubscriptBox["e", "2"], " ", 
              SubscriptBox["e", "3"]}], ",", " ", 
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["e", "2"]}], " ", 
              SubscriptBox["e", "4"]}]}], "}"}], "\n", "\t\t", 
           RowBox[{"Notice", ":", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "every", " ", "term", " ", "is", " ", "a", " ", "simple", " ", 
               "blade", " ", "a", " ", 
               SubscriptBox["e", "1"], 
               SubscriptBox["e", "2"]}], "..."}], 
             SubscriptBox["e", "n"], "\n", "\t\t", "Find", " ", "the", " ", 
             "eSubscripts", " ", "and", " ", "then", " ", "the", " ", "grade",
              " ", "of", " ", "each", " ", "blade"}], ":", " ", "\n", 
            "\t\t   ", "eSubscripts", ":", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                SubscriptBox["e", "1"], "}"}], ",", 
               RowBox[{"{", 
                SubscriptBox["e", 
                 RowBox[{"2", ",", "3"}]], "}"}]}], "}"}], " ", "and", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "0", "}"}], ",", 
               RowBox[{"{", 
                SubscriptBox["e", 
                 RowBox[{"3", ",", "4"}]], "}"}]}], "}"}], "\n", "\t\t   ", 
             "grades"}], ":", " ", 
            RowBox[{
             RowBox[{"{", " ", 
              RowBox[{"1", ",", " ", "2"}], " ", "}"}], " ", "and", " ", 
             RowBox[{"{", " ", 
              RowBox[{"0", ",", " ", "2"}], " ", "}"}], "\n", "\t\t   ", 
             RowBox[{"Note", ":", " ", 
              RowBox[{"grade", " ", "of", " ", 
               SubscriptBox["e", 
                RowBox[{"2", ",", "4"}]]}]}]}]}]}], " ", "=", " ", 
          RowBox[{"2", " ", "=", " ", 
           RowBox[{
            RowBox[{"Length", " ", "[", " ", 
             SubscriptBox["e", 
              RowBox[{"2", ",", "4"}]], " ", "]"}], " ", "-", " ", 
            RowBox[{"1", "\n", "\t\t   ", 
             RowBox[{"Note", ":", " ", 
              RowBox[{
              "length", " ", "of", " ", "a", " ", 
               "constant"}]}]}]}]}]}]}]}]}]}], ",", " ", 
     RowBox[{"like", " ", "5"}], ",", " ", 
     RowBox[{"is", " ", "0"}], ",", " ", 
     RowBox[{
      RowBox[{
      "so", " ", "subtracting", " ", "1", " ", "gives", " ", "a", " ", 
       "grade", " ", "of"}], " ", "-", 
      RowBox[{
      "1.", "\n", "\t\t         ", "The", " ", "correct", " ", "grade", " ", 
       "is", " ", "0"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"so", " ", "Length"}], " ", "-", " ", 
       RowBox[{"1", " ", "is", " ", "clipped", " ", "to", " ", "be"}]}], " ", 
      "\[GreaterEqual]", " ", 
      RowBox[{
      "0", "\n", "\t\t", "Use", " ", "Outer", " ", "to", " ", "make", " ", 
       "a", " ", "list", " ", "of", " ", "the", " ", "target", " ", "grades", 
       " ", "of", " ", "every", " ", "term", " ", "from", " ", "clif1", " ", 
       "with", " ", "every", " ", "term", " ", "from", " ", "clif2", "\n", 
       "\t\t\t", "Target", " ", "grade", " ", "for", " ", "Wedge", " ", 
       "Product", " ", "of", " ", "2", " ", "blades", " ", "is", " ", "sum", 
       " ", "of", " ", "the", " ", "two", " ", "grades", "\n", "\t\t\t", 
       "Thus"}]}], ",", " ", 
     RowBox[{"targetGradeList", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", " ", "+", " ", "0"}], ",", " ", 
         RowBox[{"1", " ", "+", " ", "2"}], ",", " ", 
         RowBox[{"2", " ", "+", " ", "0"}], ",", " ", 
         RowBox[{"2", " ", "+", " ", "2"}]}], "}"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"1", ",", " ", "3", ",", " ", "2", ",", " ", "4"}], " ", 
          "}"}], "\n", "\t\t\t", "Target", " ", "grade", " ", "for", " ", 
         "Dot", " ", "Product", " ", "is"}], " ", "|", 
        RowBox[{"grade1", " ", "-", " ", "grade2"}], "|", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{
         "Target", " ", "grade", " ", "for", " ", "Right", " ", "Contraction",
           " ", "is", " ", "grade1"}], " ", "-", " ", 
         RowBox[{"grade2", "\n", "\t\t\t", 
          RowBox[{"Caution", ":", " ", 
           RowBox[{"For", " ", "left", " ", "contraction"}]}]}]}]}]}]}], ",", 
     " ", 
     RowBox[{"desire", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"grade2", " ", "-", " ", "grade1"}], ")"}], ".", " ", "\n", 
       "\t\t\t\t", "But"}]}], ",", " ", 
     RowBox[{
     "to", " ", "mimic", " ", "the", " ", "outer", " ", "order", " ", "of", 
      " ", "prdtBlade"}], ",", " ", 
     RowBox[{
     "we", " ", "must", " ", "enter", " ", "blade", " ", "1", " ", "first", 
      "\n", "\t\t\t\t", "That", " ", "is"}], ",", " ", 
     RowBox[{"we", " ", "cannot", " ", "enter", " ", 
      RowBox[{"Outer", " ", "[", " ", 
       RowBox[{"Subtract", ",", " ", "gradeList2", ",", " ", "gradeList1"}], 
       " ", "]"}], "\n", "\t\t\t\t", "Rather"}], ",", " ", 
     RowBox[{
      RowBox[{"we", " ", "enter", " ", "this", " ", "as"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"Outer", " ", "[", " ", 
        RowBox[{"Subtract", ",", " ", "gradeList1", ",", " ", "gradeList2"}], 
        " ", "]"}], "\n", "\t\t\t\t", "The", " ", "latter", " ", "gives"}]}], 
     ",", " ", 
     RowBox[{"of", " ", "course"}], ",", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "opposite", " ", "sign", " ", "from", " ", "grade", " ", 
       "1"}], " ", "-", " ", 
      RowBox[{
      "grade", " ", "2", " ", "for", " ", "every", " ", "subtraction", "\n", 
       "\t\t", "Use", " ", "Inner", " ", "to", " ", "make", " ", "a", " ", 
       "list", " ", "of", " ", "pairs"}]}], ",", " ", 
     RowBox[{"where", ":", "\n", "\t\t\t", 
      RowBox[{
      "First", " ", "element", " ", "of", " ", "pair", " ", "is", " ", "the", 
       " ", "geometric", " ", "product", " ", "of", " ", "2", " ", "blades", 
       "\n", "\t\t\t", "Second", " ", "element", " ", "of", " ", "pair", " ", 
       "is", " ", "the", " ", "target", " ", "grade", " ", "for", " ", "that",
        " ", "geometric", " ", "product", "\n", "\t\t\t", "For", " ", "Wedge",
        " ", "Product"}]}], ",", " ", 
     RowBox[{"bladeGradePairList", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"4", " ", 
            SubscriptBox["e", "1"]}], ",", " ", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["e", "1"]}], " ", 
            SubscriptBox["e", "3"], " ", 
            SubscriptBox["e", "4"]}], ",", " ", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"4", " ", 
            SubscriptBox["e", "2"], " ", 
            SubscriptBox["e", "3"]}], ",", " ", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["e", "2"]}], " ", 
            SubscriptBox["e", "4"]}], ",", " ", "4"}], "}"}]}], "}"}], "\n", 
       "\t\t", "Use", " ", "pSliceG", " ", "to", " ", "extract", " ", "the", 
       " ", "part", " ", "of", " ", "each", " ", "geometric", " ", 
       "product"}]}], ",", " ", 
     RowBox[{"if", " ", "any"}], ",", " ", 
     RowBox[{
     "having", " ", "the", " ", "target", " ", "grade", "\n", "\t\t\t", 
      RowBox[{"Note", ":", " ", 
       RowBox[{"We", " ", "need", " ", "a", " ", "list", " ", "of", " ", 
        RowBox[{"pSliceG", "[", 
         RowBox[{"blade", ",", " ", 
          RowBox[{"tgt", " ", "grade"}]}], "]"}], " ", "so", " ", "we", " ", 
        "APPLY", " ", "pSliceG", " ", "at", " ", "level", " ", "1", "\n", 
        "\t\t\t", "For", " ", "Wedge", " ", "Product"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"4", 
         SubscriptBox["e", "1"]}], ",", " ", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["e", "1"]}], " ", 
         SubscriptBox["e", "3"], " ", 
         SubscriptBox["e", "4"]}], ",", " ", 
        RowBox[{"4", " ", 
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "3"]}], ",", " ", "0"}], " ", "}"}], "\n", "\t\t", 
      "Lastly"}], ",", " ", 
     RowBox[{
      RowBox[{
      "we", " ", "change", " ", "the", " ", "list", " ", "of", " ", "target", 
       " ", "pieces", " ", "into", " ", "its", " ", "series", " ", 
       "expression", "\n", "\t\t\t", "Wedge", " ", "Product"}], " ", "=", " ", 
      RowBox[{"targetPrdt", " ", "=", " ", 
       RowBox[{
        RowBox[{"4", " ", 
         SubscriptBox["e", 
          RowBox[{"1", " "}]]}], " ", "+", 
        RowBox[{"4", " ", 
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "3"]}], " ", "-", " ", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "3"], " ", 
         SubscriptBox["e", "4"], "\n", "\t", "\n", "\t  ", 
         RowBox[{"OUTPUT", ":", "\n", "\t\t", 
          RowBox[{"The", " ", 
           RowBox[{
            RowBox[{"dot", "/", "wedge"}], "/", "contraction"}], " ", 
           "product", " ", "of", " ", "the", " ", "two", " ", 
           "clifs"}]}]}]}]}]}], ",", " ", 
     RowBox[{
     "defined", " ", "as", " ", "the", " ", "sum", " ", "of", " ", "the", " ",
       "products", " ", "of", " ", "\n", "\t\t", "every", " ", "term", " ", 
      "from", " ", "clif1", " ", "with", " ", "every", " ", "term", " ", 
      "from", " ", "clif2"}]}], "  ", "*)"}], "\n", "\t\t", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clifList1", ",", "clifList2", ",", "prdtBladeList", ",", "EijList1", 
       ",", "EijList2", ",", "gradeList1", ",", "\n", "\t\t\t", "gradeList2", 
       ",", "targetGradeList", ",", "bladeGradePairList", ",", "targetPrdt"}],
       "}"}], ",", "\n", "\n", "\t\t", 
     RowBox[{
      RowBox[{"clifList1", "=", 
       RowBox[{"ClifToListG", "[", "clif1", "]"}]}], ";", 
      RowBox[{"clifList2", "=", 
       RowBox[{"ClifToListG", "[", "clif2", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"prdtBladeList", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Outer", "[", 
         RowBox[{"GeomPrdtG", ",", "clifList1", ",", "clifList2"}], "]"}], 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"EijList1", "=", 
       RowBox[{"EijListG", "/@", "clifList1"}]}], ";", "\n", "\t\t", 
      RowBox[{"EijList2", "=", 
       RowBox[{"EijListG", "/@", "clifList2"}]}], ";", "\n", "\t\t", 
      RowBox[{"gradeList1", "=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@@@", "EijList1"}], "-", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"gradeList2", "=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@@@", "EijList2"}], "-", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prdtType", " ", "==", " ", "\"\<Wedge\>\""}], ",", 
        RowBox[{"targetGradeList", "=", 
         RowBox[{"Outer", "[", 
          RowBox[{"Plus", ",", "gradeList1", ",", "gradeList2"}], "]"}]}]}], 
       "]"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prdtType", " ", "==", " ", "\"\<Dot\>\""}], ",", 
        RowBox[{"targetGradeList", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{"Outer", "[", 
           RowBox[{"Subtract", ",", "gradeList1", ",", "gradeList2"}], "]"}], 
          "]"}]}]}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prdtType", " ", "==", " ", "\"\<LC\>\""}], ",", 
        RowBox[{"targetGradeList", "=", 
         RowBox[{"-", 
          RowBox[{"Outer", "[", 
           RowBox[{"Subtract", ",", "gradeList1", ",", "gradeList2"}], 
           "]"}]}]}]}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prdtType", " ", "==", " ", "\"\<RC\>\""}], ",", 
        RowBox[{"targetGradeList", "=", 
         RowBox[{"Outer", "[", 
          RowBox[{"Subtract", ",", "gradeList1", ",", "gradeList2"}], 
          "]"}]}]}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"targetGradeList", "=", 
       RowBox[{"Flatten", "[", "targetGradeList", "]"}]}], ";", "\n", "\t\t", 
      
      RowBox[{"bladeGradePairList", "=", 
       RowBox[{"Inner", "[", 
        RowBox[{
        "List", ",", "prdtBladeList", ",", "targetGradeList", ",", "List"}], 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"targetPrdt", "=", 
       RowBox[{"CollectG", "[", 
        RowBox[{
         RowBox[{"Apply", "[", 
          RowBox[{"pSliceG", ",", "bladeGradePairList", ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], "/.", 
         RowBox[{"List", "->", "Plus"}]}], "]"}]}], ";", "\n", "\t\t", "\n", 
      "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"debug6", "==", "True"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<clif lists: \>\"", ",", "clifList1", ",", "\"\<,  \>\"", ",", 
           "clifList2"}], "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(e\), \(i, j,  ... \)]\) lists: \>\"", ",",
            "EijList1", ",", "\"\<,  \>\"", ",", "EijList2"}], "]"}], ";", 
         "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<grade lists: \>\"", ",", "gradeList1", ",", "\"\<,  \>\"", ",",
            "gradeList2"}], "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Blade geom prdt list: \>\"", ",", "prdtBladeList"}], 
          "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Target grade list: \>\"", ",", "targetGradeList"}], 
          "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<List of {blade geom prdt, tgt grade}: \>\"", ",", 
           "bladeGradePairList"}], "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"prdtType", ",", "\"\< product = \>\"", ",", "targetPrdt"}],
           "]"}]}]}], "\n", "\t\t", "]"}], ";", "\t", "\n", "\t\t", 
      "targetPrdt"}]}], "\t", "\n", "\t", "]"}]}], "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "PrdtG", " ", "Module"}], "  ", "*)"}], 
  "\n", "\t", "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"DotPrdtG", "[", 
   RowBox[{"clif1_", ",", "clif2_"}], "]"}], ":=", "\t\t", "\n", 
  RowBox[{"(*", "   ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Performed", " ", "as", " ", "an", " ", "operation", " ", "on", " ", 
      "each", " ", "pair", " ", "of", " ", "terms", " ", "from", " ", "the", 
      " ", "clifs"}], ";", " ", 
     RowBox[{
      RowBox[{
      "and", " ", "then", " ", "summed", "\n", "\t ", "The", " ", "dot", " ", 
       "product", " ", "of", " ", "two", " ", "atoms", " ", "is", " ", 
       "their", " ", "geometric", " ", "product", " ", "if", " ", "its", " ", 
       "grade", " ", "is"}], " ", "|", " ", 
      RowBox[{"p", " ", "-", " ", "q"}], " ", "|", "\n", "\t  ", 
      RowBox[{
      "where", " ", "p", " ", "and", " ", "q", " ", "are", " ", "the", " ", 
       "respective", " ", "grades", " ", "of", " ", "the", " ", "two", " ", 
       RowBox[{"terms", ".", " ", "The"}], " ", "dot", " ", "product", " ", 
       "is", " ", "zero", " ", "otherwise", "\n", "\t  ", "\n", "\t  ", "For",
        " ", "example"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "The", " ", "dot", " ", "product", " ", "of", " ", "a", " ", "grade", 
      " ", "p", " ", "multivector", " ", "with", " ", "a", " ", "grade", " ", 
      "q", " ", "multivector", " ", "is", " ", "the", " ", "\n", "\t  ", 
      "grade"}], " ", "|", " ", "p"}], " ", "\[Dash]", " ", 
    RowBox[{"q", " ", "|", " ", 
     RowBox[{"slice", " ", "of", " ", "their", " ", "geometric", " ", 
      RowBox[{"product", ".", " ", "This"}], " ", "is", " ", "possibly", " ", 
      "0."}]}]}], "\n", " ", "*)"}], "\n", "\t  ", "\n", "\t    ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "dotPrdt", "}"}], ",", "\n", "\t    ", 
    RowBox[{
     RowBox[{"dotPrdt", "=", 
      RowBox[{"PrdtG", "[", 
       RowBox[{"clif1", ",", "clif2", ",", "\"\<Dot\>\""}], "]"}]}], ";", 
     "\n", "\t\t", "dotPrdt"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"DotPrdtG", "[", 
   RowBox[{"u_", ",", "v_", ",", "w__"}], "]"}], ":=", 
  RowBox[{"DotPrdtG", "[", 
   RowBox[{
    RowBox[{"DotPrdtG", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DotPrdtG", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"u", "==", "0"}], "||", 
     RowBox[{"v", "==", "0"}]}]}]}], "\n", "\t", 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "DotPrdtG", " ", "Module"}], "  ", "*)"}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtAtomG", "[", 
    RowBox[{"blade1_", ",", "blade2_"}], "]"}], ":=", " ", 
   RowBox[{"(*", "   ", 
    RowBox[{
     RowBox[{
     "Used", " ", "by", " ", "GeomPrdtG", " ", "to", " ", "process", " ", 
      "atom", " ", "pairs", "\n", "\t", 
      RowBox[{"INPUTS", ":", " ", 
       RowBox[{"2", " ", "simple", " ", "blades"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"blade1", " ", "&"}], " ", "bladd2", "  ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"e", ".", "g", ".", " ", "blade1"}], " ", "=", " ", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "4"]}]}], ")"}], "\n", "\t", 
      RowBox[{"PROCESS", ":", " ", "\n", "\t\t", 
       RowBox[{
       "Combine", " ", "the", " ", "2", " ", "subscript", " ", "lists"}]}]}], 
     ",", " ", 
     RowBox[{
      RowBox[{
      "preserving", " ", "blade1", " ", "subscripts", " ", "before", " ", 
       "blade2", "\n", "\t\t", "Use", " ", "SignatureG", " ", "to", " ", 
       "get", " ", "the", " ", "signature", " ", "of", " ", "the", " ", 
       "combined", " ", "list", "\n", "\t", 
       RowBox[{"OUTPUT", ":", "\n", "\t\t", "bladePrdt"}]}], " ", "=", " ", 
      RowBox[{"algebraic", " ", "product", " ", "of", " ", "signature"}]}], 
     ",", " ", "blade1", ",", " ", 
     RowBox[{"and", " ", "blade", " ", "2", "\n", "\t\t", 
      RowBox[{"Note", ":", " ", 
       RowBox[{
        SubsuperscriptBox["e", "i", "2"], " ", "terms", " ", "are", " ", 
        "NOT", " ", "reduced", " ", "until", " ", "after", " ", "this", " ", 
        "function", " ", "is", " ", "called", " ", "by", " ", 
        "GeomPrdtG"}]}]}]}], "\t\t\t\t", "\n", "*)"}], "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "maxDim", ",", "subscriptList1", ",", "subscriptList2", ",", 
       "subscriptList12", ",", "signature12", ",", "bladePrdt"}], "}"}], ",", 
     "\n", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtAtomG: Blade1 = \>\"", ",", "blade1", ",", 
           "\"\<, Blade2 = \>\"", ",", "blade2"}], "]"}]}]}], "\n", "\t\t", 
       "]"}], ";", "\n", "\t\t", "\n", "\t\t", 
      RowBox[{"subscriptList1", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"SubscriptListG", "[", "blade1", "]"}], "]"}]}], ";", " ", 
      "\n", "\t\t\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{" ", 
         RowBox[{
          RowBox[{"Example", ":", " ", 
           RowBox[{"5", " ", "+", " ", 
            RowBox[{"3", " ", 
             SubscriptBox["e", "1"], " ", 
             SubscriptBox["e", "2"]}]}]}], " ", "\[Rule]", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"{", "0", "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], " "}]}], ")"}], " ", "\[Rule]",
         " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1", ",", " ", "2"}], "}"}]}], "  ", "*)"}], 
      "\n", "\t\t", 
      RowBox[{"maxDim", "=", 
       RowBox[{"Max", "[", "subscriptList1", "]"}]}], ";", " ", 
      RowBox[{"(*", "  ", 
       RowBox[{
        RowBox[{"Example", ":", " ", "maxDim"}], " ", "=", " ", "3"}], "  ", 
       "*)"}], "\n", "\t\t", 
      RowBox[{"subscriptList2", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"SubscriptListG", "[", "blade2", "]"}], "/.", 
         RowBox[{
          RowBox[{"u_", "/;", 
           RowBox[{"u", "==", "0"}]}], "->", "maxDim"}]}], "]"}]}], ";", " ", 
      "\n", "\t\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Example", ":", "  ", "4"}], " ", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"{", "0", "}"}], " ", "\[Rule]", " ", 
         RowBox[{"{", "3", "}"}]}]}], "   ", "*)"}], "\n", "\n", "\t\t", 
      RowBox[{"subscriptList12", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"subscriptList1", ",", "subscriptList2"}], "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{"Example", ":", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "4"}], "}"}]}], "  ", "*)"}], "\n", 
      "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtAtomG: Flattened list of Blade1 subscripts = \>\"", 
           ",", " ", "subscriptList1", ",", "\n", "\t\t\t\t", 
           "\"\<, Flattened list of Blade2 subscripts = \>\"", ",", 
           "subscriptList2"}], "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Joined flatten subscript lists = \>\"", ",", 
           "subscriptList12"}], "]"}]}]}], "\n", "\t\t", "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"signature12", "=", 
       RowBox[{"SignatureG", "[", "subscriptList12", "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Example", ":", " ", "signature"}], " ", "=", " ", 
        RowBox[{"+", "1"}]}], "  ", "*)"}], "\n", "\n", "\t\t", 
      RowBox[{"bladePrdt", "=", 
       RowBox[{"signature12", " ", "blade1", " ", "blade2"}]}], ";", "\n", 
      "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", "\n", "\t\t\t", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<GeomPrdtAtomG: Signature = \>\"", ",", "signature12", ",", 
          "\"\<, product blade = \>\"", ",", "bladePrdt"}], "]"}]}], "\n", 
       "\t\t", "]"}], ";", "\n", "\n", "\t\t", "bladePrdt"}]}], "\n", "\t", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"GeomPrdtG", "[", 
   RowBox[{"0", ",", "y_"}], "]"}], ":=", "0"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{"x_", ",", "0"}], "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{"clif1_", ",", "clif2_"}], "]"}], ":=", "   ", 
   RowBox[{"(*", " ", "\n", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUTS", ":", "\n", "\t\t", "clif1"}], ",", " ", "clif2", " ", 
     "\[Dash]", " ", 
     RowBox[{"Users", " ", "input", " ", "clifs"}], ",", " ", 
     RowBox[{
     "with", " ", "either", " ", "numeric", " ", "or", " ", "symbolic", " ", 
      "coefficients", "\n", "\t", 
      RowBox[{"PROCESS", ":", " ", "\n", "\t\t", 
       RowBox[{
       "1.", " ", "Put", " ", "the", " ", "2", " ", "clifs", " ", "into", " ",
         "lists", "\n", "\t\t", "2.", " ", "Take", " ", "outer", " ", 
        "product", " ", "of", " ", "function", " ", "GeopmPrdtBladeG", " ", 
        "applied", " ", "to", " ", "the", " ", "lists", " ", "to", " ", 
        "create", " ", "the", " ", "\n", "\t\t\t", "list", " ", "of", " ", 
        "geometric", " ", "products", " ", "between", " ", "all", " ", 
        "terms", " ", 
        RowBox[{"(", "blades", ")"}], " ", "of", " ", "clif1", " ", "with", 
        " ", "all", " ", "terms", " ", "of", " ", "clif2", "\n", "\t\t", "3.",
         " ", "Convert", " ", "the", " ", "list", " ", "back", " ", "to", " ",
         "an", " ", "expression", " ", "\n", "\t\t", "4.", " ", "Use", " ", 
        "CollectG", " ", "to", " ", "evaluate", " ", "all", " ", "terms", " ", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "i"}], "]"}], "^", "2"}], " ", "and", " ", 
        "to", " ", "collect", " ", "terms", " ", "by", " ", "blades", "\n", 
        "\t", "OUPUT"}], ":", "\n", "\t ", "clif12", ":", " ", 
       RowBox[{"The", " ", "geometric", " ", 
        RowBox[{"(", 
         RowBox[{"a", ".", "k", ".", "a", ".", " ", "Clifford"}], ")"}], " ", 
        "product", " ", "clif"}]}]}]}], " ", "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clif1a", ",", "clif2a", ",", "clifList1", ",", "clifList2", ",", 
       "clifList12", ",", "clif12"}], "}"}], ",", "\n", "\n", "\t\t", 
     RowBox[{
      RowBox[{"clif1a", "=", 
       RowBox[{"Expand", "[", "clif1", "]"}]}], ";", 
      RowBox[{"clif2a", "=", 
       RowBox[{"Expand", "[", "clif2", "]"}]}], ";", "\t", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtG: clif1 = \>\"", ",", "clif1a", ",", 
           "\"\<, Clif2 = \>\"", ",", "clif2a"}], "]"}]}]}], "]"}], ";", "\n",
       "\t\t", "\n", "\t\t", 
      RowBox[{"clifList1", "=", 
       RowBox[{"ClifToListG", "[", "clif1a", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"clifList2", "=", 
       RowBox[{"ClifToListG", "[", "clif2a", "]"}]}], ";", "\t", "\n", "\n", 
      "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtG: Clif1 List = \>\"", ",", "clifList1", ",", 
           "\"\<,  Clif2 List = \>\"", ",", "clifList2"}], "]"}]}]}], "]"}], 
      ";", "\n", "\n", "\t\t", 
      RowBox[{"clifList12", "=", 
       RowBox[{"Outer", "[", 
        RowBox[{"GeomPrdtAtomG", ",", "clifList1", ",", "clifList2"}], 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"clif12", " ", "=", " ", 
       RowBox[{"CollectG", "[", 
        RowBox[{"clifList12", "/.", 
         RowBox[{"List", "->", "Plus"}]}], "]"}]}], ";", "\n", "\t\t", "\n", 
      "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtG: Product clif list = \>\"", ",", "clifList12"}], 
          "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Product clif = \>\"", ",", "clif12"}], "]"}]}]}], "\n",
        "\t\t", "]"}], ";", "\n", "\t\t", "clif12"}]}], "\n", "\t", "]"}]}], 
  "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "GeomPrdtG", " ", "module"}], "  ", "*)"}], 
  "\n", "\t", "\n", "\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{"u_", ",", "v_", ",", "w__"}], "]"}], ":=", 
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{
     RowBox[{"GeomPrdtG", "[", 
      RowBox[{"u", ",", "v"}], "]"}], ",", "w"}], "]"}]}], "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"Enables", " ", "expressions", " ", "like", " ", 
    RowBox[{"GeomPrdtG", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "u", ",", "v"}], "]"}]}], "  ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"u", "==", "0"}], "||", 
     RowBox[{"v", "==", "0"}]}]}]}], "\n", "\n", "\t ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "GeomPrdtG", " ", "Module"}], "  ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"LeftContractionG", "[", 
   RowBox[{"clif1_", ",", "clif2_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "leftContraction", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"leftContraction", "=", 
      RowBox[{"PrdtG", "[", 
       RowBox[{"clif1", ",", "clif2", ",", "\"\<LC\>\""}], "]"}]}], ";", "\n",
      "\t\t", "leftContraction"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"LeftContractionG", "[", 
   RowBox[{"u_", ",", "v_", ",", "w__"}], "]"}], ":=", 
  RowBox[{"LeftContractionG", "[", 
   RowBox[{
    RowBox[{"LeftContractionG", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LeftContractionG", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"u", "==", "0"}], "||", 
     RowBox[{"v", "==", "0"}]}]}]}], "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "Function", " ", "LeftContractionG"}], "  ",
    "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"RightContractionG", "[", 
   RowBox[{"clif1_", ",", "clif2_"}], "]"}], ":=", "\t\t", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "rightContraction", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"rightContraction", "=", 
      RowBox[{"PrdtG", "[", 
       RowBox[{"clif1", ",", "clif2", ",", "\"\<RC\>\""}], "]"}]}], ";", "\n",
      "\t\t", "rightContraction"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RightContractionG", "[", 
   RowBox[{"u_", ",", "v_", ",", "w__"}], "]"}], ":=", 
  RowBox[{"RightContractionG", "[", 
   RowBox[{
    RowBox[{"RightContractionG", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RightContractionG", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"u", "==", "0"}], "||", 
     RowBox[{"v", "==", "0"}]}]}]}], "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "Function", " ", "RightContractionG"}], 
   "  ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarPrdtG", "[", 
    RowBox[{"clif1_", ",", "clif2_"}], "]"}], ":=", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\n", "\n", 
      RowBox[{
       RowBox[{"INPUT", ":", " ", 
        RowBox[{"multivectors", "\n", "PROCESS"}], ":", "\n", "\t", 
        RowBox[{"As", " ", "with", " ", "function", " ", "PrdtG"}]}], ",", 
       " ", 
       RowBox[{
       "prdtBladeList", " ", "is", " ", "a", " ", "list", " ", "of", " ", 
        "blades", " ", "in", " ", "the", " ", "geometric", " ", "product", 
        "\n", "\t", "Similar", " ", "to", " ", "function", " ", "PrdtG"}], 
       ",", " ", 
       RowBox[{
        RowBox[{
        "EijListG", " ", "is", " ", "a", " ", "list", " ", "of", " ", "the", 
         " ", "e"}], "-", 
        RowBox[{
        "subscripted", " ", "terms", " ", "of", " ", "the", " ", "blades", 
         "\n", "\t", "However"}]}], ",", " ", 
       RowBox[{"when", " ", "EijListG", " ", "is", " ", "MAPPED", " ", 
        RowBox[{"(", "/@", ")"}], " ", "to", " ", "prdtBladeList"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"we", " ", "can", " ", "get", " ", "duplicate", " ", "e"}], 
         "-", 
         RowBox[{"subscripts", ":", "\n", "\t\t", 
          RowBox[{"If", " ", "clifList"}]}]}], " ", "=", " ", 
        RowBox[{"{", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", " ", "+", " ", 
             RowBox[{"\[Sqrt]", "2"}]}], ")"}], " ", 
           SubscriptBox["e", "1"]}], " "}]}]}]}], "}"}], ",", " ", 
     RowBox[{
      RowBox[{"then", " ", "EijList", " ", "computes", " ", "to", " ", 
       RowBox[{"{", " ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["e", "1"], ",", " ", 
          SubscriptBox["e", "1"]}], "}"}], " ", "}"}], "\n", "\t", "Map", " ",
        "DeleteDuplicates", " ", "to", " ", "get", " ", "eList"}], " ", "=", 
      " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", " ", 
           SubscriptBox["e", "1"], " ", "}"}], " \t\t", "\n", "\t", 
          RowBox[{"Apply", " ", "[", " ", 
           RowBox[{"Length", ",", " ", "EijList", ",", " ", 
            RowBox[{"{", "1", "}"}]}], " ", "]"}], " ", "to", " ", "get", " ",
           "the", " ", "list", " ", "of", " ", "lengths", " ", "of", " ", 
          "the", " ", "e"}], "-", 
         RowBox[{
         "subscripted", " ", "terms", "\n", "\t", "Subtract", " ", "one", " ",
           "to", " ", "send", " ", "grade", " ", "0", " ", "terms", " ", 
          "to"}], " ", "-", 
         RowBox[{"1", " ", "and", " ", "all", " ", "other", " ", "terms", " ", 
          RowBox[{"to", " ", "[", " ", 
           RowBox[{"0", ",", " ", "\[Infinity]"}], " ", "]"}], "\n", "\t", 
          "Clip", " ", "the", " ", "non"}], "-", 
         RowBox[{
         "grade", " ", "0", " ", "terms", " ", "to", " ", "make", " ", "them",
           " ", "all", " ", "0"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"and", " ", "multiply", " ", "by"}], " ", "-", 
          RowBox[{
          "1", " ", "to", " ", "make", " ", "the", " ", "grade", " ", "zero", 
           " ", "terms"}]}], " ", "=", " ", 
         RowBox[{
          RowBox[{"+", "1"}], "\n", "\t", "The", " ", "scalar", " ", 
          "product", " ", "is", " ", "the", " ", "grade", " ", "zero", " ", 
          "terms", " ", "in", " ", "the", " ", "geometric", " ", 
          RowBox[{"product", ":", " ", "\n", "\t\t", 
           RowBox[{
            RowBox[{"prdtBladeList", " ", ".", " ", "zeroOnegradeList"}], " ",
             "\n", "\t", "Note"}], ":", " ", 
           RowBox[{"We", " ", 
            RowBox[{"can", "'"}], "t", " ", "use", " ", "PrdtG", " ", 
            RowBox[{"(", 
             RowBox[{
             "as", " ", "is", " ", "done", " ", "by", " ", "all", " ", "the", 
              " ", "other", " ", "products"}], ")"}], " ", "because", " ", 
            "grade", " ", "zero", " ", "is", " ", "not", " ", "the", "\n", 
            "\t\t", "sum"}]}]}]}], ",", " ", "difference", ",", " ", 
        RowBox[{
        "or", " ", "any", " ", "equation", " ", "involving", " ", "the", " ", 
         "grades", " ", "p", " ", "and", " ", "q", " ", "of", " ", "the", " ",
          "clif", " ", "atoms", " ", "\n", "\t", 
         RowBox[{"OUTPUT", ":", " ", 
          RowBox[{"The", " ", "scalar", " ", "product"}]}]}]}], " "}]}]}], 
    "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clifList1", ",", "clifList2", ",", "prdtBladeList", ",", "EijList", 
       ",", "eList", ",", "zeroOnegradeList", ",", "scalarPrdt"}], "}"}], ",",
      "\n", "\t\t", 
     RowBox[{
      RowBox[{"clifList1", "=", 
       RowBox[{"ClifToListG", "[", "clif1", "]"}]}], ";", 
      RowBox[{"clifList2", "=", 
       RowBox[{"ClifToListG", "[", "clif2", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"prdtBladeList", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Outer", "[", 
         RowBox[{"GeomPrdtG", ",", "clifList1", ",", "clifList2"}], "]"}], 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"EijList", "=", 
       RowBox[{"EijListG", "/@", "prdtBladeList"}]}], ";", "\n", "\t\t", 
      RowBox[{"eList", "=", 
       RowBox[{"DeleteDuplicates", "/@", "EijList"}]}], ";", " ", "\n", 
      "\t\t", 
      RowBox[{"zeroOnegradeList", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"Clip", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@@@", "eList"}], "-", "1"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "0"}], "}"}]}], "]"}]}]}], ";", 
      "\n", "\t\t", 
      RowBox[{"scalarPrdt", " ", "=", " ", 
       RowBox[{"prdtBladeList", ".", "zeroOnegradeList"}]}], ";", "\n", 
      "\t\t", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"debug8", " ", "==", " ", "True"}], ",", "\n", "  \t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", " ", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<clif lists: \>\"", ",", " ", "clifList1", ",", " ", 
           "\"\<,  \>\"", ",", " ", "clifList2"}], "]"}], ";", "\n", 
         "  \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Blade geom prdt list: \>\"", ",", " ", "prdtBladeList"}], 
          "]"}], ";", "\n", "  \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<e-Subscript list: \>\"", ",", " ", "EijList"}], "]"}], 
         ";", "\n", "  \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Reduced e-Subscript list: \>\"", ",", "eList"}], "]"}],
          ";", "\n", "  \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<grade list: \>\"", ",", " ", "zeroOnegradeList"}], 
          "]"}], ";", "\n", "  \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Scalar product = \>\"", ",", " ", "scalarPrdt"}], 
          "]"}]}]}], "]"}], ";", "\n", "\t\t", "scalarPrdt"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"ScalarPrdtG", "[", 
   RowBox[{"u_", ",", "v_", ",", "w__"}], "]"}], ":=", 
  RowBox[{"ScalarPrdtG", "[", 
   RowBox[{
    RowBox[{"ScalarPrdtG", "[", 
     RowBox[{"u", ",", "v"}], "]"}], ",", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarPrdtG", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"u", "==", "0"}], "||", 
     RowBox[{"v", "==", "0"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"WedgePrdtG", "[", 
   RowBox[{"clif1_", ",", "clif2_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"INPUTS", ":", 
     RowBox[{
     "cc", "\n", "\t\t", "The", " ", "two", " ", "clifs", " ", "whose", " ", 
      "Wedge", " ", "product", " ", "is", " ", "to", " ", "be", " ", "taken", 
      "\n", "\t  ", "PROCESS"}], ":", "\n", "\t\t", 
     RowBox[{"See", " ", "Function", " ", "PrdtG", "\t", "\n", "\t  ", 
      RowBox[{"OUTPUT", ":", "\n", "\t\t", 
       RowBox[{"The", " ", "Wedge", " ", 
        RowBox[{"(", 
         RowBox[{"a", ".", "k", ".", "a", ".", " ", "Exterior"}], ")"}], " ", 
        "product", " ", "of", " ", "the", " ", "two", " ", "clifs"}]}]}]}], 
    ",", " ", 
    RowBox[{
    "defined", " ", "as", " ", "the", " ", "sum", " ", "of", " ", "the", " ", 
     "Wedge", " ", "products", " ", "of", " ", "\n", "\t\t", "every", " ", 
     "term", " ", "from", " ", "clif1", " ", "with", " ", "every", " ", 
     "term", " ", "from", " ", "clif2"}]}], "  ", "*)"}], "\t", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "wedgePrdt", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"wedgePrdt", "=", 
      RowBox[{"PrdtG", "[", 
       RowBox[{"clif1", ",", "clif2", ",", "\"\<Wedge\>\""}], "]"}]}], ";", 
     "\n", "\t\t", "wedgePrdt"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WedgePrdtG", "[", 
    RowBox[{"u_", ",", "v_", ",", "w__"}], "]"}], ":=", 
   RowBox[{"WedgePrdtG", "[", 
    RowBox[{
     RowBox[{"WedgePrdtG", "[", 
      RowBox[{"u", ",", "v"}], "]"}], ",", "w"}], "]"}]}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"These", " ", "cases", " ", "covered", " ", "by", " ", 
     RowBox[{"PrdtG", ".", " ", "This"}], " ", "code", " ", "is", " ", 
     "conflicting", " ", "at", " ", 
     RowBox[{
      RowBox[{"best", "?", "\n", "\t", "WedgePrdtG"}], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}]}], ":=", 
    RowBox[{"0", "/;", 
     RowBox[{
      RowBox[{"u", "==", "0"}], "||", 
      RowBox[{"v", "==", "0"}]}]}]}], "  ", "*)"}], "\n", "\t", 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "WedgePrdtG", " ", "Module"}], "  ", "*)"}],
   " \t\t\t\t\t \t\t\t\t\t ", "\n", 
  "\t\t\t\t\t \t\t\t\t\t \t\t\t\t\t \t\t\t\t\t "}], "\n", 
 RowBox[{"End", "[", "]"}], "\n", 
 RowBox[{"EndPackage", "[", "]"}]}], "Code",
 CellChangeTimes->{
  3.7779240800555477`*^9, {3.77792434054056*^9, 3.777924341915412*^9}, {
   3.777925722910266*^9, 3.777925994801112*^9}, {3.7779260295317497`*^9, 
   3.777926040289456*^9}, {3.778020002202085*^9, 3.7780200242687263`*^9}, {
   3.778022041303303*^9, 3.778022065789042*^9}, 3.778022182815987*^9, 
   3.7780222231737823`*^9, {3.778022262567603*^9, 3.778022282960451*^9}, {
   3.778022901733047*^9, 3.778022906874017*^9}, {3.7790337461851177`*^9, 
   3.779033855306566*^9}, {3.7790385975271177`*^9, 3.77903859981879*^9}, {
   3.7797235524460497`*^9, 3.7797235531513567`*^9}, {3.779723634653913*^9, 
   3.779723862687521*^9}, {3.779744866854692*^9, 3.779744879567782*^9}, {
   3.779747026919469*^9, 3.779747067867486*^9}, {3.779747105014312*^9, 
   3.7797471121664658`*^9}, {3.779747675180099*^9, 3.779747678546771*^9}, {
   3.7797478801447973`*^9, 3.779747899361558*^9}, {3.780174887989196*^9, 
   3.780175010775611*^9}, {3.780525095124792*^9, 3.780525109510954*^9}, {
   3.781911909147861*^9, 3.781912002605515*^9}},
 CellLabel->
  "In[1509]:=",ExpressionUUID->"d9221d14-bb4f-46a3-8f96-ef51c063cb88"],

Cell[BoxData["\<\"GeomAlg2019Oct`Private`\"\>"], "Output",
 CellChangeTimes->{
  3.777988351477603*^9, {3.777991793726119*^9, 3.77799179420926*^9}, {
   3.7779935843691*^9, 3.777993603517419*^9}, 3.778022182539627*^9, {
   3.778329169939632*^9, 3.778329170504438*^9}, {3.778364989782213*^9, 
   3.7783649902837*^9}, 3.778416108300178*^9, {3.778435307237536*^9, 
   3.778435307875317*^9}, 3.7784356060492487`*^9, 3.778844738097382*^9, {
   3.77903917853236*^9, 3.779039179065895*^9}, 3.7790398770467997`*^9, {
   3.779041960168488*^9, 3.779041960766954*^9}, {3.779048519166436*^9, 
   3.779048519768649*^9}, {3.779049599130513*^9, 3.779049599804266*^9}, {
   3.77939325847579*^9, 3.779393259057596*^9}, {3.7793951162376003`*^9, 
   3.77939511690985*^9}, 3.779395290392931*^9, {3.779395648838168*^9, 
   3.779395649399934*^9}, {3.7793968359120617`*^9, 3.7793968364338627`*^9}, 
   3.779397584578475*^9, {3.779400105234509*^9, 3.779400105968104*^9}, {
   3.779402298634287*^9, 3.7794022993551188`*^9}, 3.779402383379691*^9, {
   3.779444881910008*^9, 3.7794448825882587`*^9}, {3.779482639665822*^9, 
   3.779482640380859*^9}, 3.779482935385131*^9, 3.7794838943291597`*^9, {
   3.7794854519409647`*^9, 3.7794854525916767`*^9}, {3.779487319894105*^9, 
   3.779487320597378*^9}, {3.779642660245791*^9, 3.779642660847303*^9}, {
   3.779644514620739*^9, 3.779644515401883*^9}, 3.779645656165224*^9, 
   3.779658292199794*^9, 3.779660384306139*^9, {3.779662724407448*^9, 
   3.779662725256198*^9}, {3.779731769529154*^9, 3.779731770157713*^9}, {
   3.779736250444748*^9, 3.779736251164061*^9}, {3.7797437061944237`*^9, 
   3.779743706712223*^9}, {3.779749400402239*^9, 3.779749401084751*^9}, {
   3.779750783792596*^9, 3.779750784440608*^9}, {3.779789113295823*^9, 
   3.7797891139797*^9}, {3.7797931368269053`*^9, 3.779793137494444*^9}, {
   3.77981427947383*^9, 3.779814279997237*^9}, 3.779814358692355*^9, {
   3.7798151185081673`*^9, 3.779815119109881*^9}, {3.779815149968671*^9, 
   3.7798151570535583`*^9}, {3.779815614789648*^9, 3.779815615327837*^9}, {
   3.779816534803582*^9, 3.779816535376161*^9}, 3.779825008303356*^9, 
   3.779825281469234*^9, 3.779825564144547*^9, 3.779825679269865*^9, {
   3.779833549678261*^9, 3.7798335502446623`*^9}, {3.779834121935874*^9, 
   3.779834122524139*^9}, {3.7799723074542103`*^9, 3.7799723079205027`*^9}, 
   3.779981562923999*^9, {3.780174155991479*^9, 3.7801741565055*^9}, 
   3.780420259546617*^9, {3.780420750543087*^9, 3.780420751175112*^9}, {
   3.780421873922741*^9, 3.7804218745338717`*^9}, {3.780507945507299*^9, 
   3.7805079460913258`*^9}, {3.7805082645355787`*^9, 
   3.7805082651486473`*^9}, {3.780508856552809*^9, 3.7805088571365633`*^9}, {
   3.780522259735372*^9, 3.780522260373653*^9}, {3.780523553469232*^9, 
   3.780523554047214*^9}, {3.780528006115973*^9, 3.780528018037765*^9}, {
   3.780590615166561*^9, 3.78059061580077*^9}, {3.780681697367405*^9, 
   3.7806816979704123`*^9}, {3.7808293568226833`*^9, 3.780829357488909*^9}, {
   3.781384426891253*^9, 3.78138442750928*^9}, 3.7822585375001383`*^9},
 CellLabel->
  "Out[1532]=",ExpressionUUID->"067cfb9a-95ba-47f4-8de5-f4c822fcbeb3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Version Changes",
 FontColor->RGBColor[1, 0.5, 0]]], "Chapter",
 CellChangeTimes->{
  3.777917028094368*^9, {3.7779171065814333`*^9, 3.777917108077229*^9}, 
   3.77791726379779*^9, {3.7779228994059153`*^9, 3.77792290065598*^9}, 
   3.777923148955649*^9, 
   3.777923184038898*^9},ExpressionUUID->"be00a341-2295-4156-8c23-\
6784eec6d87f"],

Cell[TextData[{
 StyleBox["2019 November \n",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["Added involutions and  4- and 5-dimensional inverses found in \
\[OpenCurlyQuote]Multivector and multivector matrix \n\tinverses in real \
Clifford algebras\[CloseCurlyQuote], Eckhard Hitzer and Stephen Sangwine, \
Univ of Essex, \n\tUK Technical Report CES-534, ISSN: 1744-8050\n\t\t\
GradeInvoluteG, JKinvoluteG, ClifConjugateG, Inverse4G, and Inverse5G\n\
Cleaned up WedgePrdtG redundant code for case that either or both \
multivectors are zero\nAdded EijSortG\n\n\t",
  FontSize->18],
 StyleBox["\n2019 October rev5",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nCreated DimListG and mCutG\nRevised CollectG to cover some cases \
not properly handled",
  FontSize->18],
 StyleBox["\n\n2019 October rev 4\n",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["Improved CollectG\n     Took out input and logic dealing with \
dimension of clif and FormatG[n], making it much \n     \t efficient\n     \
Sped up, for example, InverseG, allowing it to run instantaneously in, say, \
30 dimensions \n     \tfor many cases\n",
  FontSize->18],
 StyleBox["2019 ",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox[" ",
  FontSize->18],
 StyleBox["October rev 3\n ",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["Sped up InverseG logic\n      Found a minimal number of equations \
and unknowns for each clif, rather than ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "n"], "."}], TraditionalForm]],ExpressionUUID->
  "6117be9d-1e2f-48d1-8775-ea2cc3547bf6"],
 StyleBox["\n\n2019  rev2",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nEliminated unused 1st argument in ConstantToZeroG\nCleaned up \
description of ReduceG\nAdded AtomListToEijListG and EijListToAtom as user \
functions, and replaced parts of code to \n\treference these functions rather \
than repeating the complicated ReplaceRepeated (//.)\n\t expressions\n\n",
  FontSize->18],
 StyleBox[" 2019 October\n",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["Simplified pSliceG code",
  FontSize->18],
 StyleBox["\n",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["Renamed EiEjListG to AtomListG\nAdded  CoeffListG as a companion \
to ClifToListG and AtomListG\nReplaced weak ",
  FontSize->18],
 StyleBox["InverseG formula with one that solves ",
  FontSize->18,
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     SuperscriptBox["2", "n"],
     FontSize->18], 
    StyleBox[" ",
     FontSize->18], 
    StyleBox["equations",
     FontSize->18], 
    StyleBox[" ",
     FontSize->18], 
    StyleBox["in",
     FontSize->18], 
    StyleBox[" ",
     FontSize->18], 
    StyleBox[
     SuperscriptBox[
      StyleBox["2",
       FontSize->16], "n"],
     FontSize->18], 
    StyleBox[" ",
     FontSize->18], 
    RowBox[{
     StyleBox["unknowns",
      FontSize->18], "."}]}], TraditionalForm]],ExpressionUUID->
  "22685f40-c766-4beb-b9c1-7c42e5e0c76c"],
 "\n",
 StyleBox["Fixed  ClifToListG ordering that had a term like ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["b", 
     RowBox[{"1", ",", "2"}]], 
    SubscriptBox["e", 
     RowBox[{"1", " "}]], "listed", " ", "after", " ", "a", " ", "term", " ", 
    "like", "  ", 
    SubscriptBox["b", "2"], 
    SubscriptBox["e", "1"], 
    SubscriptBox["e", "3"]}], TraditionalForm]],
  FontSize->18,ExpressionUUID->"d88cc974-bbee-478e-b4aa-42cfe2118a52"],
 "\n",
 StyleBox["Changed MaxDimG to take on value 0 for a constant clif. Previously \
made MaxDimG at least 1\nReplaced operator symbols: \n     Scalar Product: \
CircleDot \[CircleDot]  to Star \[Star]\n     Left Contraction: \
SquareSuperset   \[SquareSuperset]  to LeftTee \[LeftTee] ",
  FontSize->18],
 StyleBox["\n     ",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["Right Contraction: SquareSubset  \[SquareSubset]  to RightTee  \
\[RightTee]\nReverted to original two Hodge definitions when my new one \
failed to satisfy some \n\tHodge Identities\n     Kept it available as \
HodgeDual5G for further investigation, but not in palette",
  FontSize->18],
 StyleBox["\n\n2019 September ",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox[" ver 3\nRemoved Grassmann -- not enough to make it worthwhile \
mentioning\nDeleted initialization parameter \
\[OpenCurlyDoubleQuote]algebraType\[CloseCurlyDoubleQuote]\nRenamed \
GradesListG back to ConstantToZeroG (original renaming was a mistake)\n\
Handled case where pSliceG is input with  grade p > dimension n\nRenamed \
SliceG to GradedClifG\nAdded function MaxGradeG as a companion to MaxDimG\n\
Renamed eSubscriptListG to EijListG. Created companion function  EiEjListG\n\
Made sure that u, v, and w were not made into local variables when \
assignments were made \n\tusing u_,  v_, or  w_\nRenamed EijTermG to \
AtomCoefG",
  FontSize->18],
 StyleBox["\n\n2019 September",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nSimplified AtomG recursive definition\nReplaced SmallCircle (\
\[SmallCircle]) by Diamond (\[Diamond])\nChanged nVectorG to VectorG, pBladeG \
to BladeG, nClifG to ClifG, and InitializeG to ReduceG\n\n",
  FontSize->18],
 StyleBox["2019 August",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nImproved warning message. Fixed a few typos. Improved \
documentation of PrdtG function.\nCompletely reworked ClifToListG to include \
some complex clifs that were not handled properly\nRenamed ConstantToZeroG to \
GradesListG\nDeleted ConstantToListZeroG\nUpdated Pallette to reflect new \
context\nRenamed BladeG to AtomG\nAdded AtomCoefG and SliceG\nRenamed \
GradePTerm to pSlice\n\n",
  FontSize->18],
 StyleBox["version 52 d",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nSimplified expressions for both Hodge duals (no change to \
calculations; functions are just \n\tmore readable)\n\n",
  FontSize->18],
 StyleBox["version 52 cc\n",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["Replaced multiple instances of list1 list2 /. List -> Plus with \
list1.list2\nRenamed G to GradePTermG\nRenamed EijPieceG to EijTermG\n\
Corrected Hodge2G calculation\n\n",
  FontSize->18],
 StyleBox["version52bc",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nAdded EvenClifG and EijPieceG functions\n\nversion 52\nSwitched \
algebraType reference to match change in palette : Now, 1 = Clifford Algebra, \
\n\t2 = Grassmann Algebra\nAdded function EiEjPieceG\nCorrected definition of \
Gorm to use scalar product rather than dot product\nAdded \
\[OpenCurlyDoubleQuote]Simplify\[CloseCurlyDoubleQuote] to the Gorm result \
since it usually leads to clearer answers\nFixed ReverseG which would make \
some incorrect calculation for grades 4 and higher\n\tThis fixed GormG and \
NormG, both of which use ReverseG\n\n",
  FontSize->18],
 StyleBox["version 51 g",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nDeleted all reference to SortG and ExpandSortG as they did not \
help in sorting the way I hoped\n\n",
  FontSize->18],
 StyleBox["version 51 f",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nCorrected ClifToList for cases where some parts of clif have \
different precision than other parts\nChange manner of computing list of \
constant terms\n\n",
  FontSize->18],
 StyleBox["Version 51 e",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nReplaced Apply[Length[list, {1}] by Length @@@ list in many \
places; (just a readability change) \nAdded internal SortG function to sort \
terms if multivector has 2 or more terms \nImprove sorting of output \
multivectors by applying Mathematica\[CloseCurlyQuote] s Sort function to \n\t\
multivectors with 2 or more terms\nCorrect freeTermList calculation when the \
multivector is a constant.freeTermList should be {0}, not {} \n\n",
  FontSize->18],
 StyleBox["Version 51 c",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox[" Completely rewrote logic for a core function, ClifToListG \n\tNow \
handles multivector inputs that have had precision set by user (for example, \
to\n\t\t format output to 6 sig digits) \n\tRewrite extended to include \
ConcstantG \n\tAdded FreeTermG function (multivector complement of ConstantG) \
\n\tAdded ExpandSortG, a sub - function to ensure that functions Expand and \
then sort \n\t\tmultivectors in a consistent way",
  FontSize->18]
}], "Text",
 CellChangeTimes->{
  3.777924129194702*^9, {3.777924228210786*^9, 3.777924234251552*^9}, {
   3.777925181299076*^9, 3.777925204388235*^9}, {3.778323670942824*^9, 
   3.778323693214443*^9}, {3.7783262331822157`*^9, 3.778326253201033*^9}, 
   3.7783341850038443`*^9, {3.778363149969788*^9, 3.778363212807741*^9}, {
   3.7783648987633047`*^9, 3.7783649629055862`*^9}, {3.7786219582731657`*^9, 
   3.778621988571917*^9}, {3.779032881780734*^9, 3.7790330786219387`*^9}, {
   3.779033546313197*^9, 3.779033589239604*^9}, 3.779034060270208*^9, {
   3.779038638411223*^9, 3.779038719105822*^9}, 3.779049260659696*^9, {
   3.779396218149487*^9, 3.779396223813346*^9}, {3.7793966911850243`*^9, 
   3.779396724015501*^9}, {3.779396763546489*^9, 3.779396774926955*^9}, {
   3.779444666007854*^9, 3.779444685200644*^9}, {3.7794447250536823`*^9, 
   3.7794447363762407`*^9}, {3.779444768424242*^9, 3.779444779651617*^9}, {
   3.779445381911666*^9, 3.779445403892804*^9}, {3.779447330346984*^9, 
   3.779447342545936*^9}, {3.779479687369261*^9, 3.7794798182539186`*^9}, {
   3.779479957434059*^9, 3.779480030397848*^9}, {3.779483502380333*^9, 
   3.7794835032521963`*^9}, {3.779483534569579*^9, 3.77948353588343*^9}, {
   3.779659281496471*^9, 3.77965934931129*^9}, {3.779741227140833*^9, 
   3.779741252856101*^9}, {3.779741347283983*^9, 3.7797415435657177`*^9}, {
   3.779741582774684*^9, 3.779741591270216*^9}, {3.779741655997563*^9, 
   3.779741716582405*^9}, {3.779807033799158*^9, 3.779807064130496*^9}, {
   3.77982507469409*^9, 3.7798251217163773`*^9}, {3.779825154354034*^9, 
   3.779825265152143*^9}, {3.779825539418356*^9, 3.779825541934635*^9}, {
   3.779834999314238*^9, 3.779835008137377*^9}, {3.779972447884439*^9, 
   3.77997271523663*^9}, {3.780527774523775*^9, 3.780527987611912*^9}, {
   3.780528232430023*^9, 3.780528266606655*^9}, {3.780590334638125*^9, 
   3.7805905701292963`*^9}, {3.781019894203677*^9, 3.781019923974845*^9}, {
   3.781020179285027*^9, 3.781020213073914*^9}, {3.7819078212654743`*^9, 
   3.781908080154203*^9}, {3.781908992222425*^9, 3.781909023808585*^9}, {
   3.781909111189953*^9, 3.781909131304781*^9}, {3.781911673749153*^9, 
   3.781911767152787*^9}, {3.781912014248746*^9, 3.7819120648511677`*^9}, {
   3.7819135624799*^9, 3.781913569536483*^9}, {3.7822591262341003`*^9, 
   3.782259132467195*^9}, {3.7823277685245028`*^9, 3.78232784235644*^9}, 
   3.782335696749922*^9, {3.7823384360300198`*^9, 3.782338518655369*^9}, {
   3.782338597740193*^9, 
   3.782338690684667*^9}},ExpressionUUID->"eeff93c6-7e93-41ff-be77-\
8724c23a53cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "\"\<GeomAlg2019Oct`*\>\""}]], "Input",
 CellChangeTimes->{{3.776026546192133*^9, 3.776026575246956*^9}, {
  3.7761112297368517`*^9, 3.7761112312047977`*^9}, {3.7783650389782257`*^9, 
  3.77836504194419*^9}, {3.779396955465227*^9, 3.779396956036623*^9}},
 CellLabel->
  "In[6573]:=",ExpressionUUID->"3b03f9de-f94e-42d5-88d1-7a03e8595620"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["GeomAlg2019Oct`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["GeomAlg2019Oct`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["AtomCoefG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"AtomCoefG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["CollectG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"CollectG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["debug7",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"debug7", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["GeomPrdtAtomG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"GeomPrdtAtomG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["ListToClifG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"ListToClifG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["RightContractionG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {
            "RightContractionG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"]},
        {
         ButtonBox["AtomG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"AtomG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["ComplexG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"ComplexG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["debug8",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"debug8", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["GeomPrdtG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"GeomPrdtG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["MaxDimG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"MaxDimG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["RotorG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"RotorG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"]},
        {
         ButtonBox["AtomListG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"AtomListG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["ConstantG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"ConstantG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["debug9",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"debug9", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["GormG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"GormG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["MaxGradeG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"MaxGradeG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["ScalarPrdtG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"ScalarPrdtG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"]},
        {
         ButtonBox["AtomListToEijListG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {
            "AtomListToEijListG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["debug0",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"debug0", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["DotPrdtG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"DotPrdtG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["GradedClifG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"GradedClifG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["NormG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"NormG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["SignatureG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"SignatureG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"]},
        {
         ButtonBox["BiVectorG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"BiVectorG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["debug1",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"debug1", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["e",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info65733781366427-5348012", {"e", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["GradeListG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"GradeListG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["PrdtG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"PrdtG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["SubscriptListG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {
            "SubscriptListG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"]},
        {
         ButtonBox["BladeG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"BladeG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["debug2",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"debug2", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["EijListG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"EijListG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["HodgeDual2G",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"HodgeDual2G", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["PseudoScalarG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"PseudoScalarG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["VectorG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"VectorG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"]},
        {
         ButtonBox["ClifFormatG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"ClifFormatG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["debug3",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"debug3", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["EijListToAtomListG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {
            "EijListToAtomListG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["HodgeDual5G",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"HodgeDual5G", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["pSliceG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"pSliceG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["WedgePrdtG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"WedgePrdtG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"]},
        {
         ButtonBox["ClifG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"ClifG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["debug4",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"debug4", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["EvenClifG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"EvenClifG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["HodgeDualG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"HodgeDualG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["QuaternionG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"QuaternionG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], ""},
        {
         ButtonBox["ClifToListG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"ClifToListG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["debug5",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"debug5", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["ExpandG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"ExpandG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["InverseG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"InverseG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["ReduceG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"ReduceG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], ""},
        {
         ButtonBox["CoeffListG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"CoeffListG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["debug6",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"debug6", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["FreeTermG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"FreeTermG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["LeftContractionG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {
            "LeftContractionG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], 
         ButtonBox["ReverseG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info65733781366427-5348012", {"ReverseG", "GeomAlg2019Oct`"}},
          ButtonNote->"GeomAlg2019Oct`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.15833333333333333`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{
  3.781384427592304*^9},ExpressionUUID->"52df96c0-2dd8-43e7-9574-\
04154286eb18"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.777915808897131*^9, 
  3.77791581081185*^9}},ExpressionUUID->"065fbefc-66c9-493d-b274-\
40929693f606"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{1122, 1317},
WindowMargins->{{Automatic, 126}, {Automatic, 3}},
DockedCells->FEPrivate`FrontEndResource[
 "NotebookTemplatingExpressions", "AuthoringDockedCell"],
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
TaggingRules->{"NotebookTemplateVersion" -> 1., "NotebookTemplate" -> True},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 1828, 26, 98, "Title",ExpressionUUID->"0eb99713-8fc1-4874-8ff2-e0c1082164a1"],
Cell[CellGroupData[{
Cell[2275, 45, 303, 5, 69, "Chapter",ExpressionUUID->"9a3f1805-1cbc-478d-be6f-792ebaddd51e"],
Cell[2581, 52, 5696, 111, 339, "Text",ExpressionUUID->"c1714432-7d90-43b9-bdce-7f8c2bf1eb38"]
}, Closed]],
Cell[CellGroupData[{
Cell[8314, 168, 162, 3, 58, "Chapter",ExpressionUUID->"66501c1f-93ac-4157-b1f6-4144dd1837af"],
Cell[CellGroupData[{
Cell[8501, 175, 154, 3, 65, "Subchapter",ExpressionUUID->"bfdd283e-5130-49c3-82ad-f7a9980651e0"],
Cell[8658, 180, 4749, 91, 528, "Code",ExpressionUUID->"c65fb9e5-a372-4be3-a098-944901ffd52b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13444, 276, 2063, 29, 65, "Subchapter",ExpressionUUID->"0b6b0107-d707-4aa2-84e0-633ce91bf664"],
Cell[15510, 307, 2895, 43, 58, "Text",ExpressionUUID->"a138d2aa-7b8e-4d91-9508-5664fb9215ec"],
Cell[18408, 352, 4060, 80, 224, "Code",ExpressionUUID->"b2bdf740-d97a-4118-9aa7-49a73fe5e38a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22505, 437, 221, 4, 65, "Subchapter",ExpressionUUID->"31efb45a-7932-43ba-83a8-a6cc2ae30fb8"],
Cell[22729, 443, 3474, 73, 380, "Text",ExpressionUUID->"20a98674-b109-4d95-8d9c-5eea15db0abb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26240, 521, 329, 5, 65, "Subchapter",ExpressionUUID->"d7d51bbd-350c-4d00-aa9f-f0cb00af5dd3"],
Cell[CellGroupData[{
Cell[26594, 530, 19315, 393, 1012, "Code",ExpressionUUID->"bb95fb8d-d9f3-4598-863d-ce86f7c663a4"],
Cell[45912, 925, 3188, 45, 34, "Output",ExpressionUUID->"2d101019-567a-4722-9ba2-e3e26616bbd4"],
Cell[49103, 972, 3168, 45, 34, "Output",ExpressionUUID->"e3f24037-1da1-4821-970f-76febd1a6c68"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52332, 1024, 187, 3, 69, "Chapter",ExpressionUUID->"a1525982-1156-48eb-8125-efcb2d27577c"],
Cell[52522, 1029, 2169, 32, 52, "Code",ExpressionUUID->"2d4b85c4-75f9-4a80-a7c3-79d1a9e6ca1a"]
}, Closed]],
Cell[CellGroupData[{
Cell[54728, 1066, 186, 3, 58, "Chapter",ExpressionUUID->"58177a45-6844-4477-ad51-5a2c82db5919"],
Cell[54917, 1071, 6081, 125, 262, "Code",ExpressionUUID->"eab06bde-dac4-4543-b3e4-dd8a5cfa5a9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61035, 1201, 355, 8, 157, "Chapter",ExpressionUUID->"e4a04ef0-9773-466f-8f2a-2556d621d191"],
Cell[61393, 1211, 51124, 1231, 4396, "Code",ExpressionUUID->"cc35f83c-036d-4558-9ef4-8571356e9f49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112554, 2447, 251, 4, 69, "Chapter",ExpressionUUID->"9c63b62e-9730-433c-8884-b0391cc574d1"],
Cell[112808, 2453, 85410, 1766, 7209, "Code",ExpressionUUID->"5b437657-c103-44f2-923e-4e6a07bccda2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198255, 4224, 174, 3, 69, "Chapter",ExpressionUUID->"0a8c74b9-4fd4-409f-9416-1e5362d89626"],
Cell[198432, 4229, 80668, 1650, 5652, "Code",ExpressionUUID->"0cd99394-7461-4bed-8931-53bb46a7c3e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279137, 5884, 325, 7, 109, "Chapter",ExpressionUUID->"c4071c67-5988-4b9c-9562-4d1442c8ccac"],
Cell[279465, 5893, 71196, 1460, 5443, "Code",ExpressionUUID->"adb2e33b-3392-4e4d-adae-ed10dbc77e4d"],
Cell[CellGroupData[{
Cell[350686, 7357, 205, 4, 30, "Input",ExpressionUUID->"1c61652e-5168-437b-87cc-4f0e2e37e8b2"],
Cell[350894, 7363, 178, 3, 34, "Output",ExpressionUUID->"f839aecf-6a58-4cd9-90e1-db71654deab7"]
}, Open  ]],
Cell[351087, 7369, 178, 3, 30, "Input",ExpressionUUID->"8d9a52b3-409d-4aa3-8ff3-e4e69fc1705f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351302, 7377, 532, 10, 149, "Chapter",ExpressionUUID->"5ad0718c-8782-4e67-ac94-06033f01f375"],
Cell[CellGroupData[{
Cell[351859, 7391, 44442, 1046, 4758, "Code",ExpressionUUID->"d9221d14-bb4f-46a3-8f96-ef51c063cb88"],
Cell[396304, 8439, 3144, 44, 34, "Output",ExpressionUUID->"067cfb9a-95ba-47f4-8de5-f4c822fcbeb3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[399497, 8489, 361, 7, 69, "Chapter",ExpressionUUID->"be00a341-2295-4156-8c23-6784eec6d87f"],
Cell[399861, 8498, 10892, 246, 3006, "Text",ExpressionUUID->"eeff93c6-7e93-41ff-be77-8724c23a53cb"],
Cell[CellGroupData[{
Cell[410778, 8748, 366, 6, 30, "Input",ExpressionUUID->"3b03f9de-f94e-42d5-88d1-7a03e8595620"],
Cell[411147, 8756, 13791, 378, 263, "Print",ExpressionUUID->"52df96c0-2dd8-43e7-9574-04154286eb18"]
}, Open  ]],
Cell[424953, 9137, 141, 3, 35, "Text",ExpressionUUID->"065fbefc-66c9-493d-b274-40929693f606"]
}, Open  ]]
}, Open  ]]
}
]
*)

