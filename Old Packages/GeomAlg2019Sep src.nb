(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    297638,       6489]
NotebookOptionsPosition[    292766,       6387]
NotebookOutlinePosition[    293615,       6414]
CellTagsIndexPosition[    293572,       6411]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Geometric Algebra", "Title",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722519822702`*^9, 3.6910723269774513`*^9, 3.7059445837618217`*^9, {
   3.711727492084939*^9, 3.711727501735587*^9}, 3.774370688063036*^9, 
   3.774370728127152*^9, 3.774983706669629*^9, 3.774983779805956*^9, 
   3.774983845960207*^9, {3.775079985213368*^9, 
   3.775079987348666*^9}},ExpressionUUID->"0eb99713-8fc1-4874-8ff2-\
e0c1082164a1"],

Cell[CellGroupData[{

Cell["Overview", "Chapter",
 CellChangeTimes->{{3.691079996566341*^9, 3.691080000246093*^9}, {
   3.7750750899898443`*^9, 3.775075091477372*^9}, {3.77514175878936*^9, 
   3.7751417601256943`*^9}, 3.777917320156111*^9, 
   3.7779244959078417`*^9},ExpressionUUID->"9a3f1805-1cbc-478d-be6f-\
792ebaddd51e"],

Cell[TextData[{
 "This Geometric Algebra (GA) package (a.k.a Clifford Algebra package) \
performs GA operations in n-dimensions for any n. The package can be \
configured for either Grassmann algebras (aka Exterior algebras) or Clifford \
(a.k.a. geometric) algebras. This package does not perform symbolic \
manipulations. Rather it is designed to  investigate GA equations and \
relationships using the orthonormal basis  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{
      SubscriptBox["e", "2"], "."}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a86bd2b4-5bd1-479d-ad29-6630f86a5b72"],
 " ... , ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["e", "n"], "}"}], ".", " "}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "57fed417-325d-426f-b673-01f22a02339d"],
 "It uses standard  mathematical notation (like 3",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a726d72e-c61a-4b29-a7a7-7d9ac9d54ca6"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["e", "3"], " ", "or", " ", 
      SubscriptBox["b", 
       RowBox[{"2", ",", "3"}]], 
      SubscriptBox["e", "2"], 
      SubscriptBox["e", "3"]}], ")"}], " "}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a4281eb1-8d9b-4862-9c10-0f8566403abb"],
 " rather thanSubscript[b,2,3] Subscript[e,2] Subscript[e,3] to make \
equations readable. (Manipulation of subscripts in Mathematica is ",
 StyleBox["terribly",
  FontSlant->"Italic"],
 " difficult and is handled behind-the-scenes by this package.) The package \
performs both  symbolic (e.g., ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["b", 
    RowBox[{"2", ",", "3"}]], 
   SubscriptBox["e", "2"], 
   SubscriptBox["e", "3"]}]],ExpressionUUID->
  "c89f0047-dc34-40d2-b00e-02bcde72ae7f"],
 ") and numeric (e.g., 3",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["e", "3"], 
      SubscriptBox["e", "4"]}], ")"}], " ", 
    RowBox[{"computations", "."}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d364251a-52da-458e-8996-1337906762fa"],
 " The Clifford package can be configured to use either the  + - - -...  or  \
- + + + ... convention for space computations, and can be configured for \
space-time using either -+++ or +--- . The package allows for additional time \
dimensions for those who wish to explore that. \n\nThe package has a palette \
to simplify entering of multivectors so that entering subscripts is made \
easy.  The palette also shows all the available functions, discusses them in \
tooltips (i.e., hover the mouse over a palette entry), and displays examples. \
 All commands can be used with symbols as well as numerical values. The \
palette automatically updates to reflect initialization options \
(Clifford-Grassmann, +--- vs -+++, space vs spacetime) which the user can \
change on-the-fly.\n\nQuick Start describes how to install the palette. To \
use the commands in this package, put the file GeomAlg2019Sep.m in one of the \
directories listed in your $Path. The preferred location is \
$UserBaseDirectory. After that, to use the package simple enter \
Needs[\"GeomAlg2019Sep`\"] at the top of a notebook and then start using any \
of these commands along with usual Mathematica commands."
}], "Text",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, {
   3.6910722815485487`*^9, 3.6910723157986307`*^9}, {3.6957443849259768`*^9, 
   3.6957443872132273`*^9}, {3.774457066377931*^9, 3.774457077591625*^9}, {
   3.7745544873585243`*^9, 3.77455452172013*^9}, {3.774983613920643*^9, 
   3.7749836189586773`*^9}, {3.777907598737049*^9, 3.7779076019926033`*^9}, {
   3.777987860914003*^9, 3.777987948268182*^9}, {3.777987993193996*^9, 
   3.777988029016594*^9}, {3.777988069270928*^9, 3.77798819504677*^9}, {
   3.777988233068687*^9, 3.777988691653831*^9}, {3.77798872586373*^9, 
   3.7779887873484364`*^9}, {3.777988852191525*^9, 3.7779891293814983`*^9}, {
   3.7779891601218567`*^9, 3.777989162711042*^9}, {3.777989215657858*^9, 
   3.777989264217979*^9}, {3.7779893128016443`*^9, 3.7779894992215233`*^9}, 
   3.777989533779916*^9},ExpressionUUID->"c1714432-7d90-43b9-bdce-\
7f8c2bf1eb38"]
}, Closed]],

Cell[CellGroupData[{

Cell["1 Begin Package", "Chapter",
 CellChangeTimes->{{3.691191133633431*^9, 
  3.6911911457483177`*^9}},ExpressionUUID->"66501c1f-93ac-4157-b1f6-\
4144dd1837af"],

Cell[CellGroupData[{

Cell["Set Up", "Subchapter",
 CellChangeTimes->{{3.696347248593136*^9, 
  3.696347250663979*^9}},ExpressionUUID->"bfdd283e-5130-49c3-82ad-\
f7a9980651e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Mathematica", " ", 
     RowBox[{"Package", "\n", "   ", ":", "Title", ":", 
      RowBox[{
       RowBox[{"Geometric", " ", "Alagebra", " ", "in", " ", "n"}], "-", 
       RowBox[{
       "Space", "\n", "   ", ":", "Context", ":", "GeomAlg2019Sep`", "\n", 
        "   ", ":", "Author", ":", 
        RowBox[{
         RowBox[{"Dr", ".", " ", "Bud"}], " ", 
         RowBox[{"Simrin", "\n", "   ", ":", "Date", ":", 
          RowBox[{"2019", "-", "08", "-", "11"}], "\n", " ", "\n", "   ", ":", 
          RowBox[{"Package", " ", "Version"}], ":", "0.3", "\n", "   ", ":", 
          RowBox[{"Mathematica", " ", "Version"}], ":", 
          RowBox[{"11.0", ".1"}], "\n", "   ", ":", "Copyright", ":", 
          RowBox[{
           RowBox[{"(", "c", ")"}], " ", "2019", " ", 
           RowBox[{"Dr", ".", " ", "Bud"}], " ", 
           RowBox[{"Simrin", "\n", "   ", ":", "Keywords", ":", " ", 
            RowBox[{"geometric", " ", "algeba"}]}]}]}]}]}]}]}]}], ",", " ", 
    RowBox[{"Clifford", " ", "algebra"}], ",", " ", 
    RowBox[{"wedge", " ", "product"}], ",", " ", 
    RowBox[{"dot", " ", "product"}], ",", " ", 
    RowBox[{"exterior", " ", "\n", "\t", "product"}], ",", " ", 
    RowBox[{"interior", " ", "product"}], ",", " ", 
    RowBox[{"Hodge", " ", "dual"}], ",", " ", "clif", ",", " ", "multivector",
     ",", " ", "bivector", ",", " ", "rotor", ",", " ", "rotation", ",", " ", 
    "\n", "\t", "spacetime", ",", " ", 
    RowBox[{"n", "-", "dimensional"}], ",", " ", 
    RowBox[{
     RowBox[{
     "quaternion", "\n", " ", "\n", "   ", ":", "Discussion", ":", "\n", "\n",
       "USAGE", ":", "\n", "\n", "\t", 
      RowBox[{"SetDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<GeomAlg2019Sep`*\>\"", "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"BeginPackage", "[", "\"\<GeomAlg2019Sep`\>\"", "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"$FrontEnd", ",", 
      RowBox[{"InputAliases", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<slc\>\"", "\[Rule]", "\"\<\[SquareSuperset]\>\""}], ",", 
         RowBox[{"\"\<src\>\"", "\[Rule]", "\"\<\[SquareSubset]\>\""}]}], 
        "}"}]}]}], "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.691072406579616*^9, 3.6910724363613253`*^9}, 
   3.691170964657378*^9, {3.691172520460575*^9, 3.6911725999701433`*^9}, {
   3.691172635376563*^9, 3.691172662039344*^9}, 3.691172699111658*^9, {
   3.691172758994171*^9, 3.691172771331914*^9}, {3.691346315195692*^9, 
   3.691346344412607*^9}, {3.69134734084857*^9, 3.691347342087324*^9}, {
   3.693070656972659*^9, 3.693070668032612*^9}, {3.6930798668510113`*^9, 
   3.693079872868845*^9}, {3.695744361358244*^9, 3.695744389889625*^9}, 
   3.696347203580554*^9, {3.7059424806219587`*^9, 3.705942492660396*^9}, {
   3.7059425723500137`*^9, 3.7059425731565933`*^9}, {3.705945097780608*^9, 
   3.7059451024964113`*^9}, {3.774549352689558*^9, 3.774549382968*^9}, {
   3.7745499759837914`*^9, 3.7745499784493227`*^9}, {3.774554535584663*^9, 
   3.774554615066778*^9}, {3.774645730740798*^9, 3.774645755639316*^9}, {
   3.7749836224166727`*^9, 3.774983628921142*^9}, {3.77512497585236*^9, 
   3.775124988171036*^9}, {3.77512546962029*^9, 3.775125524232349*^9}, {
   3.775133564417799*^9, 3.775133572696433*^9}, {3.7779935007503557`*^9, 
   3.777993519379917*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"c65fb9e5-a372-4be3-a098-944901ffd52b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Debug Flags (True = On, False = Off, Default = False)", "Subchapter",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, {
   3.691170901550271*^9, 3.691170925069228*^9}, {3.691171165424671*^9, 
   3.691171166415215*^9}, {3.6963473454108677`*^9, 
   3.696347375624837*^9}},ExpressionUUID->"0b6b0107-d707-4aa2-84e0-\
633ce91bf664"],

Cell["\<\
In case of trouble, one or more of these flags can be enabled to trace the \
flow of events. The output can be prodigious so try to only enable the ones \
you might need. This capability is coded. It is not the built-in Mathematica \
debug structure.\
\>", "Text",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, 
   3.691170901550271*^9, 3.691170931919511*^9, {3.691172262541596*^9, 
   3.691172280579797*^9}, {3.691184231285781*^9, 3.691184255799389*^9}, {
   3.6911843009750767`*^9, 3.691184303414172*^9}, {3.6911850616919937`*^9, 
   3.691185191375659*^9}, {3.691690494441842*^9, 3.691690522462504*^9}, 
   3.6918635764610147`*^9, 3.691864051439683*^9, {3.69186519347125*^9, 
   3.691865194446713*^9}, {3.691865255606691*^9, 3.691865265057385*^9}, {
   3.693262406806333*^9, 3.6932624411315813`*^9}, {3.693349940534522*^9, 
   3.693349945991884*^9}, {3.69582203448588*^9, 3.695822038756646*^9}, {
   3.696094353329114*^9, 3.6960943681836653`*^9}, 3.69619893534732*^9, 
   3.696347925760697*^9, {3.6963479684663*^9, 3.696348049583315*^9}, {
   3.6963480813150787`*^9, 
   3.696348182159792*^9}},ExpressionUUID->"a138d2aa-7b8e-4d91-9508-\
5664fb9215ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"debug1", ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Initialization", ",", " ", 
    RowBox[{
    "both", " ", "section", " ", "3", " ", "and", " ", "section", " ", 
     "5"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug2", ";"}], "  ", 
  RowBox[{"(*", " ", "MaxDimG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug3", ";"}], "  ", 
  RowBox[{"(*", " ", "GeomPrdtG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug4", ";"}], "  ", 
  RowBox[{"(*", " ", "GradePpieceG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug5", ";"}], "  ", 
  RowBox[{"(*", " ", "ClifFormatG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug6", ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "WedgePrdtG", ",", " ", "DotPrdtG", ",", " ", "LeftContractionG", ",", " ",
     "RightContractionG"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug7", ";"}], "  ", 
  RowBox[{"(*", " ", "ReverseG", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"debug8", ";"}], "  ", 
  RowBox[{"(*", " ", "ScalarPrdtG", " ", "*)"}], " "}], "\n", 
 RowBox[{
  RowBox[{"debug9", ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"FreeTermG", ",", " ", "ConstantG", ",", " ", "ClifToListG"}], " ",
    "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, 
   3.691170901550271*^9, 3.691170931919511*^9, {3.691172262541596*^9, 
   3.691172280579797*^9}, {3.691184231285781*^9, 3.691184255799389*^9}, {
   3.6911843009750767`*^9, 3.691184303414172*^9}, {3.6911850616919937`*^9, 
   3.691185191375659*^9}, {3.691690494441842*^9, 3.691690522462504*^9}, 
   3.6918635764610147`*^9, 3.691864051439683*^9, {3.69186519347125*^9, 
   3.691865194446713*^9}, {3.691865255606691*^9, 3.691865265057385*^9}, {
   3.693262406806333*^9, 3.6932624411315813`*^9}, {3.693349940534522*^9, 
   3.693349945991884*^9}, {3.69582203448588*^9, 3.695822038756646*^9}, {
   3.696094353329114*^9, 3.6960943681836653`*^9}, 3.69619893534732*^9, 
   3.696347925760697*^9},
 CellLabel->
  "In[143]:=",ExpressionUUID->"b2bdf740-d97a-4118-9aa7-49a73fe5e38a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Initialization Variables", "Subchapter",
 CellChangeTimes->{{3.691170942724934*^9, 3.691170953344343*^9}, {
  3.691171121385624*^9, 
  3.691171159839477*^9}},ExpressionUUID->"31efb45a-7932-43ba-83a8-\
a6cc2ae30fb8"],

Cell[TextData[{
 StyleBox["algebraType",
  FontColor->RGBColor[0.5, 0, 0.5]],
 "\n  \t1 Clifford algebra\n  \t2 Grassmann (aka Exterior) algebra  i.e., ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    SubscriptBox["e", "k"], "2"], "=", " ", "0"}]],ExpressionUUID->
  "239769be-28c2-42d0-857d-079bfd3368b7"],
 " for all k\n\n The following are only relevant for Clifford algebra:\n\n ",
 StyleBox["signatureType",
  FontColor->RGBColor[0.5, 0, 0.5]],
 "\n \t\t-1 Physicists  + - - -   i.e., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["e", "k"], "2"], "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "1"}], " ", "if", " ", "k"}], " ", "\[LessEqual]", " ", 
      "numTimelike"}]}], ";", " ", 
    RowBox[{
     RowBox[{"else", " ", 
      SuperscriptBox[
       SubscriptBox["e", "k"], "2"]}], " ", "=", " ", 
     RowBox[{"-", "1"}]}]}], TraditionalForm]],ExpressionUUID->
  "e3b71d8d-3a15-48a5-8756-ecaf2d261a9f"],
 "\n \t\t+1 Mathematicians  - + + +   i.e., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["e", "k"], "2"], "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], " ", "if", " ", "k"}], " ", "\[LessEqual]", " ", 
      "numTimelike"}]}], ";", " ", 
    RowBox[{
     RowBox[{"else", " ", 
      SuperscriptBox[
       SubscriptBox["e", "k"], "2"]}], " ", "=", " ", 
     RowBox[{"+", "1"}]}]}], TraditionalForm]],ExpressionUUID->
  "e19a016c-710a-4022-bf03-fafe14d3c450"],
 "\n ",
 StyleBox["numTimelike",
  FontColor->RGBColor[0.5, 0, 0.5]],
 "\n \t\t0 Space \n \t\t1 Space-time\n \t\t2+ More than 1 time dimension, \
allowed for those who wish to explore this\n\n These are global symbols \
(i.e., context Global`) so they are not listed in the Usage section (e.g., \
context GeomAlg2019Sep`)\n If user forgets to initialize these variables, a \
warning will be issued and defaults will be implemented:\n \tDefaults are: \
Clifford, Mathematician ++++, Space\n\n\[AliasDelimiter] Caution: If user has \
set Notebook to use a unique context, then only execute initialization of \
these variables after package has \n      been invoked with Needs statement \
so that their context is already assigned to Global`"
}], "Text",
 CellChangeTimes->{{3.691170942724934*^9, 3.691170953344343*^9}, 
   3.691171175156817*^9, {3.691171213138802*^9, 3.691171252256806*^9}, {
   3.6911712945730667`*^9, 3.691171319391305*^9}, {3.69117186351514*^9, 
   3.691171869997806*^9}, {3.691192290180006*^9, 3.691192292331027*^9}, {
   3.691193332053104*^9, 3.691193333887773*^9}, 3.691193373353045*^9, {
   3.691193411235981*^9, 3.6911934461324387`*^9}, {3.691193481872799*^9, 
   3.691193598312434*^9}, {3.691967304104115*^9, 3.691967369824239*^9}, {
   3.692446763319111*^9, 3.692446768656983*^9}, {3.692446874407032*^9, 
   3.692446910164687*^9}, {3.69244699587866*^9, 3.6924470061464*^9}, 
   3.695744368840377*^9, {3.696347429927765*^9, 3.696347465114717*^9}, {
   3.6963475144814177`*^9, 3.6963478672083693`*^9}, {3.69679078132957*^9, 
   3.696790798090218*^9}, {3.774447944569234*^9, 3.774447996041226*^9}, {
   3.774448036581604*^9, 3.7744480377735453`*^9}, {3.7744481005692673`*^9, 
   3.774448122833088*^9}, {3.774448176616078*^9, 3.7744481870200644`*^9}, 
   3.774458528005186*^9, 3.774549407797592*^9, {3.774550031475377*^9, 
   3.774550057228994*^9}, {3.7745546321209993`*^9, 3.774554635439645*^9}, 
   3.7745550613735237`*^9, 3.774983632067971*^9, {3.777907545160461*^9, 
   3.7779075523043537`*^9}, 
   3.7779935344916697`*^9},ExpressionUUID->"20a98674-b109-4d95-8d9c-\
5eea15db0abb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Usage and one Warning Statement", "Subchapter",
 CellChangeTimes->{{3.691170942724934*^9, 3.691170953344343*^9}, {
  3.6911912013084583`*^9, 3.6911912146556377`*^9}, {3.696347896347292*^9, 
  3.6963478971152267`*^9}, {3.711727139577194*^9, 
  3.711727149175679*^9}},ExpressionUUID->"d7d51bbd-350c-4d00-aa9f-\
f0cb00af5dd3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Context", "[", "]"}], "\n", 
 RowBox[{"e", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "MUST", " ", "pass", " ", "e", " ", "as", " ", "a", " ", "global", " ", 
      RowBox[{"variable", ".", " ", "This"}], " ", "causes", " ", 
      RowBox[{"Context", "[", "e", "]"}]}], " ", "=", " ", 
     RowBox[{
     "GeomAlg2019Sep`", " ", "in", " ", "any", " ", "user", " ", "Notebook", 
      " ", "\n", "\t\t", "that", " ", "invokes", " ", "this", " ", 
      "package"}]}], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", "thus", " ", "operations", " ", "like", " ", 
      SubscriptBox["e", "u_"]}], "\[Rule]", 
     RowBox[{"1", " ", "work", " ", "correctly"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AtomCoefG", "::", "usage"}], "=", 
   "\"\<AtomCoefG[x,\!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(3\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\)] \
returns the components of x, if any, having \!\(\*SubscriptBox[\(e\), \
\(1\)]\)\!\(\*SubscriptBox[\(e\), \(2\)]\)\!\(\*SubscriptBox[\(e\), \(4\)]\) \
as a factor\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AtomG", "::", "usage"}], "=", 
   "\"\<AtomG[p,q,...,r] generates the 'Atom' \!\(\*SubscriptBox[\(e\), \
\(p\)]\)\!\(\*SubscriptBox[\(e\), \(q\)]\)...\!\(\*SubscriptBox[\(e\), \(r\)]\
\)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BiVectorG", "::", "usage"}], "=", 
   "\"\<BiVectorG[n] is product of 2 n-vectors\>\""}], ";"}], "\n", 
 RowBox[{"ClifFormatG", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifToListG", "::", "usage"}], "=", 
   "\"\<ClifToListG[x] converts multivector x into a list of its components\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CollectG", "::", "usage"}], "=", 
   "\"\<CollectG[x] groups the terms of multivector x by blades \
\\!\\(\\*SubscriptBox[\\(e\\), \\(i\\)]\\)\\!\\(\\*SubscriptBox[\\(e\\), \\(j \
... \\)]\\)\\!\\(\\*SubscriptBox[\\(e\\), \\(k\\)]\\). It also reduces any \
\\!\\(\\*SuperscriptBox[SubscriptBox[\\(e\\), \\(i\\)], \\(2\\)]\\) terms \
that might be present\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ComplexG", "::", "usage"}], "=", 
   "\"\<ComplexG[a,b] generates a complex number a + b i, where i is the \
dimension 2 PseudoScalar\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstantG", "::", "usage"}], "=", 
   "\"\<ConstantG[x] picks out the constant term(s) of multivector x\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DotPrdtG", "::", "usage"}], "=", 
   "\"\<DotPrdtG[x,y,...,z] computes dot product of several \
multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eSubscriptListG", "::", "usage"}], "=", 
   "\"\<eSubscriptListG[x] computes a list of terms \
\\!\\(\\*SubscriptBox[\\(e\\), \\(i, j,  ... \\)]\\) corresponding to the \
components of multivector x\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvenClifG", "::", "usage"}], "=", 
   "\"\<EvenClifG[b,n] generates an n-dimensional multivector having only \
even-grade terms\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpandG", "::", "usage"}], "=", 
   "\"\<ExpandG[x] expands multivector x, including reduction of possible \
lingering \\!\\(\\*SuperscriptBox[SubscriptBox[\\(e\\), \\(i\\)], \\(2\\)]\\) \
terms\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FreeTermG", "::", "usage"}], "=", 
   "\"\<FreeTermG[x,c] computes clif, x, minus constant term, c\>\""}], 
  ";"}], "\n", 
 RowBox[{"GeomPrdtAtomG", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "::", "usage"}], "=", 
   "\"\<GeomPrdtG[x,y,...,z] computes the geometric (a.k.a. Clifford) product \
of several multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GormG", "::", "usage"}], "=", 
   "\"\<GormG[x] computes the gorm, \\!\\(\\*SubscriptBox[\\(x\\), \\(Reverse\
\\)]\\) \[CenterDot] x, of multivector x\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GradeListG", "::", "usage"}], "=", 
   "\"\<GradeListG[x] generates a list of grades matching the components of \
multivector x\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HodgeDualG", "::", "usage"}], "=", 
   "\"\<HodgeDualG[x,n] generates the Hodge Dual, x \[Diamond]c i, of \
multivector x, where i is the pseudovector of dimenstion n\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HodgeDual2G", "::", "usage"}], "=", 
   "\"\<HodgeDual2G[x,n] generates an alternative Hodge Dual, x \[Diamond] \
\\!\\(\\*SuperscriptBox[\\(i\\), \\(-1\\)]\\), of multivector x, where i is \
the pseudovector of dimenstion n\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InitializeG", "::", "usage"}], "=", 
   "\"\<InitializeG[x] reduces any \
\\!\\(\\*SuperscriptBox[SubscriptBox[\\(e\\), \\(i\\)], \\(2\\)]\\) terms in \
multivector x according to user's initialization scheme\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InitializeG", "::", "warning"}], "=", 
   "\"\<Warning: Implementing initialization defaults. Use Palette if wish to \
change Algebra Type, Signature Type, or Space vs Spacetime.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseG", "::", "usage"}], "=", 
   "\"\<InverseG[x] computes the inverse, if it exists, of multivector \
x\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LeftContractionG", "::", "usage"}], "=", 
   "\"\<LeftContractionG[x,y,...,z] computes the left contraction of several \
multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ListToClifG", "::", "usage"}], "=", 
   "\"\<ListToclifG[xList] converts a list into its corresponding multivector\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxDimG", "::", "usage"}], "=", 
   "\"\<MaxDimG[x] finds the maximum dimension among blades in the \
multivector\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nClifG", "::", "usage"}], "=", 
   "\"\<nClifG[a,n] generates a general symbolic multivector of dimension n \
with coefficients \\!\\(\\*SubscriptBox[\\(a\\), \\(i, j,  ... \\)]\\) \
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NormG", "::", "usage"}], "=", 
   "\"\<Norm[x] generates the norm of a multivector x when it exists\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nVectorG", "::", "usage"}], "=", 
   "\"\<nVectorG[a,n] generates a general (1-dimensional) vector of dimension \
n with coefficients \\!\\(\\*SubscriptBox[\\(a\\), \\(i\\)]\\)\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pBladeG", "::", "usage"}], "=", 
   "\"\<pBladeG[p,n] outputs a general blade of grade p in n-space\>\""}], 
  ";"}], "\n", 
 RowBox[{"PrdtG", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PseudoScalarG", "::", "usage"}], "=", 
   "\"\<PseudoScalarG[n] generates the dimension n positive unit pseudoscalar\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pSliceG", "::", "usage"}], "=", 
   "\"\<pSlice[x,p] finds the components of multivector x that are of grade p\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuaternionG", "::", "usage"}], "=", 
   "\"\<QuaternionG[a,b,c,d = a + bi + cj + dk = a + \
\\!\\(\\*SubscriptBox[\\(be\\), \\(2\\)]\\)\\!\\(\\*SubscriptBox[\\(e\\), \
\\(3\\)]\\) + \\!\\(\\*SubscriptBox[\\(ce\\), \
\\(3\\)]\\)\\!\\(\\*SubscriptBox[\\(e\\), \\(1\\)]\\) + \
\\!\\(\\*SubscriptBox[\\(de\\), \\(1\\)]\\)\\!\\(\\*SubscriptBox[\\(e\\), \
\\(2\\)]\\)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReverseG", "::", "usage"}], "=", 
   "\"\<ReverseG[x] generates the reverse of multivector x. That is, it \
changes signs of even blades of grade > 0\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RightContractionG", "::", "usage"}], "=", 
   "\"\<RightContractionG[x,y,...,z] computes the right contraction of \
several multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RotorG", "::", "usage"}], "=", 
   "\"\<RotorG[m,n,\[Theta]} generates a rotor that spins the m n-axis \
counter-clockwise by \[Theta]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarPrdtG", "::", "usage"}], "=", 
   "\"\<ScalarPrdtG[x,y,...,z] computes the scalar product of several \
multivectors\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SignatureG", "::", "usage"}], "=", 
   "\"\<SignatureG[list] computes the signature of a list; i.e., \
\[PlusMinus]1 depending upon whether the number of adjacent transpositions to \
put the list in order is even or odd. SignatureG works the same as \
Mathematica's Signature function except that it also calculates signatures \
even if there are repeating elements in the list. While SignatureG is more \
general in nature than GA, it is used here to greatly simplify the \
antisymmetrization process required for the geometric product.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SliceG", "::", "usage"}], "=", 
   "\"\<SliceG[a,p,n] generates a general grade-p expression in n-space \
having coefficients \\!\\(\\*SubscriptBox[\\(a\\), \\(i, j,  ... \
\\)]\\)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SubscriptListG", "::", "usage"}], "=", 
   "\"\<SubscriptListG[x] generates a list of subscripts of the terms in \
multivector x\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WedgePrdtG", "::", "usage"}], "=", 
   "\"\<WedgeProductG[x,y,...,z] computes the wedge (a.k.a exterior) product \
of multivectors x, y, ..., z\>\""}], ";"}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, 
   3.691170901550271*^9, 3.691170931919511*^9, 3.691191012184572*^9, {
   3.691191574857904*^9, 3.691191598506023*^9}, {3.6913488450185633`*^9, 
   3.691348845609715*^9}, {3.692447079216297*^9, 3.6924471231196547`*^9}, {
   3.692466346018285*^9, 3.69246635158994*^9}, {3.6924792339877777`*^9, 
   3.692479235697345*^9}, 3.6924918220692053`*^9, {3.6925515108435583`*^9, 
   3.6925515144652643`*^9}, 3.6925523727379313`*^9, {3.6925645231271973`*^9, 
   3.69256452496769*^9}, {3.6931799417333603`*^9, 3.6931800036341143`*^9}, {
   3.693180153515903*^9, 3.693180154513607*^9}, {3.693351095256298*^9, 
   3.693351177291225*^9}, {3.693351230299827*^9, 3.69335123186662*^9}, 
   3.695744339495956*^9, {3.6958205679318438`*^9, 3.695820664898106*^9}, 
   3.695849976726709*^9, 3.695850029484832*^9, {3.696198925565792*^9, 
   3.696198941990065*^9}, {3.696206195752206*^9, 3.6962062231960707`*^9}, {
   3.6962062535994368`*^9, 3.696206255205287*^9}, {3.696206716861391*^9, 
   3.6962067592672873`*^9}, {3.696274297025106*^9, 3.696274400997569*^9}, {
   3.696615976560133*^9, 3.696616030029272*^9}, 3.696616202136299*^9, {
   3.696617418434855*^9, 3.696617428388686*^9}, {3.6967205066222973`*^9, 
   3.6967206236157503`*^9}, {3.696883668136239*^9, 3.6968837779231567`*^9}, {
   3.696885267802205*^9, 3.6968852717601213`*^9}, {3.696885305355955*^9, 
   3.696885305875108*^9}, {3.696888961924432*^9, 3.696888988624432*^9}, {
   3.696894818104793*^9, 3.6968948689886923`*^9}, {3.696894907085924*^9, 
   3.696894908355514*^9}, {3.696967872606762*^9, 3.696967878366436*^9}, {
   3.696967938109671*^9, 3.696967942692211*^9}, {3.77444833740242*^9, 
   3.774448339361466*^9}, 3.774448449415064*^9, {3.774546602320857*^9, 
   3.774546667713036*^9}, {3.774546764462332*^9, 3.774546769140644*^9}, {
   3.77454680170467*^9, 3.774546839297427*^9}, 3.7745494178722267`*^9, {
   3.774554668481256*^9, 3.7745546718539257`*^9}, 3.774983635668571*^9, 
   3.775075460126781*^9, {3.775123190273097*^9, 3.7751231973968163`*^9}, {
   3.775123237268036*^9, 3.775123252220633*^9}, {3.775124097660597*^9, 
   3.7751241329927073`*^9}, 3.775124237830367*^9, {3.775124365113895*^9, 
   3.775124425022977*^9}, {3.77512454775596*^9, 3.775124554703045*^9}, {
   3.775125646819537*^9, 3.7751256485343637`*^9}, {3.775125794012031*^9, 
   3.775125802690913*^9}, {3.7751260855466013`*^9, 3.775126118105022*^9}, {
   3.775126210129208*^9, 3.7751262234918222`*^9}, {3.775126383769684*^9, 
   3.775126415115324*^9}, 3.775126519515176*^9, {3.775133615062565*^9, 
   3.7751336311449127`*^9}, 3.7751339543100767`*^9, {3.7755816245402117`*^9, 
   3.775581636480055*^9}, {3.77558220887508*^9, 3.775582242969562*^9}, 
   3.7755823392618113`*^9, {3.775582451432797*^9, 3.7755824617432213`*^9}, {
   3.775582664734206*^9, 3.775582674077622*^9}, {3.775584973040986*^9, 
   3.7755849737428493`*^9}, {3.775585019294463*^9, 3.7755850913060627`*^9}, {
   3.775585154170549*^9, 3.775585158299033*^9}, {3.775596215728896*^9, 
   3.775596248537055*^9}, {3.7756042614935513`*^9, 3.775604294110714*^9}, {
   3.775604380811844*^9, 3.7756043982870197`*^9}, {3.775645205741769*^9, 
   3.775645251152955*^9}, {3.7756460854417973`*^9, 3.77564608648853*^9}, {
   3.775646155786337*^9, 3.775646157472468*^9}, {3.7756470139648867`*^9, 
   3.775647106198036*^9}, {3.775647521749111*^9, 3.775647522930004*^9}, {
   3.776002453931438*^9, 3.776002471728344*^9}, {3.7760053393610153`*^9, 
   3.776005343006092*^9}, {3.776016135338503*^9, 3.7760161388351507`*^9}, {
   3.7760161912162323`*^9, 3.776016196923225*^9}, {3.776025376333159*^9, 
   3.776025425256933*^9}, {3.776025462701427*^9, 3.7760254990804853`*^9}, 
   3.776026083230489*^9, {3.7760269879114103`*^9, 3.776027071251017*^9}, {
   3.7760271151411953`*^9, 3.776027125147875*^9}, {3.776110174096887*^9, 
   3.776110259234088*^9}, {3.7761102971217403`*^9, 3.776110324664057*^9}, 
   3.77611035493078*^9, {3.776111278087606*^9, 3.7761112869488697`*^9}, {
   3.776111330640945*^9, 3.776111400413919*^9}, {3.776111533418598*^9, 
   3.776111555251718*^9}, {3.776111686017517*^9, 3.7761116929037952`*^9}, {
   3.776111767341218*^9, 3.776111800579113*^9}, {3.776112039588449*^9, 
   3.776112065309188*^9}, {3.776112109638021*^9, 3.7761121122211657`*^9}, {
   3.77611220297864*^9, 3.776112240020184*^9}, {3.776112279134726*^9, 
   3.776112280520583*^9}, 3.776112731866996*^9, {3.7779149253857727`*^9, 
   3.77791493790031*^9}, {3.777914995348982*^9, 3.777915002531622*^9}, {
   3.777915463117667*^9, 3.7779154699507303`*^9}, 3.7779155787447777`*^9, 
   3.777993547652903*^9},
 CellLabel->
  "In[152]:=",ExpressionUUID->"bb95fb8d-d9f3-4598-863d-ce86f7c663a4"],

Cell[BoxData["\<\"GeomAlg2019Sep`\"\>"], "Output",
 CellChangeTimes->{
  3.77798835127761*^9, {3.777991793476377*^9, 3.777991793960154*^9}, {
   3.777993583276174*^9, 3.777993603180125*^9}},
 CellLabel->
  "Out[152]=",ExpressionUUID->"2ca353e6-772c-4ebb-a084-4d269dbb919a"],

Cell[BoxData["e"], "Output",
 CellChangeTimes->{
  3.77798835127761*^9, {3.777991793476377*^9, 3.777991793960154*^9}, {
   3.777993583276174*^9, 3.777993603191781*^9}},
 CellLabel->
  "Out[153]=",ExpressionUUID->"127d554a-f190-4cbe-96db-e11c3f264835"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["2 Begin Private (i.e., define functions)", "Chapter",
 CellChangeTimes->{{3.6911912574424143`*^9, 
  3.691191285333445*^9}},ExpressionUUID->"a1525982-1156-48eb-8125-\
efcb2d27577c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691079948952552*^9, 
   3.6910812311298847`*^9, 3.691081438596291*^9, {3.691081646385612*^9, 
   3.691081654529285*^9}, {3.691088126555492*^9, 3.691088132162998*^9}, 
   3.69108858883849*^9, {3.691170806738544*^9, 3.691170809408004*^9}, 
   3.691170901550271*^9, 3.691170931919511*^9, 3.691191012184572*^9, {
   3.691346372215829*^9, 3.691346379937498*^9}, {3.69134830962848*^9, 
   3.691348380261441*^9}, {3.691618877779533*^9, 3.691618892258176*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"2d4b85c4-75f9-4a80-a7c3-79d1a9e6ca1a"]
}, Closed]],

Cell[CellGroupData[{

Cell["3 Operator Symbols", "Chapter",
 CellChangeTimes->{{3.691072646164959*^9, 3.691072653027358*^9}, 
   3.691191316677023*^9},ExpressionUUID->"58177a45-6844-4477-ad51-\
5a2c82db5919"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Diamond", ":=", "GeomPrdtG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "clifA", " ", "Esc", " ", "dia", " ", "Esc", " ", 
    RowBox[{"clifB", ":", " ", 
     RowBox[{"clifA", " ", "\[Diamond]", " ", "clifB"}]}]}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Wedge", ":=", "WedgePrdtG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "clifA", " ", 
    RowBox[{"Esc", " ", "^", " ", "Esc"}], " ", 
    RowBox[{"clifB", ":", " ", 
     RowBox[{"clifA", " ", "\[Wedge]", " ", "clifB"}]}]}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"CenterDot", ":=", "DotPrdtG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", 
    RowBox[{"Esc", " ", ".", " ", 
     RowBox[{"Esc", ":", " ", 
      RowBox[{"clifA", " ", "\[CenterDot]", " ", "clifB"}]}]}]}], "  ", 
   "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{" ", 
       RowBox[{
        RowBox[{"In", " ", "Mathematica"}], ",", " ", 
        RowBox[{
         RowBox[{"can", "'"}], "t", " ", "use", " ", "Right", " ", "Floor"}], 
        ","}], "  ", "\[RightFloor]"}], "  ", "as", " ", "a", " ", "binary", 
      " ", "operator", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"i", ".", "e", "."}], ",", " ", "infix"}], ")"}], ".", " ", 
       "So"}], " ", "use"}], " ", "\[SquareSuperset]"}], ",", " ", 
    "instead"}], "   ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"CircleDot", ":=", "ScalarPrdtG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "Esc", " ", 
    RowBox[{"c", ".", " ", 
     RowBox[{"Esc", ":", " ", 
      RowBox[{"clifA", " ", "\[CircleDot]", " ", "clifB"}]}]}]}], "  ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"SquareSuperset", ":=", "LeftContractionG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "Esc", " ", "slc", " ", "Esc"}], "  ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"SquareSubset", ":=", "RightContractionG"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Enter", " ", "Esc", " ", "src", " ", "Esc"}], "  ", "*)"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Example", ":", " ", 
    RowBox[{"wedge", " ", "product", " ", "of", " ", "3", " ", "vectors"}], 
    ":", " ", 
    RowBox[{"vector1", " ", "^", " ", 
     RowBox[{"vector2", " ", "^", " ", "vector3"}]}]}], "  ", "*)"}]}], "\n", 

 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Future", ":", " ", 
    RowBox[{"Add", " ", "unary", " ", "operators", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", ".", "e", "."}], ",", " ", "postfix"}], ")"}], " ", "\n", 
     "\t\t", "Consider", " ", "SuperStar", " ", 
     RowBox[{"(", 
      RowBox[{
      "unfortunately", " ", "considered", " ", "a", " ", "power", " ", "I", 
       " ", "believe"}], ")"}], " ", "or", " ", "\n", "\t\t", "OverHat", " ", 
     "for", " ", "Hodge", " ", "Dual", " ", "and", " ", "OverTilde", " ", 
     "for", " ", "Reverse"}]}], "  ", "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691079943689949*^9, {3.69108238077335*^9, 
   3.691082387422855*^9}, 3.691347313509397*^9, {3.692447192883754*^9, 
   3.692447224436717*^9}, {3.692447254520227*^9, 3.6924473080464687`*^9}, {
   3.693067885965362*^9, 3.69306795126612*^9}, {3.693068349184244*^9, 
   3.6930683506472*^9}, {3.693068394267212*^9, 3.693068396161887*^9}, {
   3.693070410088418*^9, 3.6930704714222183`*^9}, {3.693070505912455*^9, 
   3.693070569650454*^9}, {3.693070603813429*^9, 3.693070606477264*^9}, 
   3.693070637926775*^9, {3.693070681375293*^9, 3.693070738287313*^9}, {
   3.6930708066321287`*^9, 3.693070815357985*^9}, {3.6930708724412727`*^9, 
   3.693070944492628*^9}, {3.693079943932272*^9, 3.693080041128208*^9}, 
   3.693093298618628*^9, 3.693093657164068*^9, {3.6930950873556547`*^9, 
   3.6930950885425873`*^9}, {3.6933512808115587`*^9, 
   3.6933513326995707`*^9}, {3.693351363186131*^9, 3.693351387762291*^9}, {
   3.777909674519705*^9, 3.777909676798048*^9}, {3.777909711500111*^9, 
   3.7779097244134483`*^9}, {3.777909788879583*^9, 3.777909797716589*^9}, 
   3.777910103226995*^9},
 CellLabel->
  "In[196]:=",ExpressionUUID->"eab06bde-dac4-4543-b3e4-dd8a5cfa5a9f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "4 Typing Aids: Multivector Generators\n\t",
 StyleBox["Vectors, Blades, Multivectors, Rotors, \n\t   Complex Numbers, \
Quaternions", "Subchapter"]
}], "Chapter",
 CellChangeTimes->{{3.691073654834609*^9, 3.691073665779769*^9}, {
  3.691079848496414*^9, 
  3.691079895746023*^9}},ExpressionUUID->"e4a04ef0-9773-466f-8f2a-\
2556d621d191"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ModifyContextPathG", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"len", ",", "ContextPath"}], "}"}], ",", 
     RowBox[{
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", "$ContextPath", "]"}]}], ";", "\n", 
      RowBox[{"ContextPath", "=", 
       RowBox[{"Permute", "[", 
        RowBox[{"$ContextPath", ",", 
         RowBox[{"Cycles", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "len"}], "}"}], "}"}], "]"}]}], "]"}]}]}]}], 
    "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Move", " ", "pkg", " ", "context", " ", "to", " ", "end", " ", "of", " ", 
    "path"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Together", " ", "the", " ", "AtomG", " ", "definitions", " ", "below", 
     " ", "enable", " ", "expressions", " ", "like", " ", 
     RowBox[{"AtomG", "[", 
      RowBox[{"u", ",", "v", ",", "w", ",", "x"}], "]"}]}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["e", "u"], 
     SubscriptBox["e", "v"], 
     SubscriptBox["e", "w"], 
     SubscriptBox["e", "x"]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AtomG", "[", "u_", "]"}], ":=", 
   SubscriptBox["e", "u"]}], "  \t\t\t\t\t "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AtomG", "[", 
    RowBox[{"u_", ",", "v__"}], "]"}], ":=", 
   RowBox[{
    SubscriptBox["e", "u"], 
    RowBox[{"AtomG", "[", "v", "]"}]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Ex", ":", " ", 
     RowBox[{"AtomG", "[", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}]}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["e", "1"], 
     SubscriptBox["e", "2"], 
     SubscriptBox["e", "3"], 
     SubscriptBox["e", "4"]}]}], "  ", "*)"}], "\n", "\n", "\t", 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "AtomG", " ", "Module"}], "*)"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Together", " ", "the", " ", "pBladeG", " ", "definitions", " ", "below", 
     " ", "enable", " ", "expressions", " ", "like", " ", 
     RowBox[{"pBladeG", "[", 
      RowBox[{"p", ",", "4"}], "]"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"nVector", "[", 
        RowBox[{"a", ",", "5"}], "]"}], "\[Wedge]"}], "..."}], "\[Wedge]", 
     RowBox[{"nVector", "[", 
      RowBox[{"d", ",", "5"}], "]"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"pBladeG", "[", 
   RowBox[{"0", ",", "n_"}], "]"}], ":=", "1"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pBladeG", "[", 
    RowBox[{"p_", ",", "0"}], "]"}], ":=", "1"}], "  \t\t\t\t\t "}], "\n", 
 RowBox[{
  RowBox[{"pBladeG", "[", 
   RowBox[{"1", ",", "n_"}], "]"}], ":=", 
  RowBox[{"nVectorG", "[", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], ",", "n"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pBladeG", "[", 
    RowBox[{"p_", ",", "n_"}], "]"}], ":=", "\n", "\n", 
   RowBox[{"(*", "  ", 
    RowBox[{
     RowBox[{"INPUTS", ";", "\n", "\t\t", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{
        RowBox[{"grade", " ", "of", " ", "blade", "\n", "\t\t", "n"}], " ", 
        "=", " ", 
        RowBox[{"dimension", " ", "of", " ", "space", "\n", "\t", 
         RowBox[{"PROCESS", ":", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Program", " ", 
              RowBox[{
               RowBox[{"nVectorG", "[", 
                RowBox[{"a", ",", "n"}], "]"}], " ", "\[Wedge]", " ", 
               RowBox[{"nVectorG", "[", 
                RowBox[{"b", ",", "n"}], "]"}], " ", "\[Wedge]"}]}], " ", 
             "..."}], " ", "\[Wedge]", 
            RowBox[{"nVectorG", "[", 
             RowBox[{"d", ",", "n"}], "]"}]}], " ", "skipping", " ", 
           RowBox[{"nVectorG", "[", 
            RowBox[{"e", ",", "n"}], "]"}], "\n", "\t\t", "After", " ", "25", 
           " ", "lower", " ", "case", " ", "coefficients"}]}]}]}]}]}], ",", 
     " ", 
     RowBox[{
     "move", " ", "on", " ", "to", " ", "25", " ", "uppercase", " ", 
      "coeeficients", " ", "skipping", " ", "E", "\n", "\t\t", "Then", " ", 
      "move", " ", "on", " ", "to", " ", "lower", " ", "case", " ", "and", 
      " ", "then", " ", "upper", " ", "case", " ", "Greek"}], ",", " ", 
     RowBox[{
     "skipping", " ", "English", " ", "duplicates", "\n", "\t\t", "Finally"}],
      ",", " ", 
     RowBox[{
      RowBox[{"add", " ", "a", " ", "few", " ", "Hebrew", " ", 
       RowBox[{"letters", ".", " ", "This"}], " ", "allows", " ", "n", " ", 
       "up", " ", "to", " ", "74.", " ", "To", " ", "do", " ", "larger", " ", 
       "n", " ", "I", " ", "would", " ", "need", " ", "to", " ", "find", " ", 
       "additional", " ", 
       RowBox[{"letters", ".", "\n", "\t", "Output"}], "\n", "\t\t", 
       "pBlade"}], " ", "=", " ", 
      RowBox[{"the", " ", "product", " ", "listed", " ", "above"}]}]}], 
    "\t\t", "\n", "*)"}], "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "m", ",", "lowercase", ",", "uppercase", ",", "lcgreek", ",", "ucgreek",
        ",", "list", ",", "pBlade"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "74"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Warning: pBlade[p,n] is limited to n<75.\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"Bold", ",", "Red"}], "}"}]}], "]"}], "]"}]}], "]"}], ";",
       "\n", "\t", 
      RowBox[{"m", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"n", ",", "74"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"lowercase", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"Alphabet", "[", "]"}], ",", 
         RowBox[{"Except", "[", "\"\<e\>\"", "]"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"uppercase", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<A\>\"", ",", "\"\<Z\>\""}], "]"}], ",", 
         RowBox[{"Except", "[", "\"\<E\>\"", "]"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"lcgreek", "=", 
       RowBox[{"Alphabet", "[", "\"\<Greek\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"ucgreek", "=", 
       RowBox[{"{", 
        RowBox[{
        "\[CapitalGamma]", ",", "\[CapitalDelta]", ",", "\[CapitalTheta]", 
         ",", "\[CapitalXi]", ",", "\[CapitalPhi]", ",", "\[CapitalChi]", ",",
          "\[CapitalPsi]", ",", "\[CapitalOmega]", ",", "\[Aleph]", ",", 
         "\[Bet]", ",", "\[Gimel]", ",", "\[Dalet]"}], "}"}]}], ";", "\n", 
      "\t", 
      RowBox[{"list", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
        "lowercase", ",", "uppercase", ",", "lcgreek", ",", "ucgreek"}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"pBlade", "=", 
       RowBox[{"WedgePrdtG", " ", "@@", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"nVectorG", "[", 
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", " ", "m"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "p"}], "}"}]}], "]"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Ex", ":", " ", 
         RowBox[{"pBladeG", "[", 
          RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}]}], " ", "=", " ", 
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["e", "4"]}]}], "  ", "*)"}], "\n", "\n", "\t", 
      "pBlade"}]}], "]"}]}], "\n", "\t", 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "pBladeG", " ", "Module"}], "*)"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{"SliceG", "[", 
   RowBox[{"c_", ",", "0", ",", "n_"}], "]"}], ":=", 
  SubscriptBox["c", "0"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SliceG", "[", 
    RowBox[{"c_", ",", "p_", ",", "n_"}], "]"}], ":=", "   ", "\n", "\t", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Note", ":", " ", 
      RowBox[{
       RowBox[{
       "this", " ", "is", " ", "a", " ", "generic", " ", "homogeneous", " ", 
        "clif", " ", "of", " ", "grade", " ", "p", " ", "in", " ", "n"}], "-", 
       RowBox[{"Space", ".", " ", "\n", "\t\t", "Ex"}]}], ":", " ", 
      RowBox[{"SliceG", "[", 
       RowBox[{"a", ",", "2", ",", "4"}], "]"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["a", 
        RowBox[{"1", ",", "2"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "3"]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["a", 
        RowBox[{"1", ",", "4"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["a", 
        RowBox[{"2", ",", "3"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["a", 
        RowBox[{"2", ",", "4"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["a", 
        RowBox[{"3", ",", "4"}]]}]}]}], " ", "*)"}], "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"slice", ",", "tupleList", ",", "cList", ",", "eList"}], "}"}], 
     ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
        RowBox[{"dv_", "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"dv", ",", "c"}], "]"}]}]}], "]"}], ";", 
      RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Clear", " ", "all", " ", "c"}], "-", 
        RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", 
      "\t\t", "\n", "\t\t", 
      RowBox[{"slice", "=", "0"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "\[LessEqual]", "n"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"tupleList", "=", 
          RowBox[{"Subsets", "[", 
           RowBox[{
            RowBox[{"Range", "[", "n", "]"}], ",", 
            RowBox[{"{", "p", "}"}]}], "]"}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "  ", "*)"}], "\n", 
         "\t\t\t", 
         RowBox[{"cList", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"c", ",", "##"}], "]"}], "&"}], "@@@", 
           RowBox[{"Subsets", "[", 
            RowBox[{
             RowBox[{"Range", "[", "n", "]"}], ",", 
             RowBox[{"{", "p", "}"}]}], "]"}]}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["c", 
             RowBox[{"1", ",", "2"}]], ",", 
            SubscriptBox["c", 
             RowBox[{"1", ",", "3"}]], ",", 
            SubscriptBox["c", 
             RowBox[{"2", ",", "3"}]]}], "}"}], "  ", "*)"}], "\n", "\t\t\t", 
         
         RowBox[{"eList", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Product", "[", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"e", ",", "i"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"{", "##", "}"}]}], "}"}]}], "]"}], "&"}], "@@@", 
           RowBox[{"Subsets", "[", 
            RowBox[{
             RowBox[{"Range", "[", "n", "]"}], ",", 
             RowBox[{"{", "p", "}"}]}], "]"}]}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["e", "1"], 
             SubscriptBox["e", "2"]}], ",", " ", 
            RowBox[{
             SubscriptBox["e", "1"], 
             SubscriptBox["e", "3"]}], ",", " ", 
            RowBox[{
             SubscriptBox["e", "2"], 
             SubscriptBox["e", "3"]}]}], "}"}], "   ", "*)"}], "\n", "\t\t\t", 
         RowBox[{"slice", "=", 
          RowBox[{"cList", ".", "eList"}]}]}], "\n", "\t\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"], 
           SubscriptBox["c", 
            RowBox[{"1", ",", "2", " "}]]}], "+", " ", 
          RowBox[{
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "3"], 
           SubscriptBox["c", 
            RowBox[{"1", ",", "3"}]]}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["e", "2"], 
           SubscriptBox["e", "3"], 
           SubscriptBox["c", 
            RowBox[{"2", ",", "3"}]]}]}], "  ", "*)"}], "\n", "\t\t", ",", 
        "\n", "\t\t\t", 
        RowBox[{
        "Print", "[", "\"\<Error: SliceG requires p \[LessEqual] n.\>\"", 
         "]"}]}], "\n", "\t\t", "]"}], ";", "\n", "\t\t", "slice"}]}], " ", 
    "\n", "\t", "]"}]}], "       ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "SliceG", " ", "Module"}], " ", "*)"}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"EvenClifG", "[", 
   RowBox[{"b_", ",", "0"}], "]"}], ":=", 
  SubscriptBox["c", "0"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvenClifG", "[", 
    RowBox[{"b_", ",", "1"}], "]"}], ":=", 
   SubscriptBox["c", "0"]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvenClifG", "[", 
    RowBox[{"b_", ",", "n_"}], "]"}], ":=", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Create", " ", "an", " ", "n"}], "-", 
      RowBox[{"dimensional", " ", "Clif", " ", "using", " ", "user"}], "-", 
      RowBox[{"provided", " ", "base", " ", "\"\<c\>\"", "   ", "\n", 
       RowBox[{"INPUTS", ":", "\n", "\t", "b"}]}]}], " ", "\[Dash]", " ", 
     RowBox[{
     "Coefficient", " ", "letter", " ", "to", " ", "use", " ", "in", " ", 
      "Clif", "\n", "\t", "n"}], " ", "\[Dash]", " ", 
     RowBox[{"Number", " ", "of", " ", "desired", " ", "dimension", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", ".", "e", "."}], ",", " ", 
        RowBox[{"the", " ", "maximum", " ", "grade"}]}], ")"}], " ", "of", 
      " ", "the", " ", "clif", "\n", "\n", 
      RowBox[{"PROCESS", ":", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "Cases", " ", "command", " ", "clears", " ", "out", " ", "any", " ",
            "possible", " ", "values", " ", "or", " ", "definition", " ", 
           "for", " ", "the", " ", "base", " ", "b", "\n", "\t", "eArray", 
           " ", "generates", " ", "a", " ", "list", " ", "of", " ", "all", 
           " ", "possible", " ", 
           SubscriptBox["e", "i"], 
           SubscriptBox["e", "j"]}], "..."}], " ", "products", " ", "of", " ",
          "grade"}], " ", "\[LessEqual]", " ", 
        RowBox[{"n", "\n", "\t\t", "Example"}]}], ":", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", 
          SubscriptBox["e", "1"], ",", " ", 
          SubscriptBox["e", "2"], ",", " ", 
          RowBox[{
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"]}]}], "}"}], "\n", "\t\t", "The", " ", 
        "subset", " ", "formula", " ", "fails", " ", "for", " ", "grades", 
        " ", "0", " ", "and", " ", "1", " ", "so", " ", "those", " ", "are", 
        " ", "handled", " ", "by", " ", "brute", " ", "force", "\n", "\t", 
        "bList", " ", "generates", " ", "a", " ", "matching", " ", "of", " ", 
        
        SubscriptBox["b", 
         RowBox[{"i", ",", "j", ",", "..."}]], 
        RowBox[{"coefficients", ".", " ", 
         RowBox[{"Example", ":", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["b", "0"], ",", " ", 
             SubscriptBox["b", "1"], ",", " ", 
             SubscriptBox["b", "2"], ",", " ", 
             SubscriptBox["b", 
              RowBox[{"1", ",", "2"}]]}], "}"}], "\n", "\t", "Since", " ", 
           "the", " ", "constant", " ", 
           SubscriptBox["b", "0"], " ", "does", " ", "not", " ", "change", 
           " ", "sign"}]}]}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"we", " ", "modify", " ", "it", " ", "to", " ", "be", " ", 
       SubscriptBox["b", 
        RowBox[{"0", ",", "0"}]], " ", "in", " ", "bLis1", "\n", "\t\t", 
       RowBox[{"Example", ":", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["b", 
            RowBox[{"0", ",", "0"}]], ",", " ", 
           SubscriptBox["b", "1"], ",", " ", 
           SubscriptBox["b", "2"], ",", " ", 
           SubscriptBox["b", 
            RowBox[{"1", ",", "2"}]]}], "}"}], "\n", "\t", "Then", " ", "we", 
         " ", "make", " ", "a", " ", "list", " ", "of", " ", "the", " ", 
         "lengths", " ", "of", " ", "terms", " ", 
         SubscriptBox["b", 
          RowBox[{"i", ",", "j", ",", "..."}]], " ", "in", " ", "bList", " ", 
         "1.", " ", "Example"}], ":", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", " ", "2", ",", " ", "2", ",", " ", "3"}], "}"}], 
         "\n", "\t", "We", " ", "replace", " ", "the", " ", "odd", " ", 
         "lengths", " ", 
         RowBox[{"(", 
          RowBox[{"like", " ", 
           SubscriptBox["b", 
            RowBox[{"1", ",", "2"}]]}], ")"}], " ", "by", " ", "1", " ", 
         "and", " ", "the", " ", "even", " ", "lengths", " ", 
         RowBox[{"(", 
          RowBox[{"like", " ", 
           SubscriptBox["b", "3"]}], ")"}], " ", "by", " ", "0", "\n", "\t\t",
          "We", " ", "name", " ", "this", " ", "list", " ", 
         RowBox[{"evenList", ".", " ", 
          RowBox[{"Example", ":", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], 
             "}"}], "\n", "\t", "The", " ", "desired", " ", "clif", " ", "is",
             " ", "the", " ", 
            StyleBox["dot",
             FontSlant->"Italic",
             FontVariations->{"Underline"->True}], 
            StyleBox[" ",
             FontSlant->"Italic",
             FontVariations->{"Underline"->True}], 
            StyleBox["product",
             FontSlant->"Italic",
             FontVariations->{"Underline"->True}], " ", "of", " ", "evenList",
             " ", "with", " ", "the", " ", "result", " ", "of", " ", "the", 
            " ", 
            StyleBox["product",
             FontSlant->"Italic",
             FontVariations->{"Underline"->True}], 
            StyleBox[" ",
             FontVariations->{"Underline"->True}], "of", " ", "\n", "\t\t", 
            "bList", " ", "and", " ", 
            RowBox[{"eArray", ".", " ", "\n", "\t\t", "Example"}]}], ":", " ",
            "\n", "\t\t\t  ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], 
             "}"}], " ", ".", " ", 
            RowBox[{"[", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["b", "0"], ",", " ", 
                SubscriptBox["b", "1"], ",", " ", 
                SubscriptBox["b", "2"], ",", " ", 
                SubscriptBox["b", 
                 RowBox[{"1", ",", "2"}]]}], "}"}], " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", " ", 
                SubscriptBox["e", "1"], ",", " ", 
                SubscriptBox["e", "2"], ",", " ", 
                RowBox[{
                 SubscriptBox["e", "1"], 
                 SubscriptBox["e", "2"]}]}], "}"}]}], " ", "]"}]}]}]}]}]}]}], 
      " ", "\n", "\t\t\t", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], "}"}], 
        " ", ".", " ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["b", "0"], ",", " ", 
          RowBox[{
           SubscriptBox["b", "1"], 
           SubscriptBox["e", "1"]}], ",", " ", 
          RowBox[{
           SubscriptBox["b", "2"], 
           SubscriptBox["e", "2"]}], ",", " ", 
          RowBox[{
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"], 
           SubscriptBox["b", 
            RowBox[{"1", ",", "2"}]]}]}], "}"}]}], "\n", "\t\t\t", "=", " ", 
       RowBox[{
        SubscriptBox["b", "0"], " ", "+", " ", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["b", 
          RowBox[{"1", ",", "2"}]], "\n", "\n", 
         RowBox[{"OUTPUT", ":", "\n", "\t", 
          RowBox[{
           RowBox[{"An", " ", "array", " ", "of", " ", "even"}], "-", 
           RowBox[{"grade", " ", "members"}]}]}]}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"like", " ", "\n", "\t\t", 
       SubscriptBox["b", "0"]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["b", 
        RowBox[{"1", ",", "2"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["b", 
        RowBox[{"1", ",", "3", " "}]]}], "+", " ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["b", 
        RowBox[{"1", ",", "4"}]]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["b", 
        RowBox[{"2", ",", "3"}]]}], "  ", "+", " ", 
      RowBox[{
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["b", 
        RowBox[{"2", ",", "4", " "}]]}], "+", " ", 
      RowBox[{
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["b", 
        RowBox[{"3", ",", "4"}]]}], " ", "+", "  ", 
      RowBox[{
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], 
       SubscriptBox["e", "4"], 
       SubscriptBox["b", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4"}]]}]}]}], "  ", "*)"}], 
   "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "bList", ",", "eArray", ",", "bList1", ",", "evenList", ",", 
       "evenClif"}], "}"}], ",", "\n", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
        RowBox[{"dv_", "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"dv", ",", "b"}], "]"}]}]}], "]"}], ";", " ", "\n", "\t\t", 
      
      RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Clear", " ", "all", " ", "b"}], "-", 
        RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", "\t", 
      "\n", "\t\t", 
      RowBox[{"eArray", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Product]", "i", "n"], 
          SubscriptBox["e", "i"]}], ",", " ", "n"}], "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"List", " ", "of", " ", "all", " ", 
          SubscriptBox["e", "i"], 
          SubscriptBox["e", "j"]}], "..."}], " ", "products"}], " ", "*)"}], 
      "\n", "\t\t", 
      RowBox[{"bList", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["b", "0"], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"b", ",", "##"}], "]"}], "&"}], "@@@", 
           RowBox[{"Rest", "[", 
            RowBox[{"Subsets", "[", 
             RowBox[{"Range", "[", "n", "]"}], "]"}], "]"}]}]}], "]"}], 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"bList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
         SubscriptBox["b", "0"]}], ",", 
        RowBox[{"bList1", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"bList", ",", 
           RowBox[{"1", "\[Rule]", 
            SubscriptBox["b", 
             RowBox[{"0", ",", "0"}]]}]}], "]"}]}], ",", 
        RowBox[{"bList1", "=", "bList"}]}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"evenList", "=", 
       RowBox[{
        RowBox[{"Length", "/@", "bList1"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"u_", "/;", 
            RowBox[{"OddQ", "[", "u", "]"}]}], "\[Rule]", "1"}], ",", 
          RowBox[{
           RowBox[{"u_", "/;", 
            RowBox[{"EvenQ", "[", "u", "]"}]}], "\[Rule]", "0"}]}], "}"}]}]}],
       ";", "\t", "\n", "\t\t", 
      RowBox[{"evenClif", "=", 
       RowBox[{"evenList", ".", 
        RowBox[{"(", 
         RowBox[{"bList", " ", "eArray"}], ")"}]}]}], ";", "\n", "\t\t", 
      "evenClif"}]}], "\n", "\t", "]"}]}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "EvenClifG", " ", "Module"}], "  ", "*)"}], 
  "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"nClifG", "[", 
   RowBox[{"c_", ",", "0"}], "]"}], ":=", 
  SubscriptBox["c", "0"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nClifG", "[", 
    RowBox[{"c_", ",", "1"}], "]"}], ":=", 
   RowBox[{
    SubscriptBox["c", "0"], "+", 
    RowBox[{
     SubscriptBox["c", "1"], 
     SubscriptBox["e", "1"]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nClifG", "[", 
    RowBox[{"c_", ",", "n_"}], "]"}], ":=", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Create", " ", "an", " ", "n"}], "-", 
      RowBox[{"dimensional", " ", "Clif", " ", "using", " ", "user"}], "-", 
      RowBox[{"provided", " ", "base", " ", "\"\<c\>\"", "   ", "\n", 
       RowBox[{"INPUTS", ":", "\n", "\t", "c"}]}]}], " ", "\[Dash]", " ", 
     RowBox[{
     "Coefficient", " ", "letter", " ", "to", " ", "use", " ", "in", " ", 
      "Clif"}], ",", " ", 
     RowBox[{
     "often", " ", "a", " ", "for", " ", "1", "st", " ", "array", " ", "and", 
      " ", "b", " ", "for", " ", "a", " ", "second", " ", "one", "\n", "\t", 
      "n"}], " ", "\[Dash]", " ", 
     RowBox[{"Number", " ", "of", " ", "desired", " ", "dimension", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", ".", "e", "."}], ",", " ", 
        RowBox[{"the", " ", "maximum", " ", "grade"}]}], ")"}], " ", "of", 
      " ", "the", " ", "clif", "\n", "\n", 
      RowBox[{"PROCESS", ":", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "Cases", " ", "command", " ", "clears", " ", "out", " ", "any", " ",
            "possible", " ", "values", " ", "or", " ", "definition", " ", 
           "for", " ", "the", " ", "base", " ", "c", "\n", "\t", "eArray", 
           " ", "generates", " ", "a", " ", "list", " ", "of", " ", "all", 
           " ", "possible", " ", 
           SubscriptBox["e", "i"], 
           SubscriptBox["e", "j"]}], "..."}], " ", "products", " ", "of", " ",
          "grade"}], " ", "\[LessEqual]", " ", 
        RowBox[{
        "n", "\n", "\t\t", "The", " ", "subset", " ", "formula", " ", "fails",
          " ", "for", " ", "grades", " ", "0", " ", "and", " ", "1", " ", 
         "so", " ", "those", " ", "are", " ", "handled", " ", "by", " ", 
         "brute", " ", "force", "\n", "\t", "cList", " ", "generates", " ", 
         "a", " ", "matching", " ", "of", " ", 
         SubscriptBox["c", 
          RowBox[{"i", ",", "j", ",", "..."}]], "coefficients", "\n", "\t", 
         "The", " ", "desired", " ", "clif", " ", "is", " ", "the", " ", 
         "dot", " ", "product", " ", "of", " ", "the", " ", "2", " ", "lists",
          "\n", "\n", "OUTPUT"}]}], ":", "\n", "\t", 
       RowBox[{
        RowBox[{"An", " ", "array", " ", "like", " ", 
         SubscriptBox["b", "0"]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["b", "1"], 
         SubscriptBox["e", "1"]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["b", "2"], 
         SubscriptBox["e", 
          RowBox[{"2", " "}]]}], "+", " ", 
        RowBox[{
         SubscriptBox["b", "3"], 
         SubscriptBox["e", 
          RowBox[{"3", " "}]]}], "+", " ", 
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["b", 
          RowBox[{"1", ",", "2"}]]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["b", 
          RowBox[{"1", ",", "3", " "}]]}], "+", " ", 
        RowBox[{
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["b", 
          RowBox[{"2", ",", "3"}]]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["b", 
          RowBox[{"1", ",", "2", ",", "3"}]]}]}]}]}]}], "   ", "*)"}], "\n", 
   "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cList", ",", "eArray"}], "}"}], ",", "\n", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
        RowBox[{"dv_", "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"dv", ",", "c"}], "]"}]}]}], "]"}], ";", "\n", "\t\t    ", 
      RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Clear", " ", "all", " ", "c"}], "-", 
        RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", "\t", 
      "\n", "\t\t", 
      RowBox[{"eArray", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Product]", "i", "n"], 
          SubscriptBox["e", "i"]}], ",", " ", "n"}], "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"List", " ", "of", " ", "all", " ", 
          SubscriptBox["e", "i"], 
          SubscriptBox["e", "j"]}], "..."}], " ", "products"}], " ", "*)"}], 
      "\n", "\t\t", 
      RowBox[{"cList", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["c", "0"], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"c", ",", "##"}], "]"}], "&"}], "@@@", 
           RowBox[{"Rest", "[", 
            RowBox[{"Subsets", "[", 
             RowBox[{"Range", "[", "n", "]"}], "]"}], "]"}]}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", "\t\t", 
      RowBox[{"cList", ".", "eArray"}]}]}], "\n", "\t", "]"}]}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "nClifG", " ", "Module"}], "  ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifFormatG", "[", "n_", "]"}], ":=", "  ", 
   RowBox[{"(*", "  ", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"INPUT", ":", "\n", "\t", "n"}], " ", "=", " ", 
      RowBox[{"largest", " ", "subscript", " ", "on", " ", "any", " ", 
       SubscriptBox["e", "i"], " ", "term", " ", "in", " ", "clif", 
       RowBox[{"(", "s", ")"}], " ", "under", " ", "consideration", " ", 
       "for", " ", "simplifying", " ", "printout", "\n", "\n", 
       RowBox[{"PROCESS", ":", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"First", " ", "form", " ", "the", " ", "product", " ", 
           SubscriptBox["e", "1"], 
           SubscriptBox["e", "2"]}], "..."}], 
         RowBox[{
          SubscriptBox["e", "n"], ".", " ", "For"}], " ", "example"}]}]}]}], 
     ",", " ", 
     RowBox[{
      RowBox[{"for", " ", "n"}], " ", "=", " ", 
      RowBox[{"3", " ", "we", " ", "form", " ", 
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"], 
       SubscriptBox["e", "3"], "\n", "\t", "Then", " ", "make", " ", "a", " ",
        "list", " ", "of", " ", "all", " ", "subsets", " ", "of", " ", "the", 
       " ", 
       RowBox[{"product", ".", " ", "For"}], " ", "example"}]}], ",", " ", 
     RowBox[{
      RowBox[{"for", " ", "n"}], " ", "=", " ", "3"}], ",", " ", 
     RowBox[{
      RowBox[{"the", " ", "list", " ", "is", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["e", "1"], ",", " ", 
         SubscriptBox["e", "2"], ",", " ", 
         SubscriptBox["e", "3"], ",", " ", 
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"]}], ",", " ", 
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "3"]}], ",", " ", 
         RowBox[{
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"]}], ",", " ", 
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"]}]}], "}"}]}], " ", "=", " ", 
      RowBox[{"Basis", " ", "for", " ", 
       RowBox[{"GA", "[", "3", "]"}], "\n", "\t", "Finally"}]}], ",", " ", 
     RowBox[{
     "Mathematica", " ", "works", " ", "better", " ", "with", " ", "this", 
      " ", "list", " ", "in", " ", "reverse", " ", "order", "\n", "\t", 
      "This", " ", "function", " ", "is", " ", "used", " ", "by", " ", 
      "function", " ", "CollectG", " ", "and", " ", "can", " ", "also", " ", 
      "be", " ", "used", " ", "directly", " ", "by", " ", "the", " ", "user", 
      "\n", "\n", 
      RowBox[{"OUTPUT", ":", "\n", "\t", "collectTerms"}]}], " ", "\[Dash]", 
     " ", 
     RowBox[{"the", " ", "list", " ", "above"}], ",", " ", "reversed"}], 
    "   ", "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "collectTerms", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "1"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"collectTerms", "=", 
          RowBox[{"Subsets", "[", 
           RowBox[{
            RowBox[{
             SubsuperscriptBox["\[Product]", "i", "n"], 
             SubscriptBox["e", "i"]}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "n"}], "}"}]}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Terms", " ", "we", " ", "wish", " ", "to", " ", "collect", " ", 
           "by"}], " ", "*)"}], "\n", "\t\t\t", 
         RowBox[{"collectTerms", "=", 
          RowBox[{"Reverse", "[", "collectTerms", "]"}]}]}], "\n", "\t\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Reverse", " ", "order", " ", "to", " ", "force", " ", "Mathematica",
           " ", "to", " ", "collect", " ", "terms", " ", "correctly"}], " ", 
         "*)"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
        RowBox[{"collectTerms", "=", 
         RowBox[{"{", 
          SubscriptBox["e", "1"], "}"}]}]}], "\n", "\t\t", "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug5", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Arrange List = \>\"", ",", "collectTerms"}], "]"}]}], 
       "]"}], ";", "\n", "\t\t", "collectTerms"}]}], "\n", "\t", "]"}]}], 
  "       ", 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "ClifFormatG", " ", "Module"}], "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ComplexG", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "complexNum", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"]}]}], ";", 
      RowBox[{"complexNum", "=", 
       RowBox[{"a", "+", 
        RowBox[{"b", " ", "i"}]}]}]}]}], "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PseudoScalarG", "[", "n_", "]"}], ":=", 
   RowBox[{"Product", "[", 
    RowBox[{
     SubscriptBox["e", "i"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["e", "1"], 
      SubscriptBox["e", "2"]}], "..."}], 
    SubscriptBox["e", "n"]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuaternionG", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], ":=", "\n", "\t", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "quaternionNum", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{
        SubscriptBox["e", "2"], 
        SubscriptBox["e", "3"]}]}], ";", 
      RowBox[{"j", "=", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["e", "1"]}], 
        SubscriptBox["e", "3"]}]}], ";", 
      RowBox[{"k", "=", 
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"]}]}], ";", 
      RowBox[{"quaternionNum", "=", 
       RowBox[{"a", "+", 
        RowBox[{"b", " ", "i"}], "+", 
        RowBox[{"c", " ", "j"}], "+", 
        RowBox[{"d", " ", "k"}]}]}], ";", "\n", "\t\t", "quaternionNum"}]}], 
    "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RotorG", "[", 
    RowBox[{"i_", ",", "j_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "/", "2"}], "]"}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "/", "2"}], "]"}], 
     SubscriptBox["e", "i"], 
     SubscriptBox["e", "j"]}]}]}], "  ", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Create", " ", "rotor", " ", "from", " ", "rotation", " ", "angle", " ", 
    "plane", " ", "of", " ", "rotation", " ", 
    RowBox[{"(", 
     RowBox[{
     "denoted", " ", "by", " ", "the", " ", "pair", " ", "of", " ", "axis", 
      " ", "numbers"}], ")"}]}], "  ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BiVectorG", "[", "n_", "]"}], ":=", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Bivector", " ", "is", " ", "visualized", " ", "as", " ", "a", " ", "2", 
     "D", " ", "region", " ", "spanned", " ", "by", " ", "2", " ", "vectors", 
     " ", "in", " ", "a", " ", "space", " ", "of", " ", "dimension", " ", "2",
      " ", "or", " ", "higher"}], "   ", "*)"}], "\n", "\n", "\t\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "geoprdt", "}"}], ",", "\n", "\t\t", "\n", "\t\t", 
     RowBox[{
      RowBox[{"geoprdt", "=", 
       RowBox[{"WedgePrdtG", "[", 
        RowBox[{
         RowBox[{"nVectorG", "[", 
          RowBox[{"Global`a", ",", "n"}], "]"}], ",", 
         RowBox[{"nVectorG", "[", 
          RowBox[{"Global`b", ",", "n"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
      "\t\t", "geoprdt"}]}], "]"}]}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "BivectorG", " ", "Module", " ", "c"}], 
   "*)"}], "\t", "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BiVectorG", "[", 
    RowBox[{"c_", ",", "n_"}], "]"}], ":=", "    ", "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pairList", ",", "cList", ",", "eList", ",", "bivectorC"}], 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
        RowBox[{"dv_", "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"dv", ",", "c"}], "]"}]}]}], "]"}], ";", 
      RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Clear", " ", "all", " ", "c"}], "-", 
        RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", 
      "\t\t", "\n", "\t\t", 
      RowBox[{"pairList", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"cList", "=", 
       RowBox[{"pairList", "/.", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u_", ",", "v_"}], "}"}], "\[Rule]", 
         SubscriptBox["c", 
          RowBox[{"u", ",", "v"}]]}]}]}], ";", "\n", "\t\t", 
      RowBox[{"eList", "=", 
       RowBox[{"pairList", "/.", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u_", ",", "v_"}], "}"}], "\[Rule]", 
         RowBox[{
          SubscriptBox["e", "u"], 
          SubscriptBox["e", "v"]}]}]}]}], ";", "\n", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "1"}], ",", "\n", "\t\t\t", 
        RowBox[{"bivectorC", "=", 
         RowBox[{"cList", ".", "eList"}]}], ",", "\n", "\t\t\t", "\n", 
        "\t\t\t", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Error: 2nd entry of BiVectorG must be \[GreaterEqual] 2.\>\"", 
          "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"bivectorC", "=", "0"}]}]}], "\n", "\t\t", "]"}], ";", "\n", 
      "\n", "\t\t", "bivectorC"}]}], "     ", 
    RowBox[{"(*", 
     RowBox[{"End", " ", "of", " ", "BivectorG", " ", "Module"}], "*)"}], 
    "\n", "\t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"nVectorG", "[", 
   RowBox[{"c_", ",", "n_"}], "]"}], ":=", "   ", 
  RowBox[{"(*", "  ", 
   RowBox[{"Note", ":", " ", 
    RowBox[{"n", "-", 
     RowBox[{
     "vector", " ", "is", " ", "a", " ", "vector", " ", "of", " ", 
      "dimension", " ", "1", " ", "in", " ", "n"}], "-", 
     RowBox[{"dimensional", " ", "space"}]}]}], "  ", "*)"}], "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "vectorC", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"SubValues", "[", "Subscript", "]"}], ",", 
       RowBox[{"dv_", "/;", 
        RowBox[{"FreeQ", "[", 
         RowBox[{"dv", ",", "c"}], "]"}]}]}], "]"}], ";", 
     RowBox[{"DownValues", "[", "Subscript", "]"}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Clear", " ", "all", " ", "c"}], "-", 
       RowBox[{"subscripted", " ", "variables"}]}], " ", "*)"}], "\n", "\t\t",
      "\n", "\t\t", 
     RowBox[{"vectorC", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["c", "i"], " ", 
         SubscriptBox["e", "i"]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}]}]}], "\n", "\t", "]"}], 
  "     ", 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "nVectorG", " ", "Module"}], 
   "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691073072029634*^9, 3.691073593702551*^9, 
   3.691073646277369*^9, 3.691073715183025*^9, 3.691073841869029*^9, 
   3.691073879917136*^9, {3.691083790822109*^9, 3.691083807709655*^9}, 
   3.691102705583344*^9, 3.691162433031191*^9, 3.691170784665902*^9, {
   3.691346561571847*^9, 3.691346570068967*^9}, {3.692447373223377*^9, 
   3.692447532918645*^9}, {3.692469057395756*^9, 3.692469107232608*^9}, 
   3.692469147166288*^9, {3.692469349943776*^9, 3.6924693632114563`*^9}, {
   3.692469760038862*^9, 3.692469762206094*^9}, {3.6924698004424343`*^9, 
   3.692469821952053*^9}, {3.6924698943308783`*^9, 3.692469905801302*^9}, {
   3.692469955916291*^9, 3.692470000503005*^9}, {3.69247023043757*^9, 
   3.692470235895976*^9}, 3.6924702957546053`*^9, {3.692470325763568*^9, 
   3.692470327864963*^9}, {3.6924703646562357`*^9, 3.692470365999009*^9}, {
   3.692477730817863*^9, 3.6924777369195423`*^9}, {3.6924806243244343`*^9, 
   3.692480627296599*^9}, {3.692480715831465*^9, 3.692480746817174*^9}, {
   3.6924807785484743`*^9, 3.6924807795406113`*^9}, {3.692483482874556*^9, 
   3.692483510142209*^9}, {3.692483576261361*^9, 3.692483577773611*^9}, {
   3.692483757488112*^9, 3.6924837586716547`*^9}, {3.6924838557341843`*^9, 
   3.6924838802727127`*^9}, {3.6924842352926903`*^9, 3.692484242631442*^9}, {
   3.6924842837660093`*^9, 3.692484307298365*^9}, {3.692484751172928*^9, 
   3.692484751699987*^9}, {3.692484876432817*^9, 3.692484906650508*^9}, {
   3.6924851127171087`*^9, 3.692485136152149*^9}, {3.692485187634049*^9, 
   3.6924851980868073`*^9}, {3.6924863997635202`*^9, 3.692486402915242*^9}, 
   3.6924875308975143`*^9, {3.692487942626789*^9, 3.692487957464012*^9}, {
   3.692488104024858*^9, 3.6924881095812073`*^9}, {3.69248938242953*^9, 
   3.692489511660285*^9}, {3.692489773534418*^9, 3.692489798312385*^9}, {
   3.692490135012905*^9, 3.692490216669692*^9}, 3.692490297360961*^9, 
   3.692490394216696*^9, {3.692490496683786*^9, 3.692490505331368*^9}, {
   3.6925520012295637`*^9, 3.6925520019241133`*^9}, {3.692552037863998*^9, 
   3.692552065234827*^9}, {3.6925529539656267`*^9, 3.692552968456435*^9}, {
   3.6926607006192703`*^9, 3.6926607328520737`*^9}, {3.6926643967708263`*^9, 
   3.692664435716918*^9}, {3.6926644747913713`*^9, 3.692664511024021*^9}, 
   3.693416689417634*^9, {3.6934429347752457`*^9, 3.6934429442660637`*^9}, {
   3.695772632724825*^9, 3.695772660111655*^9}, {3.695772729892161*^9, 
   3.6957727330989122`*^9}, {3.695772773560491*^9, 3.695772785192503*^9}, {
   3.6957728260396976`*^9, 3.695772835683711*^9}, {3.695773058721252*^9, 
   3.695773062508369*^9}, 3.695773118976162*^9, 3.696874243476945*^9, {
   3.696874286147122*^9, 3.696874298940352*^9}, {3.696874404018293*^9, 
   3.696874537764249*^9}, {3.696874602351841*^9, 3.6968746041616373`*^9}, {
   3.696874659991012*^9, 3.696874663226799*^9}, {3.6968746988284903`*^9, 
   3.6968747444586906`*^9}, {3.696881257346979*^9, 3.6968813481916103`*^9}, {
   3.696881412614933*^9, 3.696881464451166*^9}, {3.69688156411371*^9, 
   3.696881636605691*^9}, {3.6968816681763277`*^9, 3.696881762195716*^9}, {
   3.6968818170531607`*^9, 3.696881995945527*^9}, {3.696882120055017*^9, 
   3.696882478726488*^9}, {3.696882521265705*^9, 3.696882717279447*^9}, {
   3.69688277565548*^9, 3.696882804903944*^9}, {3.6968828811487083`*^9, 
   3.696883254430832*^9}, {3.6968833543095827`*^9, 3.696883384972622*^9}, {
   3.696883422143056*^9, 3.696883481025609*^9}, {3.696883526916669*^9, 
   3.696883574035481*^9}, {3.6968846120048437`*^9, 3.69688461686412*^9}, {
   3.69688467446104*^9, 3.696884685177855*^9}, 3.696885797102686*^9, {
   3.69688892872575*^9, 3.696888954729598*^9}, {3.6968890691896973`*^9, 
   3.696889117295525*^9}, {3.69688953370457*^9, 3.6968895577528276`*^9}, {
   3.6968953710487003`*^9, 3.696895389988497*^9}, {3.69689544626528*^9, 
   3.6968954649317913`*^9}, {3.696974951984475*^9, 3.696974954727544*^9}, 
   3.77444761612952*^9, 3.775581664064241*^9, {3.77558206598915*^9, 
   3.775582098905489*^9}, {3.7755822595311813`*^9, 3.7755822846705847`*^9}, {
   3.7755824866976023`*^9, 3.775582507627421*^9}, {3.77558283781618*^9, 
   3.775582843328519*^9}, {3.775582906337689*^9, 3.7755829110678797`*^9}, {
   3.775582985092743*^9, 3.775583154049403*^9}, {3.775583233175458*^9, 
   3.775583264779544*^9}, {3.775583299562887*^9, 3.77558332157612*^9}, {
   3.77558335881531*^9, 3.7755834111482058`*^9}, {3.7755834775260344`*^9, 
   3.775583494929969*^9}, {3.775583590653554*^9, 3.775583647507394*^9}, {
   3.7755839612059383`*^9, 3.7755841134724283`*^9}, 3.7755847414274473`*^9, {
   3.775584791000386*^9, 3.775584849374729*^9}, {3.775587348294716*^9, 
   3.775587454840221*^9}, {3.7755888760743723`*^9, 3.7755891657717667`*^9}, {
   3.775589216180119*^9, 3.775589467244999*^9}, {3.77558952227777*^9, 
   3.7755898632051897`*^9}, {3.775590262238832*^9, 3.77559034070681*^9}, {
   3.7755903719749413`*^9, 3.7755904926353903`*^9}, {3.7755905622820272`*^9, 
   3.7755905978528423`*^9}, {3.7755906412968597`*^9, 3.775590713715106*^9}, {
   3.7755959885552063`*^9, 3.7755960350642548`*^9}, {3.775596071365271*^9, 
   3.775596102809257*^9}, {3.775596132981571*^9, 3.775596152514195*^9}, {
   3.775599213262384*^9, 3.775599228195516*^9}, {3.775599307813313*^9, 
   3.7755993302410793`*^9}, {3.775599764671459*^9, 3.775599766217154*^9}, {
   3.775603585720708*^9, 3.775603587327155*^9}, {3.775603954499049*^9, 
   3.7756039549422693`*^9}, 3.775641818371272*^9, {3.775642185147522*^9, 
   3.775642188128715*^9}, {3.775644588700006*^9, 3.775644602016529*^9}, {
   3.775644731793159*^9, 3.775644772459985*^9}, {3.775644824232993*^9, 
   3.7756448266120462`*^9}, {3.7756532044319487`*^9, 3.775653260035116*^9}, {
   3.775653408606385*^9, 3.77565346321084*^9}, {3.775653495489862*^9, 
   3.7756536403891478`*^9}, {3.775657264894565*^9, 3.775657309131571*^9}, {
   3.775922032511407*^9, 3.775922035347479*^9}, {3.776002504881151*^9, 
   3.776002522576523*^9}, {3.7760227456248417`*^9, 3.776022769836893*^9}, 
   3.776022819188079*^9, {3.776110448681479*^9, 3.776110521786894*^9}, {
   3.777660964290831*^9, 3.777660986261176*^9}, {3.777661296945305*^9, 
   3.777661329929747*^9}, {3.777661369987954*^9, 3.777661371539607*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"cc35f83c-036d-4558-9ef4-8571356e9f49"]
}, Closed]],

Cell[CellGroupData[{

Cell["5 Multivector Support Functions", "Chapter",
 CellChangeTimes->{{3.691073885336754*^9, 3.691073896408777*^9}, {
   3.7067284142787237`*^9, 3.706728414281673*^9}, 
   3.706813002392456*^9},ExpressionUUID->"9c63b62e-9730-433c-8884-\
b0391cc574d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CollectG", "[", 
    RowBox[{"clifInput_", ",", 
     RowBox[{"n_:", "-", "1"}]}], "]"}], ":=", "  ", 
   RowBox[{"(*", "  ", "\n", "\n", 
    RowBox[{
     RowBox[{"INPUTS", ":", "\n", "\t", 
      RowBox[{
      "clifInput", " ", "is", " ", "the", " ", "clif", " ", "to", " ", "be", 
       " ", "simplified", "\n", "\t", "n"}]}], " ", "\[Dash]", " ", 
     RowBox[{"Optional", " ", 
      RowBox[{"input", ".", " ", "Max"}], " ", "value", " ", "of", " ", "any",
       " ", 
      SubscriptBox["e", "i"], " ", "subscript", " ", "for", " ", "purposes", 
      " ", "of", " ", "collecting", " ", "terms", " ", "in", " ", "printout", 
      "\n", "\n", 
      RowBox[{"PROCESS", ":", "\n", "\t", 
       RowBox[{
        RowBox[{
        "Call", " ", "function", " ", "MaxDimG", " ", "to", " ", "find", " ", 
         "the", " ", "size", " ", "of", " ", "the", " ", "largest", " ", 
         "e"}], "-", 
        RowBox[{
        "subscript", " ", "in", " ", "the", " ", "clif", "\n", "\t", "Modify",
          " ", "multivector", " ", "clifInput", " ", "according", " ", "to", 
         " ", 
         RowBox[{"user", "'"}], "s", " ", "initialization", " ", "rules", 
         "\n", "\t", "Use", " ", 
         RowBox[{"Mathematica", "'"}], "s", " ", "Collect", " ", "to", " ", 
         "collect", " ", "the", " ", "terms", " ", "by", " ", 
         SubscriptBox["e", "1"]}]}]}]}], ",", " ", "...", ",", " ", 
     SubscriptBox["e", "n"], ",", " ", 
     RowBox[{
      SubscriptBox["e", "1"], 
      SubscriptBox["e", "2"]}], ",", " ", "\n", "\t\t", 
     RowBox[{
      SubscriptBox["e", "1"], 
      SubscriptBox["e", "3"]}], ",", " ", "...", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"]}], "..."}], 
       RowBox[{"(", 
        SubscriptBox["e", "n"], ")"}], "\n", "\t", "This", " ", "function", 
       " ", "is", " ", "used", " ", "by", " ", "other", " ", "functions", " ",
        "and", " ", "can", " ", "also", " ", "be", " ", "called", " ", 
       "directly", " ", "by", " ", "the", " ", "user", "\n", "\n", 
       RowBox[{"OUTPUT", ":", "\n", "\t", "clifOutput"}]}], " ", "=", " ", 
      RowBox[{
      "clif", " ", "with", " ", "all", " ", "multiplications", " ", "carried",
        " ", "out", " ", "and", " ", "then", " ", "arranged", " ", "by", " ", 
       "product", " ", "of", " ", 
       SubscriptBox["e", "i"], " ", "terms", "\n", "\t", "This", " ", "is", 
       " ", "same", " ", "as", " ", 
       RowBox[{"Mathematica", "'"}], "s", " ", "Collect", " ", "function", 
       " ", "except", " ", "for", " ", "implementation", " ", "of", " ", 
       RowBox[{"user", "'"}], "s", " ", "initialization", " ", "rules", " ", 
       "to", " ", "handle", " ", 
       SuperscriptBox[
        SubscriptBox["e", "i"], "2"], " ", "\n", "\t", "terms"}]}]}], "   ", 
    "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "clifOutput"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", "\[Equal]", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"(*", " ", 
         RowBox[{"if", " ", "user", " ", 
          RowBox[{"doesn", "'"}], "t", " ", "supply", " ", "an", " ", 
          "input"}], " ", "*)"}], "\n", "\t\t\t", 
        RowBox[{"m", "=", 
         RowBox[{"MaxDimG", "[", "clifInput", "]"}]}], "\n", "\t\t", ",", 
        "\n", "\t\t\t", 
        RowBox[{"m", "=", "n"}]}], "\n", "\t\t", "]"}], ";", "\n", "\n", 
      "\t\t", 
      RowBox[{"clifOutput", "=", 
       RowBox[{"Collect", "[", 
        RowBox[{
         RowBox[{"ExpandG", "[", "clifInput", "]"}], ",", 
         RowBox[{"ClifFormatG", "[", "m", "]"}]}], "]"}]}], ";", "\n", "\t\t",
       "clifOutput"}]}], "\n", "]"}]}], "       ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "CollectG", " ", "Module"}], "\t", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstantG", "[", "clif_", "]"}], ":=", " ", 
   RowBox[{"(*", " ", "\n", "\t", 
    RowBox[{"INPUT", ":", " ", 
     RowBox[{"A", " ", "multivector", "\n", "\t", "PROCESS"}], ":", " ", 
     RowBox[{
     "Expand", " ", "so", " ", "that", " ", "each", " ", "term", " ", "may", 
      " ", "be", " ", "operated", " ", "on", "\n", "\t\t\t ", "Find", " ", 
      "the", " ", "constant", " ", "by", " ", "setting", " ", "any", " ", 
      SubscriptBox["e", "i"], "factors", " ", "to", " ", "zero", "\n", "\t", 
      RowBox[{"OUTPUT", ":", " ", 
       RowBox[{"The", " ", "constant", " ", "term", 
        RowBox[{"(", "s", ")"}], "of", " ", "clif"}]}]}]}], " ", "*)"}], "\n",
    "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"clif1", ",", "const"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"clif1", "=", 
       RowBox[{"Expand", "[", "clif", "]"}]}], ";", " ", "\n", "\t\t", 
      RowBox[{"const", "=", 
       RowBox[{"clif1", "/.", 
        RowBox[{
         SubscriptBox["e", "u_"], "\[Rule]", "0"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Constant", ",", " ", 
        RowBox[{
         RowBox[{
         "may", " ", "be", " ", "zero", " ", "or", " ", "consist", " ", "of", 
          " ", "one", " ", "or", " ", "more", " ", "non"}], "-", 
         RowBox[{"zero", " ", "terms"}]}]}], " ", "*)"}], "\n", "\t\t", "\n", 
      "\t\t", "const"}]}], "\n", "\t", "]"}]}], "\n", "\t", 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "ConstantG"}], "  ", "*)"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AtomCoefG", "[", 
    RowBox[{"clif_", ",", "atom_"}], "]"}], ":=", " ", 
   RowBox[{"(*", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"INPUTS", ":", "\n", "\t", "clif"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"multivector", ".", "  ", 
         RowBox[{"Example", ":", " ", 
          RowBox[{
           RowBox[{
            SubscriptBox["e", "1"], 
            SubscriptBox["e", "2"]}], " ", "+", " ", 
           RowBox[{"2", 
            SubscriptBox["e", "1"], 
            SubscriptBox["e", "2"], 
            SubscriptBox["e", "3"]}], " ", "+", " ", 
           RowBox[{"3", 
            SubscriptBox["e", "1"], 
            SubscriptBox["e", "2"], 
            SubscriptBox["e", "3"], 
            SubscriptBox["e", "4"], "\n", "\t", "atom"}]}]}]}]}], " ", "=", 
       " ", 
       RowBox[{"a", " ", "product", " ", "like", " ", 
        SubscriptBox["e", "2"], " ", "or", " ", 
        SubscriptBox["e", "3"], 
        SubscriptBox["e", "4"], " ", "or", " ", 
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "3"], 
        SubscriptBox["e", "4"], 
        SubscriptBox["e", "5"], " ", "or", " ", "else", " ", "the", " ", 
        "constant", " ", "1.", "  ", 
        RowBox[{"Example", ":", " ", 
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"], "\n", "PROCESS"}], ":", "\n", "\t", "list", 
         ":", " ", 
         RowBox[{"Convert", " ", "clif", " ", "to", " ", "a", " ", 
          RowBox[{"list", ".", "  ", 
           RowBox[{"Example", ":", " ", 
            RowBox[{
            "Using", " ", "the", " ", "example", " ", "clif", " ", 
             "above"}]}]}]}]}]}]}]}], ",", " ", 
     RowBox[{"list", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"]}], ",", " ", 
         RowBox[{"2", 
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"]}], ",", " ", 
         RowBox[{"3", 
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"], 
          SubscriptBox["e", "4"]}]}], "}"}], " ", "\n", "\t", 
       RowBox[{"atomList", ":", " ", 
        RowBox[{
        "Use", " ", "Cases", " ", "to", " ", "find", " ", "the", " ", 
         "sublist", " ", "of", " ", "members", " ", "containing", " ", "the", 
         " ", 
         RowBox[{"atom", ".", " ", "\n", "\t\t", 
          RowBox[{"Example", ":", " ", 
           RowBox[{
           "Using", " ", "the", " ", "exmaple", " ", "atom", " ", 
            "above"}]}]}]}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", 
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"]}], ",", " ", 
        RowBox[{"3", 
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["e", "4"]}]}], "}"}], "\n", "\t\t", 
      RowBox[{"Note", ":", " ", 
       RowBox[{"atom", " ", 
        RowBox[{"doesn", "'"}], "t", " ", "match", " ", "the", " ", "pattern",
         " ", "___", " ", "atom", " ", "so", " ", "that", " ", "case", " ", 
        "is", " ", "included", "\n", "\t", "atomExpr"}], ":", " ", 
       RowBox[{
       "Change", " ", "atomList", " ", "back", " ", "to", " ", "an", " ", 
        RowBox[{"expression", ".", "  ", "Example"}]}], ":", " ", 
       RowBox[{
        RowBox[{"2", 
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"]}], " ", "+", " ", 
        RowBox[{"3", 
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"], 
         SubscriptBox["e", "3"], 
         SubscriptBox["e", "4"], "\n", "\t", "atomCoeff"}]}], ":", " ", 
       "If"}]}], ",", " ", 
     RowBox[{"in", " ", "the", " ", "epxression"}], ",", " ", 
     RowBox[{
     "a", " ", "term", " ", "has", " ", "one", " ", "or", " ", "more", " ", 
      "additional", " ", 
      SubscriptBox["e", "i"], " ", "factors"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "set", " ", "those", " ", "terms", " ", "to", " ", "0", "\n", "\t\t", 
        RowBox[{"Example", ":", " ", 
         RowBox[{"3", 
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"], 
          SubscriptBox["e", "3"], 
          SubscriptBox["e", "4"]}]}]}], " ", "\[Rule]", " ", 
       RowBox[{"0", "  ", "leading", " ", "to", " ", "2", 
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"], 
        SubscriptBox["e", "3"], "\n", "\t\t", "Find", " ", "the", " ", "atom",
         " ", "coefficient", " ", "by", " ", "dividing", " ", "out", " ", 
        RowBox[{"atom", ".", "  ", 
         RowBox[{"Example", ":", " ", 
          RowBox[{"2", "\n", "OUTPUT"}], ":", "\n", "\t", "atomCoeff"}]}]}]}],
       " ", "=", " ", 
      RowBox[{"atom", " ", "coefficients"}]}], ",", " ", 
     RowBox[{"if", " ", "any"}], ",", " ", 
     RowBox[{
      RowBox[{
      "in", " ", "clif", "\n", "\t", "In", " ", "the", " ", "case", " ", 
       "atom"}], " ", "=", " ", "1"}], ",", " ", 
     RowBox[{
     "atomCoeff", " ", "is", " ", "just", " ", "the", " ", "constant", " ", 
      "term", " ", "of", " ", "clif"}]}], "  ", "*)"}], "\n", "\t", "\n", 
   "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"list", ",", "atomList", ",", "atomCoeff"}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"atomList", "=", 
       RowBox[{"CollectG", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{"list", ",", "atom"}], "]"}], ",", 
           RowBox[{"Cases", "[", 
            RowBox[{"list", ",", 
             RowBox[{"___", " ", "atom"}]}], "]"}]}], "]"}], "/.", 
         RowBox[{"List", "\[Rule]", "Plus"}]}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"atomCoeff", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"atomList", "/.", 
          RowBox[{
           RowBox[{
            SubscriptBox["e", "u_"], "atom"}], "\[Rule]", "0"}]}], ")"}], "/",
         "atom"}]}], ";", "\n", "\t\t", "atomCoeff"}]}], "\n", "\t", "]"}]}], 
  "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "AtomCoefG"}], "  ", "*)"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpandG", "[", "clifInput_", "]"}], ":=", 
   RowBox[{"Expand", "[", 
    RowBox[{"InitializeG", "[", "clifInput", "]"}], "]"}]}], "  ", 
  RowBox[{"(*", "\n", 
   RowBox[{"Same", " ", "as", " ", 
    RowBox[{"Mathematica", "'"}], "s", " ", "Expand", " ", "function", " ", 
    RowBox[{"except", ":", "\n", "\t", 
     RowBox[{
     "Multivector", " ", "is", " ", "modified", " ", "first", " ", 
      "according", " ", "to", " ", 
      RowBox[{"user", "'"}], "s", " ", "initialization", " ", "rules", " ", 
      "shown", " ", "in", " ", "Palette"}]}]}], "  ", "*)"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FreeTermG", "[", "0", "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FreeTermG", "[", "clif_", "]"}], ":=", " ", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{"INPUT", ":", " ", 
     RowBox[{"A", " ", "clif", "\n", "\t", "PROCESS"}], ":", " ", "\n", 
     "\t\t", 
     RowBox[{
     "Expand", " ", "the", " ", "clif", " ", "so", " ", "that", " ", 
      "individual", " ", "terms", " ", "may", " ", "be", " ", "handled", " ", 
      "individually", "\n", "\t\t", "Get", " ", "the", " ", "contstant", " ", 
      "term", 
      RowBox[{"(", "s", ")"}], " ", "and", " ", "subtract", " ", "them", " ", 
      "from", " ", "the", " ", "clif", "\n", "\t", 
      RowBox[{"OUTPUT", ":", " ", "clifFree"}]}]}], "\n", "*)"}], "\n", "\t", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"clif1", ",", "conTerm", ",", "clifFree"}], "}"}], ",", "\n", 
     "\t\t\t", 
     RowBox[{
      RowBox[{"clif1", "=", 
       RowBox[{"Expand", "[", "clif", "]"}]}], ";", "\n", "\t\t\t", 
      RowBox[{"conTerm", "=", 
       RowBox[{"ConstantG", "[", "clif1", "]"}]}], ";", "\n", "\t\t\t", 
      RowBox[{"clifFree", "=", 
       RowBox[{"clif1", "-", "conTerm"}]}], ";", "\n", "\n", "\t", 
      "clifFree"}]}], "\n", "]"}]}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "FreeTermG"}], "  ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pSliceG", "[", "0", "]"}], ":=", 
   RowBox[{"{", "0", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pSliceG", "[", 
    RowBox[{"0", ",", "p_"}], "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pSliceG", "[", 
    RowBox[{"clif_", ",", "p_"}], "]"}], ":=", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"User", "'"}], "s", " ", "Clif", " ", "is", " ", 
          SubscriptBox["c", "0"]}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["c", "1"], " ", 
          SubscriptBox["e", "1"]}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["c", 
           RowBox[{"1", ",", "2"}]], " ", 
          SubscriptBox["e", "1"], 
          SubscriptBox["e", "2"]}], " ", "+"}], " ", "..."}], "  ", "\n", 
       RowBox[{"INPUTS", ":", "\n", "\t", "clif"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"a", " ", "Clif", "\n", "\t", "p"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
        "grade", " ", "of", " ", "terms", " ", "we", " ", "wish", " ", "to", 
         " ", "select", "\n", "\n", 
         RowBox[{"PROCESS", ":", "\n", "\t", 
          RowBox[{
          "This", " ", "function", " ", "finds", " ", "terms", " ", "in", " ",
            "clif", " ", "of", " ", "grade", " ", "p", "\n", "\t", "Call", 
           " ", "other", " ", "functions", " ", "to", " ", "generate4", " ", 
           "2", " ", "arrays"}], ":", "\n", "\t\t", "cliflist"}]}], " ", "=", 
        " ", 
        RowBox[{
        "list", " ", "of", " ", "terms", " ", "in", " ", "clif"}]}]}]}], ",", 
     " ", 
     RowBox[{
      RowBox[{
      "with", " ", "all", " ", "constants", " ", "grouped", " ", "into", " ", 
       "term", " ", "1", "\n", "\t\t", "gradesClif"}], " ", "=", " ", 
      RowBox[{
      "list", " ", "of", " ", "grades", " ", "of", " ", "terms", " ", "in", 
       " ", "cliflist", "\n", "\t", "From", " ", "gradesClif"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"create", " ", "an", " ", "array", " ", "with", " ", 
        RowBox[{"1", "'"}], "s", " ", "for", " ", "all", " ", "grade", " ", 
        "p", " ", "terms", " ", "and", " ", 
        RowBox[{"0", "'"}], "s", " ", "otherwise", "\n", "\t", "Then", " ", 
        "simiply", " ", "dot", " ", "multiply", " ", "this", " ", "array", 
        " ", "with", " ", "the", " ", "list", " ", "of", " ", "terms", " ", 
        "from", " ", "clif", "\n", "\n", "\t", "Note", " ", "1"}], ":", " ", 
       "p"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
        "0", " ", "requires", " ", "special", " ", "treatment", " ", "since", 
         " ", "we", " ", "are", " ", "setting", " ", "non"}], "-", 
        RowBox[{
        "grade", " ", "p", " ", "terms", " ", "to", " ", "0", "\n", "\t\t", 
         "\n", "\t", "Note", " ", "1"}]}], ":", " ", 
       RowBox[{
       "The", " ", "constant", " ", "term", " ", "have", " ", "been", " ", 
        "rounded", " ", "up", " ", "into", " ", "term", " ", "1"}]}]}], ",", 
     " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "and", " ", "due", " ", "to", " ", "Note", " ", "1", "  ", "\n", 
        "\t\t", "the", " ", "grade", " ", "has", " ", "been", " ", "changed", 
        " ", "from", " ", "0", " ", "to"}], " ", "-", 
       RowBox[{"1", "\n", "\n", 
        RowBox[{"OUTPUT", ":", "\n", "\t", "pSlice"}]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
       "clif", " ", "composed", " ", "of", " ", "just", " ", "the", " ", 
        "grade"}], "-", 
       RowBox[{"p", " ", "terms"}]}]}], ",", " ", 
     RowBox[{"if", " ", "any"}]}], "\n", "*)"}], "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clifList", ",", "gradesClif", ",", "gradeParray", ",", "pSlice"}], 
      "}"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"debug4", ",", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Clif being examined = \>\"", ",", 
           RowBox[{"Expand", "[", "clif", "]"}], ",", 
           "\"\<   (pSliceG)\>\""}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Grade being investigated = \>\"", ",", "p"}], 
          "]"}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"gradesClif", "=", 
       RowBox[{
        RowBox[{"GradeListG", "[", "clif", "]"}], "/.", 
        RowBox[{
         RowBox[{"x_", "/;", 
          RowBox[{"x", "\[Equal]", "0"}]}], "\[Rule]", 
         RowBox[{"-", "1"}]}]}]}], ";", "\n", "\t\t", 
      RowBox[{"(*", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Get", " ", "list", " ", "of", " ", "grades", " ", "of", " ", 
          "terms", " ", "\n", "\t\t\t", "A", " ", "grade", " ", "of", " ", 
          "zero", " ", "corresponds", " ", "to", " ", "a", " ", "non"}], "-", 
         
         RowBox[{
         "zero", " ", "constant", " ", "term", " ", "as", " ", "first", " ", 
          "term", " ", "in", " ", "list", "\n", "\t\t\t", "If", " ", "1", 
          "st", " ", "term", " ", "has", " ", "grade", " ", "0"}]}], ",", " ", 
        RowBox[{
         RowBox[{"change", " ", "it", " ", "to"}], " ", "-", 
         RowBox[{
         "1", " ", "so", " ", "as", " ", "not", " ", "to", " ", "interfere", 
          " ", "with", " ", "\n", "\t\t\t\t", "two", " ", "statements", " ", 
          "below", " ", "after", " ", "\"\<Else\>\""}]}]}], "  ", "*)"}], 
      "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"gradeParray", "=", 
          RowBox[{"gradesClif", "/.", 
           RowBox[{
            RowBox[{"x_", "/;", 
             RowBox[{"x", "\[NotEqual]", "p"}]}], "\[RuleDelayed]", "0"}]}]}],
          ";", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"For", " ", "p"}], ">", "0"}], ",", " ", 
           RowBox[{
            RowBox[{"set", " ", "non"}], "-", 
            RowBox[{
            "grade", " ", "p", " ", "terms", " ", "to", " ", "0"}]}]}], " ", 
          "*)"}], "\n", "\t\t", 
         RowBox[{"gradeParray", "=", 
          RowBox[{"gradeParray", "/", "p"}]}]}], " ", ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "and", " ", "divide", " ", "the", " ", "grade", " ", "p", " ", 
          "term", " ", "by", " ", "p", " ", "to", " ", "get", " ", "1"}], " ",
          "*)"}], "\n", "\t", 
        RowBox[{"(*", " ", "Else", " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"gradeParray", "=", 
          RowBox[{"gradesClif", "/.", 
           RowBox[{
            RowBox[{"x_", "/;", 
             RowBox[{"x", "\[NotEqual]", 
              RowBox[{"-", "1"}]}]}], "\[RuleDelayed]", "0"}]}]}], ";", "  ", 
         
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"For", " ", "p"}], "=", "0"}], ",", " ", 
           RowBox[{
            RowBox[{"set", " ", "non"}], "-", 
            RowBox[{"constants", " ", "to", " ", "0"}]}]}], " ", "*)"}], "\n",
          "\t\t", 
         RowBox[{"gradeParray", "=", 
          RowBox[{"-", "gradeParray"}]}]}]}], "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "and", " ", "change", " ", "the", " ", "constant", " ", "term", " ", 
          "from"}], " ", "-", 
         RowBox[{"1", " ", "to"}], " ", "+", "1"}], "  ", "*)"}], "\n", "\t", 
       "]"}], ";", "\n", "\n", "\t", 
      RowBox[{"clifList", "=", 
       RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"pSlice", "=", 
       RowBox[{"gradeParray", ".", "clifList"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug4", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<List of grades of \>\"", ",", "clif", ",", "\n", "\t\t\t\t", 
           "\"\< with constant (if any) set to -1: \>\"", ",", "gradesClif"}],
           "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Array, with 1's at grade \>\"", ",", "p", ",", 
           "\"\< position(s) (if any) = \>\"", ",", "gradeParray"}], "]"}], 
         ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<List of any grade \>\"", ",", "p", ",", "\"\< terms: \>\"", 
           ",", "pSlice", ",", "\"\<.  If grade > 0, 1st term\>\"", ",", "\n",
            "\t\t", 
           "\"\< is 0. List is product of array with 1's and 0's with list of \
the clif terms.\>\""}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Clif term(s) of grade \>\"", ",", "p", ",", "\"\< = \>\"", ",",
            "pSlice"}], "]"}]}]}], "\n", "\t", "]"}], ";", "\n", "\n", "\t", 
      "pSlice"}]}], "\n", "\t", "]"}]}], "    ", 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "pSliceG", " ", "Module"}], "  ", "*)"}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InitializeG", "[", "clifInput_", "]"}], ":=", "    ", "\n", " ", 
   RowBox[{"(*", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"INPUT", ":", "\n", "\t", "clifInput"}], " ", "=", " ", 
      RowBox[{"A", " ", "multivector", "\n", "\n", 
       RowBox[{"PROCESS", ":", "\n", "\t", 
        RowBox[{
        "Internal", " ", "function", " ", "called", " ", "only", " ", "by", 
         " ", "ExpandG"}]}]}]}], ",", " ", 
     RowBox[{
     "which", " ", "in", " ", "turn", " ", "is", " ", "called", " ", "by", 
      " ", "CollectG", "\n", "\t", "Modifies", " ", "multivector", " ", 
      "clifInput", " ", "according", " ", "to", " ", 
      RowBox[{"user", "'"}], "s", " ", "initialization", " ", "rules", " ", 
      "for", " ", "terms", " ", 
      SuperscriptBox[
       SubscriptBox["e", "i"], "2"]}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
      "set", " ", "up", " ", "either", " ", "in", " ", "Palette", " ", "or", 
       " ", "manually", "  ", "\n", "\t", 
       RowBox[{"algebraType", ":", " ", "1"}]}], " ", "=", " ", 
      RowBox[{"Clifford", " ", "algebra"}]}], ",", "  ", 
     RowBox[{"2", " ", "=", " ", 
      RowBox[{
       RowBox[{"Grassmann", " ", 
        RowBox[{"(", 
         RowBox[{"aka", " ", "Exterior"}], ")"}], " ", "algebra", "\n", "\t", 
        
        RowBox[{"signatureType", ":", " ", "1"}]}], " ", "=", " ", 
       RowBox[{"Mathematicians", " ", "-", " ", 
        RowBox[{"+", " ", 
         RowBox[{"+", " ", "+"}]}]}]}]}], " ", ",", "  ", 
     RowBox[{
      RowBox[{"-", "1"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"Physicists", " ", "+", " ", 
        RowBox[{"-", " ", 
         RowBox[{"-", " ", 
          RowBox[{"-", " ", "\n", "\t", "numTimelike"}]}]}]}], " ", "=", " ", 
       
       RowBox[{
        RowBox[{"Number", " ", "of", " ", "timelike", " ", 
         RowBox[{"dimensions", ".", " ", "\n", "\t\t", "0"}]}], " ", "=", " ", 
        RowBox[{
         RowBox[{"Pure", " ", "Space", "   ", "1"}], " ", "=", " ", 
         RowBox[{
         "Spacetime", "   ", "2", " ", "or", " ", "more", " ", "time", " ", 
          "dimensions", " ", "are", " ", "allowed"}]}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "time", " ", "always", " ", "using", "\n", "\t\t", "the", " ", 
        "lowest", " ", "ubscripts", "\n", "\n", 
        RowBox[{"OUTPUT", ":", "  ", "clifOutput"}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{"Multivector", " ", "with", " ", "any", " ", "square", " ", 
         SubscriptBox["e", "i"], " ", "terms", " ", 
         RowBox[{"reduced", ":"}]}], "\n", "\t\t\t\t\t", "=", " ", 
        RowBox[{"0", " ", "if", " ", "Grassmann", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"i", ".", "e", "."}], ",", " ", "Exterior"}], ")"}], " ", 
         "algebra"}]}]}], ";", "\n", "\t\t\t   ", 
      RowBox[{"else", " ", "=", " ", 
       RowBox[{
        RowBox[{"signatureType", " ", "if", " ", "u"}], " ", "\[LessEqual]", 
        " ", "numTimelike"}]}], ";", " ", "\n", "\t\t\t   ", 
      RowBox[{"else", " ", "=", " ", 
       RowBox[{"signatureType", "\n", "\t\t\t   ", "\n", "CONTEXT", " ", 
        RowBox[{"SHADOWING", ":", "\n", "\t", 
         RowBox[{
         "The", " ", "context", " ", "of", " ", "this", " ", "package", " ", 
          "is", " ", "GeomAlgPkg`", " ", "or", " ", "whatever", " ", "is", 
          " ", "in", " ", "BeginPackage"}]}]}]}]}], ",", " ", 
     RowBox[{
     "above", "\n", "\t", "If", " ", "user", " ", "calls", " ", "this", " ", 
      "package", " ", "from", " ", "his", " ", "environment", " ", "having", 
      " ", "a", " ", "diffenet", " ", "context"}], ",", " ", 
     RowBox[{"say", " ", "ContextUser`"}], ",", " ", "\n", "\t\t", 
     RowBox[{
      RowBox[{"then", " ", "e"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
       "GeomAlgPkg`Private`e", " ", "but", " ", "we", " ", "need", " ", "e"}],
        " ", "=", " ", 
       RowBox[{
        RowBox[{"ContextUser`e", " ", "in", " ", "order", " ", "for"}], " ", "/.", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["e", "u_"], "2"], "\[Rule]", 
         RowBox[{
         "1", " ", "to", " ", "work", "\n", "\t", "The", " ", "user", " ", 
          "only", " ", "enters", " ", "clif1", " ", 
          RowBox[{"(", 
           RowBox[{"and", " ", "possibly", " ", "clif2"}], ")"}]}]}]}]}]}], 
     ",", " ", 
     RowBox[{
      RowBox[{"leading", " ", "here", " ", "to", " ", 
       RowBox[{"clifInput", ".", " ", "He"}], " ", "does", " ", "not", " ", 
       "input", " ", "\n", "\t\t", "either", " ", "e", " ", "or", " ", "his", 
       " ", 
       RowBox[{"context", ".", "\n", "\t", "Here"}], " ", "is", " ", "how", 
       " ", "we", " ", "find", " ", 
       RowBox[{"both", ":", " ", "\n", "\t\t", 
        RowBox[{"Suppose", " ", "clifInput"}]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"1", " ", "+", " ", 
        RowBox[{"2", 
         SubscriptBox["e", 
          RowBox[{"1", " "}]]}], "+", " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["e", "1"], "2"], 
         SubscriptBox["e", "2"], "\n", "\t\t", "leaves"}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{"Level", "[", 
         RowBox[{"clifInput", ",", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}]}], "]"}], " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "e", ",", "1", ",", "e", ",", "1", ",", "2", ",",
           "e", ",", "2"}], "}"}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"the", " ", "leaves", " ", 
       RowBox[{"(", 
        RowBox[{"or", " ", "atomic", " ", "elements"}], ")"}], " ", "of", " ",
        "clifInput", "\n", "\t\t\t", "Note", " ", "1"}], ":", " ", 
      RowBox[{
      "The", " ", "leaves", " ", "list", " ", "memebers", " ", "have", " ", 
       "context", " ", "ContextUser`"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"what", " ", "we", " ", "are", " ", 
        RowBox[{"after", ".", "\n", "\t\t\t", "Note"}], " ", "2"}], ":", " ", 
       
       RowBox[{
       "The", " ", "symbol", " ", "\"\<leaves\>\"", " ", "does", " ", 
        RowBox[{"not", ".", " ", "It"}], " ", "has", " ", "context", " ", 
        RowBox[{"GeomAlgPkg`Private`", ".", "\n", "\t\t", "symbols1"}]}]}], 
      " ", "=", " ", 
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{"leaves", ",", "_Symbol"}], "]"}], " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"e", ",", "e", ",", "e"}], "}"}]}]}], ",", " ", 
     RowBox[{"lists", " ", "the", " ", "symbols"}], ",", " ", 
     RowBox[{"if", " ", "any"}], ",", " ", 
     RowBox[{
      RowBox[{"among", " ", "the", " ", "leaves", "\n", "\t\t", "symbols2"}], 
      " ", "=", " ", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"symbols1", ",", "e"}], "]"}], "\t ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"e", ",", "e", ",", "e", ",", "e"}], "}"}], " ", "appends", 
        " ", "an", " ", "e", " ", "to", " ", "the", " ", "end", "\n", 
        "\t\t\t", "The", " ", "appended", " ", "e", " ", "has", " ", 
        "context", " ", "GeomAlgPkg`Private`"}]}]}], ",", " ", 
     RowBox[{
     "which", " ", "is", " ", "NOT", " ", "what", " ", "we", " ", "want", 
      "\n", "\t\t\t", "However"}], ",", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "appended", " ", "e", " ", "will", " ", "only", " ", "be", 
       " ", "chosen", " ", "if", " ", "symbols1", " ", "is", " ", "an", " ", 
       "empty", " ", "list"}], ";", " ", 
      RowBox[{"that", " ", "is"}]}], ",", " ", 
     RowBox[{"clifInput", " ", "\n", "\t\t\t", "has", " ", "no", " ", 
      SubscriptBox["e", "i"], "terms", "\n", "\t\t\t\t", "If", " ", "ithere", 
      " ", "are", " ", "no", " ", 
      SubscriptBox["e", "i"], " ", "terms"}], ",", " ", 
     RowBox[{
      RowBox[{"then", " ", 
       SuperscriptBox[
        SubscriptBox["e", "i"], "2"]}], "\[Rule]", 
      RowBox[{"1", " ", 
       RowBox[{"doesn", "'"}], "t", " ", "do", " ", "anything"}]}], ",", " ", 
     
     RowBox[{"so", " ", "no", " ", "harm", " ", "occurs"}], ",", " ", 
     RowBox[{
      RowBox[{
      "but", " ", "\n", "\t\t\t\t", "also", " ", "no", " ", "warning", " ", 
       "message", " ", "occurs", " ", "due", " ", "to", " ", "operating", " ",
        "on", " ", "an", " ", "empty", " ", "symbols1", " ", 
       RowBox[{"list", ".", "\n", "\t\t", "symbolA"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"First", "[", "symbol2", "]"}], " ", "=", " ", 
       RowBox[{"e", "\n", "\t\t\t", 
        RowBox[{"Note", ":", " ", 
         RowBox[{
         "As", " ", "in", " ", "Notes", " ", "1", " ", "and", " ", 
          "2"}]}]}]}]}], ",", " ", "above", ",", " ", 
     RowBox[{
      RowBox[{
      "e", " ", "has", " ", "the", " ", "context", " ", "we", " ", "want"}], 
      ";", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"symbolA", " ", "does", " ", 
         RowBox[{"not", ".", "\n", "\t\t\t\t  ", "But"}]}], "..."}], " ", 
       "the", " ", "rhs", " ", "e", " ", "is", " ", "not", " ", "available", 
       " ", "for", " ", "processing"}], ";", " ", 
      RowBox[{
       RowBox[{
       "we", " ", "only", " ", "have", " ", "access", " ", "to", " ", "lhs", 
        " ", "symbolA", "\n", "\t\t", "e"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"Evaluate", "[", "symbolA", "]"}], "\n", "\t\t\t", "e", " ", 
        "is", " ", "rhs", " ", "e", " ", 
        RowBox[{"(", 
         RowBox[{"of", " ", "symbolA"}], ")"}], " ", "and", " ", "has", " ", 
        "the", " ", 
        RowBox[{"user", "'"}], "s", " ", "context"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "one", " ", "we", " ", "want", "\n", "\t\t", 
       "contextUser"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"Context", "[", "symbolUser", "]"}], " ", "is", " ", "the", 
       " ", 
       RowBox[{"user", "'"}], "s", " ", "context", " ", "in", " ", "list", 
       " ", "form", "\n", "\t\t", "Since", " ", "contextUser", " ", "is", " ",
        "a", " ", "list"}]}], ",", " ", 
     RowBox[{"eList", " ", "=", " ", 
      RowBox[{
       RowBox[{"contextUser", "<>", "\"\<e\>\""}], " ", "is", " ", "a", " ", 
       "list", " ", "containing", " ", 
       RowBox[{"user", "'"}], "s", " ", "e"}]}], ",", " ", 
     RowBox[{
      RowBox[{"and", "\n", "\t\t", 
       RowBox[{"ToExpression", "[", "eList", "]"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"e", " ", "in", " ", 
        RowBox[{"user", "'"}], "s", " ", "context", "\n", "\t\t", "\n", "\t", 
        "The", " ", "3", " ", "init", " ", "symbols", " ", 
        RowBox[{"(", 
         RowBox[{"algebraType", ",", " ", "signatureType", ",", " ", 
          RowBox[{"and", " ", "numTimelike"}]}], ")"}], " ", "similarly", " ",
         "will", " ", "have", " ", "GeomAlgPkg`private`", " ", "\n", "\t\t", 
        "context", " ", "the", " ", "first", " ", "time", " ", "InitializeG", 
        " ", "is", " ", "called", " ", "within", " ", "a", " ", 
        RowBox[{"session", ".", " ", "In"}], " ", "that", " ", "case", " ", 
        "the", " ", "first", " ", "\"\<Head\>\"", "\n", "\t\t", "if"}], "-", 
       RowBox[{
       "test", " ", "will", " ", "be", " ", "true", " ", "and", " ", "the", 
        " ", "ccontext", " ", "shadow", " ", "is", " ", "set", " ", "not", 
        " ", "only", " ", "for", " ", "e", " ", "but", " ", "for", " ", "the",
         " ", "init", " ", "symbols"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"also", ".", "\n", "\t", "The"}], " ", "user", " ", "may", " ", 
      "or", " ", "may", " ", "not", " ", "have", " ", "previously", " ", 
      "used", " ", "the", " ", "palette", " ", "to", " ", "set", " ", "the", 
      " ", "init", " ", 
      RowBox[{"symbols", ".", " ", "If"}], " ", "he", " ", 
      RowBox[{"hasn", "'"}], "t"}], ",", " ", 
     RowBox[{
      RowBox[{
      "then", "\n", "\t\t", "the", " ", "2", "nd", " ", "\"\<Head\>\"", " ", 
       "if"}], "-", 
      RowBox[{
      "test", " ", "will", " ", "be", " ", "true", " ", "and", " ", "default",
        " ", "values", " ", "are", " ", 
       RowBox[{"set", ".", "\n", "\t", "In"}], " ", "subsequent", " ", 
       "calls", " ", "of", " ", "InitializeG", " ", "these", " ", "if"}], "-", 
      RowBox[{
      "tests", " ", "will", " ", "be", " ", "false", " ", "and", " ", "so", 
       " ", "redundant", " ", "shadow", " ", "\n", "\t\t", "correcting", " ", 
       "will", " ", "not", " ", 
       RowBox[{"occur", ".", "\n", "\t", "Finally"}]}]}], ",", " ", 
     RowBox[{
     "we", " ", "need", " ", "e", " ", "and", " ", "contextUser", " ", "to", 
      " ", "be", " ", "global", " ", "within", " ", "context", " ", 
      "GeomPkg`Private`so", " ", "they", " ", "can", " ", "be", " ", "used", 
      " ", "\n", "\t\t", "repeatedly", " ", "duricng", " ", "a", " ", 
      "session", " ", "\n", "\t", "We", " ", "need", " ", "the", " ", "3", 
      " ", "init", " ", "symbols", " ", "to", " ", "be", " ", "global", " ", 
      "and", " ", "available", " ", "to", " ", "the", " ", 
      RowBox[{"user", "'"}], "s", " ", "context", " ", "because", " ", "the", 
      " ", "palette", "\n", "\t\t", "settings", " ", "are", " ", "dynamic", 
      " ", "and", " ", "will", " ", "change", " ", "or", " ", "be", " ", 
      "changed", " ", "in", " ", "sync", " ", "with", " ", "the", " ", "init",
       " ", "symbols", " ", "here"}]}], "\n", "*)"}], "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "algebraType", ",", "signatureType", ",", "numTimelike", ",", 
       "clifOutput"}], "}"}], ",", "\n", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "signatureType", "]"}], "\[Equal]", "Symbol"}], 
        ",", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"If", " ", "true"}], ",", " ", 
          RowBox[{
          "this", " ", "signatureType", " ", "symbol", " ", "has", " ", 
           "GeomAlgPkg", " ", "context"}]}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"algebraType", "=", "Global`algebraType"}], ";", "\n", 
         "\t\t", 
         RowBox[{"signatureType", "=", "Global`signatureType"}], ";", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Change", " ", "context", " ", "to", " ", "Global`", " ", "for", 
           " ", "init", " ", "symbols"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"numTimelike", "=", "Global`numTimelike"}]}]}], "\n", "\t", 
       "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "signatureType", "]"}], "\[Equal]", "Symbol"}], 
        ",", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"If", " ", "true"}], ",", " ", 
          RowBox[{
          "then", " ", "Global`", " ", "signatureType", " ", "has", " ", 
           "not", " ", "yet", " ", "been", " ", "set"}]}], " ", "*)"}], "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"InitializeG", "::", "warning"}], "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"Global`algebraType", "=", "1"}], ";", "  ", "\n", "\t\t\t", 
         
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
            "\"\<Evaluate\>\"", " ", "causes", " ", "Global`algebraType"}], 
            " ", "=", " ", "2"}], ";", " ", 
           RowBox[{
            RowBox[{
            "else", " ", "would", " ", "set", " ", "GeomAlgPkg`algebraType"}],
             " ", "=", " ", "2"}]}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"Global`signatureType", "=", "1"}], ";", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Set", " ", "values", " ", "for", " ", "init", " ", "variables"}], 
          " ", "*)"}], "\n", "\t\t", 
         RowBox[{"Global`numTimelike", "=", "0"}]}]}], "\t", "\n", "\t", 
       "]"}], ";", " ", "\n", "\n", "\t", 
      RowBox[{"clifOutput", "=", 
       RowBox[{"clifInput", "/.", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubsuperscriptBox["e", "u_", "2"], "/;", 
            RowBox[{"algebraType", "\[Equal]", "2"}]}], ":>", "0"}], ",", 
          RowBox[{
           RowBox[{
            SubsuperscriptBox["e", "u_", "2"], "/;", 
            RowBox[{"u", "\[LessEqual]", "numTimelike"}]}], ":>", 
           RowBox[{"-", "signatureType"}]}], ",", 
          RowBox[{
           SubsuperscriptBox["e", "u_", "2"], ":>", "signatureType"}]}], 
         "}"}]}]}], ";", "\n", "\t\t", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug1", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<InitializeG: algebraType = \>\"", ",", "algebraType", ",", 
           "\"\<, signatureType = \>\"", ",", "\n", "\t\t\t", "signatureType",
            ",", "\"\<, and numTimelike = \>\"", ",", "numTimelike"}], "]"}], 
         ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Context of e: \>\"", ",", 
           RowBox[{"Context", "[", "e", "]"}]}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Clif Input = \>\"", ",", "clifInput", ",", 
           "\"\<, and Clif Ouput = \>\"", ",", "clifOutput"}], "]"}]}]}], 
       "\n", "\t", "]"}], ";", "\n", "\t", "clifOutput"}]}], "\n", "]"}]}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "InitializeG", " ", "function"}], "   ", 
   "*)"}], "\t\t\t\t\t\t", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"ShadowSymbol", "[", "symbol_", "]"}], ":=", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"contextUser", "<>", 
      RowBox[{"ToString", "[", "symbol", "]"}]}], "]"}]}], " ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"MaxDimG", "[", "clif_", "]"}], ":=", "    ", 
  RowBox[{"(*", " ", "\n", "\t", 
   RowBox[{
    RowBox[{"INPUT", ":", " ", "clif"}], " ", "\[Dash]", " ", 
    RowBox[{
     RowBox[{"A", " ", "users", " ", 
      RowBox[{"clif", ".", " ", "Coefficients"}], " ", "can", " ", "be", " ", 
      "either", " ", "values", " ", "or", " ", "symbols", "\n", "\t", 
      RowBox[{"PROCESS", ":", " ", 
       RowBox[{
       "Flatten", " ", "the", " ", "subscript", " ", "list", " ", "and", " ", 
        "find", " ", "the", " ", "maximum", "\n", "\t", "OUTPUT"}], ":", " ", 
       "maxDim"}]}], " ", "=", " ", 
     RowBox[{
     "largest", " ", "subscript", " ", "value", " ", "on", " ", "any", " ", 
      RowBox[{
       SubscriptBox["e", "i"], ".", " ", "Used"}], " ", "when", " ", 
      "collecting", " ", "terms", " ", "in", " ", "clif", " ", "output"}]}]}],
    "  ", "*)"}], "\n", "\t", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"flatSubscriptList", ",", "maxDim"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"flatSubscriptList", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"SubscriptListG", "[", "clif", "]"}], "]"}]}], ";", " ", "\n", 
     "\t\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Want", " ", "maxDim"}], " ", "\[GreaterEqual]", " ", 
        RowBox[{"1.", " ", "Thus"}]}], ",", 
       RowBox[{
        RowBox[{
        "c", " ", "use", " ", "clif", " ", "rather", " ", "than", " ", 
         "clif"}], " ", "-", " ", "const"}]}], "  ", "*)"}], "\n", "\t\t", 
     RowBox[{"maxDim", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Max", "[", "flatSubscriptList", "]"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Extra", " ", "max", " ", "takes", " ", "care", " ", "of", " ", 
        "clif"}], " ", "=", " ", "0"}], " ", "*)"}], "\n", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"debug2", ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Print", "[", "]"}], ";", "\n", "\t\t\t", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<MaxDim: Flattened list of subscripts = flatSubscriptList = \
\>\"", ",", "\n", "\t\t\t\t", "flatSubscriptList"}], "]"}], ";", "\n", 
        "\t\t\t", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Max dim = largest subscript = \>\"", ",", "maxDim"}], 
         "]"}]}]}], "\n", "\t\t", "]"}], ";", "\n", "\t", "maxDim"}]}], "\n", 
   "\t", "]"}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "MaxDimG", " ", "Module"}], "\t", 
   "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691073072029634*^9, 3.691073593702551*^9, 
   3.691073646277369*^9, 3.691073715183025*^9, 3.691073841869029*^9, 
   3.691073879917136*^9, {3.6910742437762337`*^9, 3.691074246906845*^9}, 
   3.691074290856971*^9, {3.69107437586687*^9, 3.691074402029483*^9}, {
   3.691086119521948*^9, 3.6910861791913633`*^9}, {3.691087874687943*^9, 
   3.6910878857564077`*^9}, {3.691106026077119*^9, 3.6911060448791103`*^9}, {
   3.691106126194209*^9, 3.691106167168133*^9}, {3.69110725558745*^9, 
   3.691107257249641*^9}, {3.691107328838606*^9, 3.691107366853805*^9}, {
   3.691107406148611*^9, 3.691107551656928*^9}, {3.6911076492996187`*^9, 
   3.6911076538262177`*^9}, {3.691108305707941*^9, 3.6911083336409807`*^9}, {
   3.691108384830194*^9, 3.691108384844342*^9}, 3.69110855844882*^9, {
   3.691162434128428*^9, 3.6911624376145887`*^9}, {3.691165259193399*^9, 
   3.69116531333857*^9}, {3.691170784687316*^9, 3.691170784705866*^9}, {
   3.6911844920771093`*^9, 3.691184506083955*^9}, {3.691184543087542*^9, 
   3.691184869867704*^9}, {3.691184901517408*^9, 3.691184982453807*^9}, {
   3.691185016936391*^9, 3.691185018542036*^9}, {3.691187000586645*^9, 
   3.691187097367346*^9}, 3.691187352826626*^9, 3.691189678442358*^9, {
   3.69118972529593*^9, 3.691189745896708*^9}, 3.6911899567312717`*^9, 
   3.6911905329056892`*^9, {3.6911909041481037`*^9, 3.6911909272743473`*^9}, {
   3.6911915032907*^9, 3.691191514376099*^9}, {3.691191655459311*^9, 
   3.691191660905697*^9}, {3.691192459676022*^9, 3.691192461521668*^9}, 
   3.6911926671532173`*^9, {3.691192732171939*^9, 3.6911927619791183`*^9}, {
   3.691192797616927*^9, 3.69119281008963*^9}, {3.691193993454647*^9, 
   3.69119401237532*^9}, {3.6912387141105213`*^9, 3.6912387504485483`*^9}, 
   3.691238817725787*^9, {3.6913466447964983`*^9, 3.6913466976751204`*^9}, 
   3.691346768195716*^9, {3.69134943074549*^9, 3.6913494761669807`*^9}, {
   3.691619122347864*^9, 3.691619123545745*^9}, {3.6916191651113777`*^9, 
   3.69161918110955*^9}, {3.691619213035741*^9, 3.6916192220318003`*^9}, {
   3.691619265847233*^9, 3.6916193631557093`*^9}, {3.691619426715089*^9, 
   3.691619582194633*^9}, {3.691619614032544*^9, 3.6916197616711206`*^9}, {
   3.6916198074684134`*^9, 3.691619910760448*^9}, {3.6916200039828*^9, 
   3.691620018617032*^9}, {3.691620209983103*^9, 3.691620355010838*^9}, {
   3.691620387511203*^9, 3.691620638439378*^9}, {3.691620679537183*^9, 
   3.691620698796571*^9}, {3.691620751729542*^9, 3.6916208157827*^9}, {
   3.691620866223737*^9, 3.691620961955102*^9}, {3.691621031004074*^9, 
   3.6916211140792437`*^9}, {3.691621202688745*^9, 3.691621258473289*^9}, {
   3.6916213222679033`*^9, 3.6916214153633833`*^9}, {3.6916214685384502`*^9, 
   3.69162206075952*^9}, {3.691622147402643*^9, 3.69162224402709*^9}, {
   3.691622274629278*^9, 3.691622388117031*^9}, {3.691622430160095*^9, 
   3.691622500040366*^9}, {3.691622530180078*^9, 3.69162263394518*^9}, {
   3.69162272884077*^9, 3.691623095917878*^9}, {3.691623158182355*^9, 
   3.691623341919158*^9}, {3.691623391454083*^9, 3.6916233933419228`*^9}, {
   3.691690720130065*^9, 3.6916907410515213`*^9}, {3.691690784824985*^9, 
   3.691690833517528*^9}, {3.691690865299103*^9, 3.691690866868834*^9}, {
   3.6916909723980722`*^9, 3.6916910597160883`*^9}, {3.69169110430298*^9, 
   3.6916911645396442`*^9}, {3.691691199216717*^9, 3.691691265862844*^9}, {
   3.69169129756851*^9, 3.6916913005183907`*^9}, {3.691691341540779*^9, 
   3.69169135698433*^9}, {3.691691404183031*^9, 3.691691444434626*^9}, {
   3.6916915163852587`*^9, 3.6916915633269367`*^9}, {3.691691652545977*^9, 
   3.691691700784278*^9}, {3.6916917389074497`*^9, 3.6916917910999737`*^9}, {
   3.69169182652103*^9, 3.691691827208766*^9}, {3.6916918657321568`*^9, 
   3.691692000055911*^9}, 3.691692037767359*^9, {3.6916968198093967`*^9, 
   3.691696828432233*^9}, {3.691696866049502*^9, 3.691696876002838*^9}, {
   3.691697448143045*^9, 3.691697450060754*^9}, {3.691698441982704*^9, 
   3.691698449392152*^9}, 3.6916987260928373`*^9, {3.691698789716948*^9, 
   3.691698793691825*^9}, {3.691699992073802*^9, 3.691700013303595*^9}, {
   3.691700047221971*^9, 3.691700079996254*^9}, {3.691700399886589*^9, 
   3.691700428999136*^9}, 3.691700804161604*^9, 3.6917009353888483`*^9, {
   3.691701351975751*^9, 3.691701369638299*^9}, {3.6917014883701267`*^9, 
   3.691701510245738*^9}, {3.691701758135697*^9, 3.691701823230007*^9}, {
   3.691701877373101*^9, 3.691701889305971*^9}, {3.691702064899274*^9, 
   3.691702144788375*^9}, {3.691702208491086*^9, 3.691702242845152*^9}, {
   3.691702441731718*^9, 3.6917024609153*^9}, {3.691702608706099*^9, 
   3.691702627814026*^9}, {3.691702814857513*^9, 3.6917028478114367`*^9}, {
   3.69170296665366*^9, 3.6917029667966433`*^9}, 3.691703214638547*^9, {
   3.69170338965217*^9, 3.691703408029749*^9}, {3.691703759969933*^9, 
   3.691703910050005*^9}, {3.691704357315938*^9, 3.6917043629283247`*^9}, {
   3.691704447481073*^9, 3.691704453551902*^9}, {3.691704665206128*^9, 
   3.691704738393385*^9}, {3.6917047999154243`*^9, 3.69170481539505*^9}, {
   3.6917049164256496`*^9, 3.6917049283960733`*^9}, {3.691705411845625*^9, 
   3.691705435424432*^9}, {3.691706024312407*^9, 3.691706041410658*^9}, {
   3.691706153025526*^9, 3.691706221979604*^9}, {3.6917063796902523`*^9, 
   3.691706386177301*^9}, {3.691706485400827*^9, 3.6917064918957376`*^9}, {
   3.691706552696*^9, 3.6917065970346947`*^9}, {3.691707045181465*^9, 
   3.6917070952812977`*^9}, {3.691707357298399*^9, 3.691707366065022*^9}, {
   3.6917074328103523`*^9, 3.691707519884851*^9}, 3.691707773869886*^9, {
   3.6917078376290216`*^9, 3.691707846090167*^9}, {3.6917079194261503`*^9, 
   3.691707960389214*^9}, {3.691708018393982*^9, 3.691708179234384*^9}, {
   3.691708255101763*^9, 3.6917082753851423`*^9}, {3.691708310553988*^9, 
   3.691708485330987*^9}, {3.691708516999538*^9, 3.691708527577738*^9}, {
   3.691708574809896*^9, 3.691708808128983*^9}, {3.691708879399397*^9, 
   3.691708881109161*^9}, {3.691708970608492*^9, 3.6917089825845613`*^9}, {
   3.691709032735952*^9, 3.6917090451053057`*^9}, 3.69170909584676*^9, {
   3.691709156997154*^9, 3.6917092328903427`*^9}, {3.691709283549612*^9, 
   3.691709329577991*^9}, 3.691709597661519*^9, {3.691709917249571*^9, 
   3.691709932840454*^9}, {3.691710099591851*^9, 3.69171016081443*^9}, {
   3.6917813061747828`*^9, 3.691781336135394*^9}, {3.691781905893354*^9, 
   3.6917819498885107`*^9}, {3.691782059373178*^9, 3.691782101720005*^9}, {
   3.69178242980579*^9, 3.691782430658231*^9}, {3.691782577391872*^9, 
   3.69178282845609*^9}, {3.6917828784155617`*^9, 3.69178296958751*^9}, {
   3.691784157046929*^9, 3.691784171701013*^9}, {3.691784208250478*^9, 
   3.691784268494217*^9}, {3.691784377345928*^9, 3.691784454260182*^9}, {
   3.691785861241477*^9, 3.691785892399961*^9}, {3.6917859914297113`*^9, 
   3.691786133609276*^9}, {3.691786761512298*^9, 3.691786769044132*^9}, {
   3.69178680428154*^9, 3.6917868092656927`*^9}, {3.6917868457998743`*^9, 
   3.691786876915346*^9}, {3.691786930445755*^9, 3.691787109905755*^9}, 
   3.691787146076046*^9, {3.6917918903637133`*^9, 3.691791895028263*^9}, 
   3.691864138465217*^9, {3.691864178447845*^9, 3.6918642614240294`*^9}, {
   3.691864314280423*^9, 3.691864332848571*^9}, {3.6918643925883303`*^9, 
   3.69186458447999*^9}, {3.6918855955672197`*^9, 3.691885609795807*^9}, {
   3.691960235880624*^9, 3.691960277660583*^9}, {3.6919633488443203`*^9, 
   3.6919634151352453`*^9}, 3.691963509289929*^9, {3.6919635560800323`*^9, 
   3.691963849368895*^9}, {3.691963945335637*^9, 3.691963996758793*^9}, {
   3.691964040598074*^9, 3.6919642480971746`*^9}, {3.691964299295141*^9, 
   3.691964317756186*^9}, {3.6919643572271137`*^9, 3.691964371351062*^9}, {
   3.691964462078627*^9, 3.691964469010771*^9}, {3.691964505473982*^9, 
   3.691964551401105*^9}, {3.691964700147852*^9, 3.691964714270238*^9}, 
   3.691964765354154*^9, {3.691964831982633*^9, 3.691964890580367*^9}, {
   3.691964972427051*^9, 3.691965008273418*^9}, 3.691965390142434*^9, {
   3.691965535683763*^9, 3.691965537218883*^9}, {3.6919656103465548`*^9, 
   3.691965610471467*^9}, {3.691970494033272*^9, 3.691970501139757*^9}, {
   3.691970547479467*^9, 3.691970586393201*^9}, {3.6919719830241423`*^9, 
   3.691972033613818*^9}, {3.691972068593614*^9, 3.691972125039908*^9}, {
   3.6919721823621273`*^9, 3.6919721904818363`*^9}, 3.69197230310515*^9, 
   3.691972345728516*^9, {3.692447649289019*^9, 3.692447652326179*^9}, {
   3.6924477230219927`*^9, 3.692447748856415*^9}, {3.6924479438283377`*^9, 
   3.6924479687534647`*^9}, 3.692448006317865*^9, {3.6924480427328863`*^9, 
   3.692448048644742*^9}, {3.692448154198873*^9, 3.6924482067484818`*^9}, {
   3.6924482583554783`*^9, 3.6924483266802597`*^9}, {3.692448401142524*^9, 
   3.6924484856254063`*^9}, {3.692448538640883*^9, 3.692448600442494*^9}, {
   3.6924488015291157`*^9, 3.6924488221622334`*^9}, {3.692448917003429*^9, 
   3.69244892148201*^9}, {3.692448962634309*^9, 3.692448966752129*^9}, {
   3.692450329598258*^9, 3.692450332585291*^9}, {3.692450431174185*^9, 
   3.692450432339942*^9}, {3.692450633974704*^9, 3.692450653681872*^9}, {
   3.692453219042562*^9, 3.692453221491519*^9}, {3.692454068130411*^9, 
   3.692454161563936*^9}, {3.692454199295353*^9, 3.692454203843739*^9}, {
   3.6924575209524317`*^9, 3.692457533686472*^9}, {3.692465120733327*^9, 
   3.6924651376721373`*^9}, 3.69246519779385*^9, {3.6924656719409323`*^9, 
   3.692465675259336*^9}, {3.6924666409955397`*^9, 3.6924666574915943`*^9}, {
   3.692466690692377*^9, 3.692466746394637*^9}, {3.69246796051506*^9, 
   3.692468000105192*^9}, {3.6924680940805283`*^9, 3.692468103394847*^9}, {
   3.692468209964491*^9, 3.692468224062688*^9}, {3.692485361788637*^9, 
   3.692485379173468*^9}, {3.692552181343501*^9, 3.692552184742218*^9}, {
   3.692552228991523*^9, 3.692552229606148*^9}, 3.692552311888756*^9, {
   3.692552657818406*^9, 3.692552685619437*^9}, 3.692552720082074*^9, {
   3.692553292259109*^9, 3.6925532946740313`*^9}, 3.692553825066975*^9, {
   3.6925586614601297`*^9, 3.6925587042893333`*^9}, {3.692561916073111*^9, 
   3.692561928257863*^9}, 3.692562208177814*^9, {3.692562735792757*^9, 
   3.692562736287281*^9}, 3.6925628694393883`*^9, {3.692563056947425*^9, 
   3.692563063850909*^9}, {3.6925633009036694`*^9, 3.692563338964587*^9}, 
   3.692564592357628*^9, {3.695772531243297*^9, 3.695772549512521*^9}, 
   3.69577320901786*^9, 3.695817231255636*^9, {3.69582890847761*^9, 
   3.6958289619793797`*^9}, {3.695845721039344*^9, 3.695845725812244*^9}, {
   3.695846196817499*^9, 3.695846197335943*^9}, {3.695849945616826*^9, 
   3.695849955760171*^9}, {3.6959143493700733`*^9, 3.695914379939509*^9}, {
   3.695914459737913*^9, 3.695914494782695*^9}, {3.695938699361771*^9, 
   3.695938700301414*^9}, {3.695940595964538*^9, 3.6959406055473213`*^9}, {
   3.6959408463412724`*^9, 3.6959408962660513`*^9}, {3.695940934929748*^9, 
   3.695940948549765*^9}, {3.695999350581571*^9, 3.6959993783339653`*^9}, {
   3.696015683177455*^9, 3.696015698801196*^9}, {3.696015795704211*^9, 
   3.6960158247794247`*^9}, {3.696098858977906*^9, 3.6960988641696463`*^9}, {
   3.69609908996027*^9, 3.696099095910396*^9}, {3.696099365956285*^9, 
   3.6960993692138023`*^9}, {3.6960994005056543`*^9, 
   3.6960994655004597`*^9}, {3.6960995856727448`*^9, 
   3.6960996441584797`*^9}, {3.696099681374023*^9, 3.696100289917819*^9}, {
   3.696100385378051*^9, 3.696100519665941*^9}, {3.696100557618184*^9, 
   3.696100619318768*^9}, {3.6961006534420013`*^9, 3.696100654669394*^9}, {
   3.6961079202848577`*^9, 3.6961079464077053`*^9}, {3.696108072528873*^9, 
   3.6961081002945213`*^9}, {3.6961094902465467`*^9, 3.696109532666628*^9}, {
   3.696198951519014*^9, 3.696198951529867*^9}, {3.696206140675846*^9, 
   3.696206152271223*^9}, {3.696206303928269*^9, 3.6962063189825363`*^9}, {
   3.6962063789391947`*^9, 3.6962063815097017`*^9}, {3.6962064520526*^9, 
   3.6962065921404343`*^9}, 3.696207111375762*^9, {3.696272994191226*^9, 
   3.696273083816949*^9}, {3.696273121099888*^9, 3.696273128559215*^9}, {
   3.6962731629345827`*^9, 3.696273171200124*^9}, {3.6962732177093678`*^9, 
   3.696273338056046*^9}, {3.69627337001744*^9, 3.696273393307851*^9}, {
   3.696273468446933*^9, 3.6962735779549503`*^9}, {3.69627364800111*^9, 
   3.696273700848666*^9}, {3.696273915795945*^9, 3.696273930575033*^9}, 
   3.696274095059104*^9, 3.696274131335472*^9, {3.696274254471304*^9, 
   3.69627426100101*^9}, {3.6962744410799522`*^9, 3.696274442634307*^9}, {
   3.696274495379098*^9, 3.696274496727165*^9}, {3.696274657255786*^9, 
   3.696274763011574*^9}, {3.696274797320148*^9, 3.696274805175572*^9}, {
   3.696275526550695*^9, 3.696275529215891*^9}, {3.6962761567773037`*^9, 
   3.696276161400321*^9}, {3.696617325563945*^9, 3.6966173635507193`*^9}, {
   3.6966173951424723`*^9, 3.6966173963251677`*^9}, {3.69661744511022*^9, 
   3.696617462214684*^9}, {3.696713967977241*^9, 3.696714032659342*^9}, {
   3.696720428600506*^9, 3.696720463964978*^9}, {3.696720660796727*^9, 
   3.696720687552085*^9}, {3.696720872179542*^9, 3.696720875261348*^9}, {
   3.696720965191297*^9, 3.6967209979224653`*^9}, {3.696721042380206*^9, 
   3.696721059453055*^9}, {3.696721091562389*^9, 3.696721127028336*^9}, 
   3.6967908156977253`*^9, {3.696790956020483*^9, 3.696790956680894*^9}, {
   3.6968847354827547`*^9, 3.696884746209524*^9}, {3.696894089292087*^9, 
   3.696894143580604*^9}, {3.69696789058985*^9, 3.696967894045889*^9}, {
   3.696967948443387*^9, 3.696967967404077*^9}, {3.697230069727665*^9, 
   3.697230073941134*^9}, {3.69723011026936*^9, 3.697230137287163*^9}, {
   3.6972308359207697`*^9, 3.697230893763961*^9}, {3.6972309541055737`*^9, 
   3.697230967004733*^9}, {3.6972310034883423`*^9, 3.697231296211484*^9}, {
   3.6972313316303368`*^9, 3.69723137974903*^9}, {3.6972314203040247`*^9, 
   3.697231507246801*^9}, {3.697231568613351*^9, 3.69723157213583*^9}, {
   3.705942357695615*^9, 3.705942377177475*^9}, 3.705942535664791*^9, {
   3.705942614003248*^9, 3.7059426167594433`*^9}, {3.705942733727934*^9, 
   3.705942762951365*^9}, {3.705942948769738*^9, 3.7059430422241373`*^9}, 
   3.7749790525414743`*^9, 3.7749791288759317`*^9, {3.77498426440799*^9, 
   3.7749842773059177`*^9}, {3.775074310534356*^9, 3.775074328493642*^9}, {
   3.7751406826596613`*^9, 3.775140684716153*^9}, {3.775140722557074*^9, 
   3.775140743829384*^9}, {3.775140931512882*^9, 3.775140936005377*^9}, {
   3.775141581206931*^9, 3.775141583204442*^9}, {3.7751669347782383`*^9, 
   3.775166937786929*^9}, {3.775344046631052*^9, 3.775344048702105*^9}, {
   3.77534430723908*^9, 3.7753443562460117`*^9}, {3.7753444589347067`*^9, 
   3.775344540765492*^9}, {3.775344627865532*^9, 3.77534467377811*^9}, {
   3.7754265019310293`*^9, 3.7754265195667458`*^9}, {3.775426577658333*^9, 
   3.775426703069434*^9}, {3.7754267695851803`*^9, 3.775426843987557*^9}, 
   3.7754269283812017`*^9, {3.7760053489791393`*^9, 3.7760053651129093`*^9}, {
   3.7760153183781424`*^9, 3.776015320154962*^9}, {3.776016150088235*^9, 
   3.776016160375454*^9}, {3.776016191228814*^9, 3.776016191239705*^9}, {
   3.77601713558751*^9, 3.776017241666635*^9}, {3.776022908555708*^9, 
   3.7760229319122467`*^9}, {3.776022980751068*^9, 3.776022991902215*^9}, {
   3.776023028654236*^9, 3.776023129185719*^9}, {3.776023173681177*^9, 
   3.776023322680859*^9}, {3.776023388891789*^9, 3.776023398788722*^9}, {
   3.776023442714044*^9, 3.776023480800116*^9}, {3.776023702479289*^9, 
   3.776023756891917*^9}, {3.77790749954084*^9, 3.7779075312594833`*^9}, {
   3.77790762261241*^9, 3.777907622869697*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"5b437657-c103-44f2-923e-4e6a07bccda2"]
}, Closed]],

Cell[CellGroupData[{

Cell["6 List Operations and Support", "Chapter",
 CellChangeTimes->{{3.691074300266736*^9, 
  3.691074310799621*^9}},ExpressionUUID->"0a8c74b9-4fd4-409f-9416-\
1e5362d89626"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClifToListG", "[", "clif_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"conTerm", ",", "freeTerm", ",", "clifList"}], "}"}], ",", "\n",
      "\t", 
     RowBox[{"clifList", "=", 
      RowBox[{"ClifToListG", "[", 
       RowBox[{"clif", ",", "conTerm", ",", "freeTerm"}], "]"}]}]}], "]"}]}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifToListG", "[", 
    RowBox[{"clif_", ",", "conTerm_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"freeTerm", ",", "clifList"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"clifList", "=", 
       RowBox[{"ClifToListG", "[", 
        RowBox[{"clif", ",", "conTerm", ",", "freeTerm"}], "]"}]}], ";", 
      "clifList"}]}], "]"}]}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClifToListG", "[", 
    RowBox[{"clif_", ",", "conTerm_", ",", "freeTerm_"}], "]"}], ":=", "  ", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Optional", " ", 
      RowBox[{"output", ":", " ", "conTerm"}]}], ",", " ", "freeTerm"}], " ", 
    "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\n", "\t", 
         RowBox[{
          RowBox[{"INPUT", ":", " ", 
           RowBox[{"A", " ", "clif", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"i", ".", "e"}], ",", " ", 
              RowBox[{"a", " ", "multivector"}]}], ")"}], "\n", "\t", 
            "PROCESS"}], ":", " ", 
           RowBox[{
           "Would", " ", "like", " ", "to", " ", "simply", " ", "separate", 
            " ", "the", " ", "constant", " ", "term", 
            RowBox[{"(", "s", ")"}], " ", "from", " ", "the", " ", "free", 
            " ", "terms", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"i", ".", "e", "."}], ",", " ", 
              RowBox[{"terms", " ", "\n", "\t", "containing", " ", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"e", ",", " ", "i"}], "]"}], "'"}], "s"}]}], ")"}], 
            " ", "and", " ", "then", " ", "mmake", " ", "a", " ", "list", " ",
             "where", " ", "the", " ", "constant", " ", "terms"}]}], ",", " ", 
          RowBox[{"if", " ", "any"}], ",", " ", 
          RowBox[{
          "constitute", " ", "a", " ", "single", " ", "term", " ", "\n", "\t", 
           RowBox[{"(", 
            RowBox[{"the", " ", "1", "st", " ", "term"}], ")"}], " ", "and", 
           " ", "the", " ", "free", " ", "terms", " ", "are", " ", 
           "separated", " ", 
           RowBox[{"out", ".", " ", "We"}], " ", "can", " ", "use", " ", 
           RowBox[{"List", "[", "conTerm"}]}]}], "}"}], " ", "to", " ", 
        "make", " ", "a", " ", "list", " ", "that", "\n", "\t", "groups", " ",
         "all", " ", "the", " ", "contstant", " ", "terms", " ", "as", " ", 
        "a", " ", "single", " ", "element", " ", "in", " ", "a", " ", 
        RowBox[{"list", ".", " ", "But"}]}], "..."}], " ", "Mathematica", " ",
       "oerators", " ", "to", " ", "\n", "\t", "convert", " ", "expressions", 
      " ", "to", " ", "a", " ", "lists", " ", "fail", " ", "when", " ", 
      "there", " ", "are", " ", "single", " ", 
      RowBox[{"terms", ".", " ", 
       RowBox[{"ToString", "[", "freeTerm", "]"}]}]}], ",", " ", "\n", "\t", 
     RowBox[{"freeTerm", " ", "/.", 
      RowBox[{"Plus", "->", 
       RowBox[{"List", " ", "and", " ", 
        RowBox[{"List", "@@", "freeTerm"}], " ", "all", " ", "fail", " ", 
        "for", " ", "some", " ", 
        RowBox[{"expressions", ".", " ", "\n", "\t", "\n", "\t", "To"}], " ", 
        "get", " ", "around", " ", "this", " ", "I", " ", "have", " ", 
        "addeded", " ", "an", " ", 
        SubscriptBox["e", "1"], " ", "and", " ", 
        SubscriptBox["e", "2"], " ", "term", " ", "with", " ", "a", " ", 
        "garbage", " ", 
        RowBox[{"coefficient", ".", " ", "This"}], " ", "way", " ", "the", 
        " ", "\n", "\t", "freeTerm", " ", "is", " ", "never", " ", "a", " ", 
        "single", " ", 
        RowBox[{"term", ".", " ", "I"}], " ", "then", " ", "remove", " ", 
        "these", " ", "terms", " ", "from", " ", "the", " ", "final", " ", 
        RowBox[{"list", ".", " ", "\n", "\t", "\n", "\t\t", 
         RowBox[{"Clif1", ":", " ", 
          RowBox[{
          "Expand", " ", "the", " ", "list", " ", "to", " ", "simplify", " ", 
           "later", " ", 
           RowBox[{"multiplications", ".", "\n", "\t\t\t\t", "Want"}], " ", 
           "coefficients", " ", "of", " ", "blades", " ", "to", " ", "be", 
           " ", "single", " ", "terms", " ", 
           RowBox[{"(", 
            RowBox[{"not", " ", "sums"}], ")"}]}]}]}]}]}]}], ",", " ", 
     RowBox[{
     "to", " ", "greatly", " ", "reduce", " ", "the", " ", "\n", "\t\t\t\t", 
      "number", " ", "of", " ", "ways", " ", "a", " ", "product", " ", 
      "could", " ", "be", " ", "simplified"}], ",", " ", 
     RowBox[{
     "thus", " ", "simplifying", " ", "the", " ", "code", " ", "greatly", 
      "\n", "\t\t\t ", "\n", "\t\t\t ", 
      RowBox[{"contTerm", ":", " ", 
       RowBox[{"Find", " ", "the", " ", "constant", " ", "term", 
        RowBox[{"(", "s", ")"}], " ", "by", " ", "setting", " ", "all", " ", 
        "other", " ", "terms", " ", "to", " ", "zero", "\n", "\t\t\t       ", 
        "This", " ", "solves", " ", "the", " ", "problem", " ", "of", " ", 
        "collecting", " ", "constant", " ", "terms", " ", "even", " ", "when",
         " ", "they", " ", "are", " ", "not", " ", "contiguous", "\n", 
        "\t\t\t ", "freeTerm"}], ":", " ", 
       RowBox[{
        RowBox[{"The", " ", "free", " ", "term", " ", "is", " ", "clif1"}], 
        " ", "-", " ", 
        RowBox[{"conTermc", "\n", "\t\t\t ", 
         RowBox[{"freeTermEij", ":", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
            "The", " ", "freeTerm", " ", "with", " ", "products", " ", "of", 
             " ", 
             SubscriptBox["e", "1"], " ", 
             SubscriptBox["e", "2"], " ", 
             SubscriptBox["e", "3"]}], "..."}], " ", "changed", " ", "to", 
           " ", 
           RowBox[{"Subscript", "[", 
            RowBox[{"e", ",", " ", "1", ",", "2", ",", "3", ",", "..."}], 
            "]"}], "\n", "\t\t\t ", "The", " ", "\"\<if test\>\""}], ":", " ",
           "\n", "\t\t\t     ", 
          RowBox[{
          "If", " ", "user", " ", "has", " ", "set", " ", "any", " ", 
           "precision", " ", "for", " ", "any", " ", "symbol"}]}]}]}]}]}], 
     ",", " ", 
     RowBox[{
     "then", " ", "0", " ", "receives", " ", "Machine", " ", "Precision", " ",
       "\n", "\t\t\t     ", "Thus"}], ",", " ", 
     RowBox[{
     "IF", " ", "TEST", " ", "for", " ", "0", " ", "must", " ", "also", " ", 
      "test", " ", "for", " ", "0", " ", 
      RowBox[{"(", 
       RowBox[{"machine", " ", "precision"}], ")"}], "\n", "\t\t\t ", 
      RowBox[{"clifListFreeEij", ":", " ", 
       RowBox[{
       "A", " ", "list", " ", "of", " ", "the", " ", "terms", " ", "in", " ", 
        "freeIJ", "\n", "\t\t\t\t  ", "When", " ", "there", " ", "is", " ", 
        "no", " ", "free", " ", "term"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"set", " ", "the", " ", "free"}], "-", 
      RowBox[{"term", " ", "list", " ", "to", " ", 
       RowBox[{"{", "0", "}"}], "\n", "\t\t\t      ", "For", " ", "the", " ", 
       "special", " ", "case", " ", "where", " ", "the", " ", "free", " ", 
       "term", " ", "is", " ", "a", " ", "a", " ", "single", " ", 
       SubscriptBox["e", 
        RowBox[{
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "3"]}]], " ", "or", " ", "a", " ", "product", " ", 
       "of", " ", 
       RowBox[{
        SubscriptBox["e", 
         RowBox[{
          SubscriptBox["e", "2"], " ", 
          SubscriptBox["e", "3"]}]], "'"}], "s"}]}], ",", " ", 
     RowBox[{
     "we", " ", "just", " ", "\n", "\t\t\t         ", "make", " ", "a", " ", 
      "list", " ", "of", " ", "that", " ", "term", "\n", "\t\t\t      ", 
      "For", " ", "a", " ", "sum", " ", "of", " ", "terms", " ", "we", " ", 
      "APPLY", " ", 
      RowBox[{"(", "@@", ")"}], " ", "List", " ", "to", " ", "each", " ", 
      "term", "\n", "\t\t\t      ", "Left", " ", "over", " ", "is", " ", "a", 
      " ", "free", " ", "term", " ", "comprised", " ", "of", " ", "a", " ", 
      "coefficient", " ", "times", " ", "a", " ", "single", " ", "or", " ", 
      "product", " ", "of", " ", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"e", ",", " ", "i"}], "]"}], "'"}], "s", "\n", "\t\t\t ", 
      RowBox[{"clifListFreeEijSort", ":", " ", 
       RowBox[{
       "Mathematica", " ", "may", " ", "have", " ", "created", " ", "terms", 
        " ", "like", " ", 
        RowBox[{"Subscript", "[", 
         RowBox[{"e", ",", " ", "4", ",", "1", ",", "2"}], "]"}], " ", "in", 
        " ", 
        RowBox[{"clifListFreeIJ", ".", " ", "This"}], " ", "\n", 
        "\t\t\t      ", "calculation", " ", "makes", " ", "a", " ", "list", 
        " ", "of", " ", "each", " ", "subscript", " ", "set"}]}]}], ",", " ", 
     
     RowBox[{"sorts", " ", "each", " ", "set"}], ",", " ", 
     RowBox[{
     "puts", " ", "the", " ", "sorted", " ", "list", " ", "back", " ", "\n", 
      "\t\t\t      ", "into", " ", "a", " ", "sequence", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", ".", "e", "."}], ",", " ", 
        RowBox[{"no", " ", "list", " ", "brackets"}]}], ")"}], " ", "and", 
      " ", "finally", " ", "places", " ", "the", " ", "sequence", " ", "as", 
      " ", "a", " ", "subscript", " ", "of", " ", "e", "\n", "\t\t\t ", 
      RowBox[{"clifListFree", ":", " ", 
       RowBox[{"Converts", " ", "the", " ", "terms", " ", "like", " ", 
        SubscriptBox["e", 
         RowBox[{"1", ",", "2", ",", "3"}]], " ", "back", " ", "into", " ", 
        "products", " ", 
        SubscriptBox["e", "1"], " ", 
        SubscriptBox["e", "2"], " ", 
        SubscriptBox["e", "3"], "\n", "\t\t\t ", "clifListFreeSort"}], ":", 
       " ", 
       RowBox[{
       "It", " ", "is", " ", "sometime", " ", "necessary", " ", "to", " ", 
        "reorder", " ", "the", " ", "terms", " ", "to", " ", "match", " ", 
        "freeTerm", " ", "because", " ", "\n", "\t\t\t      ", "Mathematica", 
        " ", "sometimes", " ", "sorts", " ", "terms", " ", "like", " ", 
        SubscriptBox["e", 
         RowBox[{"1", ",", "2", ",", "3"}]], " ", "differently", " ", "than", 
        " ", 
        SubscriptBox["e", "1"], " ", 
        SubscriptBox["e", "2"], " ", 
        SubscriptBox["e", "3"], "\n", "\t\t\t ", 
        RowBox[{"clifList", ":", " ", 
         RowBox[{"Append", " ", "the", " ", "constants"}]}]}]}]}], ",", " ", 
     RowBox[{"if", " ", "any"}], ",", " ", 
     RowBox[{
     "as", " ", "a", " ", "single", " ", "term", " ", "in", " ", "the", " ", 
      RowBox[{"list", ".", " ", "Also"}]}], ",", " ", 
     RowBox[{
     "a", " ", "special", " ", "case", " ", "is", "\n", "\t\t\t      ", 
      "made", " ", "for", " ", "a", " ", "zero", " ", 
      RowBox[{"clif", ".", "\n", "\t\t\t ", "\n", "\t", 
       RowBox[{"OUTPUT", ":", "  ", "clifList"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "a", " ", "list", " ", "of", " ", "the", " ", "separate", " ", 
       "elements", " ", "of", " ", "the", " ", "clif", " ", 
       RowBox[{"(", 
        RowBox[{"directly", " ", "returned"}], ")"}], "\n", "\t\t\t ", 
       "conTerm"}], " ", "=", " ", 
      RowBox[{"Constant", " ", "terms", " ", 
       RowBox[{"(", 
        RowBox[{"if", " ", "any"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "collected", " ", "into", " ", "1", "st", " ", "term", " ", "of", " ", 
       "list", " ", 
       RowBox[{"(", 
        RowBox[{"returned", " ", "via", " ", "arg", " ", "list"}], ")"}], 
       "\n", "\t\t\t ", "freeTerm"}], " ", "=", " ", 
      RowBox[{"Non", "-", 
       RowBox[{"constant", " ", "terms"}]}]}], ",", " ", 
     RowBox[{"if", " ", "any", " ", 
      RowBox[{"(", 
       RowBox[{"returned", " ", "via", " ", "arg", " ", "list"}], ")"}], "\n",
       "\t\t\t ", "There", " ", "are", " ", "3", " ", "versions", " ", "of", 
      " ", "the", " ", "ClifToListG", " ", 
      RowBox[{"definition", ":", "\n", "\t\t\t    ", 
       RowBox[{
       "Use", " ", "2", "nd", " ", "definition", " ", "if", " ", "only", " ", 
        "conTerm", " ", "is", " ", 
        RowBox[{"needed", ".", "\n", "\t\t\t    ", "Use"}], " ", "first", " ",
         "definition", " ", "if", " ", "neither", " ", "are", " ", 
        RowBox[{"needed", ".", "\n", "\t\t\t    ", "Only"}], " ", "ReverseG", 
        " ", "needs", " ", "all", " ", "3", " ", "outputs"}]}]}]}], "\n", 
    "\t\t\t   ", "*)"}], "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clif1", ",", "conList", ",", "freeList", ",", "clifList1", ",", 
       "clifList"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"clif1", " ", "=", " ", 
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"Global`x34uv0W42", " ", 
          SubscriptBox["e", "1"]}], " ", "+", " ", 
         RowBox[{"Global`x34uv0W42", " ", 
          SubscriptBox["e", "2"]}], " ", "+", " ", "clif"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"conTerm", " ", "=", " ", 
       RowBox[{"clif1", " ", "/.", " ", 
        RowBox[{
         SubscriptBox["e", "__"], "\[Rule]", "0"}]}]}], ";", "\n", "\t", 
      RowBox[{"freeTerm", " ", "=", " ", 
       RowBox[{"clif1", " ", "-", " ", "conTerm"}]}], ";", "\n", "\t", 
      RowBox[{"conList", " ", "=", " ", 
       RowBox[{"List", "[", "conTerm", "]"}]}], ";", "\n", "\t", 
      RowBox[{"freeList", " ", "=", " ", 
       RowBox[{"List", " ", "@@", " ", "freeTerm"}]}], ";", "\n", "\t", 
      RowBox[{"clifList1", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Append", "[", 
         RowBox[{"conList", ",", " ", "freeList"}], "]"}], "]"}]}], ";", "\n",
       "\n", "\t", 
      RowBox[{"If", " ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"clif", " ", "===", " ", "0"}], " ", "||", " ", 
         RowBox[{"clif", " ", "===", " ", "0."}]}], ",", " ", 
        RowBox[{"clifList", " ", "=", " ", 
         RowBox[{"{", "0", "}"}]}], ",", " ", "\n", "    ", 
        RowBox[{"clifList", " ", "=", " ", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"clifList1", " ", "//.", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0.", "\[Rule]", "0"}], ",", " ", 
              RowBox[{"Global`x34uv0W42", " ", "->", " ", "0"}]}], "}"}]}], 
           ",", " ", 
           RowBox[{"Except", "[", "0", "]"}]}], "]"}]}]}], "]"}], ";", "\n", 
      "\t", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"debug9", "\[Equal]", "True"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<ClifToListG: Expanded clif = \>\"", ",", "clif1"}], 
          "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Constant term = \>\"", ",", "conTerm"}], "]"}], ";", 
         "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Free term = \>\"", ",", " ", "freeTerm"}], "]"}], ";", 
         "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Constant List = \>\"", ",", 
           RowBox[{"List", "[", "conTerm", "]"}]}], "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Free List = \>\"", ",", 
           RowBox[{"List", "@@", "freeTerm"}]}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Prepend all the constants, if any, as a single term: \>\"", 
           ",", "clifList1"}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<clifList has garbage and zero terms removed: \>\"", ",", 
           "clifList"}], "]"}], ";"}]}], "\n", "\t\t", "]"}], ";", " ", "\n", 
      "\n", "\t", "clifList"}]}], "\n", "]"}]}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "ClifToListG"}], "  ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eSubscriptListG", "[", "0", "]"}], ":=", 
   RowBox[{"{", "0", "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eSubscriptListG", "[", "clif_", "]"}], ":=", " ", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", "clif"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"A", " ", "multivector", "\n", "\t", 
       RowBox[{"PROCESS", ":", "\n", "\t", "OUTPUT", ":", " ", "eList"}]}], 
      " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"list", " ", "of", " ", 
           SubscriptBox["e", 
            RowBox[{"i", ",", "j", ",", "..."}]], "corresponding", " ", "to", 
           " ", 
           SubscriptBox["e", "i"], 
           SubscriptBox["e", "j"]}], "..."}], " ", "terms", " ", "in", " ", 
         "clif", "\n", "\t\t\t", "1", "st", " ", "term", " ", "is", " ", 
         "replaced", " ", "by", " ", "0", " ", "if", " ", "constant", " ", 
         "term", " ", "of", " ", "clif", " ", "is", " ", "non"}], "-", 
        RowBox[{"zero", " ", "\n", "\t\t\t", "eList"}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", " ", "0", " ", "}"}], " ", "if", " ", "clif"}], " ", 
        "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"0", "\n", "\t\t\t", 
           RowBox[{"Example", ":", " ", 
            RowBox[{"5", " ", "+", " ", 
             RowBox[{"3", " ", 
              SubscriptBox["e", "1"], 
              SubscriptBox["e", "2"]}]}]}]}], " ", "\[Rule]", " ", "eList"}], 
         " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           SubscriptBox["e", 
            RowBox[{"1", ",", "2"}]]}], "}"}]}]}]}]}]}], "  ", "*)"}], "\n", 
   "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"clifList", ",", "eList", ",", "const"}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"clifList", "=", 
       RowBox[{
        RowBox[{"ClifToListG", "[", 
         RowBox[{"clif", ",", "const"}], "]"}], "/.", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["e", "u_"], "2"], "\[Rule]", 
         SubscriptBox["e", 
          RowBox[{"u", ",", "u"}]]}]}]}], ";", " ", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Reduce", " ", "square", " ", "terms"}], ",", " ", 
        RowBox[{"if", " ", 
         RowBox[{"any", ".", " ", 
          RowBox[{"Example", ":", " ", 
           RowBox[{
            SubsuperscriptBox["e", "3", "2"], 
            SubsuperscriptBox["e", "4", "2"], " ", "changes", " ", "to", " ", 
            
            SubscriptBox["e", 
             RowBox[{"3", ",", "3"}]], " ", 
            SubscriptBox["e", 
             RowBox[{"4", ",", "4"}]], "  ", "\n", "\t\t\t", "Note"}], ":", 
           " ", 
           RowBox[{
           "The", " ", "only", " ", "time", " ", "there", " ", "may", " ", 
            "be", " ", "square", " ", "terms", " ", "is", " ", "during", " ", 
            "computation", " ", "of", " ", "geometric", " ", 
            "product"}]}]}]}]}], " ", "*)"}], "\n", "\t\t", 
      RowBox[{"eList", "=", 
       RowBox[{
        RowBox[{"GradesListG", "[", 
         RowBox[{"clif", ",", "clifList", ",", "const"}], "]"}], "\n", 
        "\t\t\t", "//.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["e", "u__"], 
            SubscriptBox["e", "v__"]}], "->", 
           SubscriptBox["e", 
            RowBox[{"u", ",", "v"}]]}], ",", 
          RowBox[{
           RowBox[{"w_", " ", 
            SubscriptBox["e", "u__"]}], "\[Rule]", 
           SubscriptBox["e", "u"]}], ",", 
          RowBox[{
           SubscriptBox["e", "u__"], "\[RuleDelayed]", 
           RowBox[{"Subscript", "[", 
            RowBox[{"e", ",", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"Sort", "[", 
               RowBox[{"List", "[", "u", "]"}], "]"}]}]}], "]"}]}]}], 
         "}"}]}]}], ";", "\n", "\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
         "The", " ", "repeated", " ", "replace", " ", "changes", " ", "clif", 
          " ", "list", " ", "into", " ", "a", " ", "e"}], "-", 
         RowBox[{
         "subscript", " ", "list", " ", "with", " ", "sorted", " ", 
          "subscripts", "\n", "\t\t\t", "ConStantToZeroG", " ", "changees", 
          " ", "the", " ", "1", "st", " ", "element", " ", "in", " ", "the", 
          " ", "list", " ", "to", " ", "0", " ", "if", " ", "constant", " ", 
          "term"}]}], " ", "\[NotEqual]", " ", "0"}], "    ", "*)"}], "\n", 
      "\t\t", "eList"}]}], "\n", "\t", "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "eSubscriptListG"}], " ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GradesListG", "[", 
    RowBox[{"clif_", ",", "list_", ",", "const_"}], "]"}], ":=", "  ", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", "Clif"}], ",", " ", 
     RowBox[{
      RowBox[{
      "a", " ", "list", " ", "of", " ", "clif", " ", "subscripts", " ", "or", 
       " ", "e"}], "-", "subscripts"}], ",", " ", 
     RowBox[{
      RowBox[{
      "and", " ", "the", " ", "constant", " ", "term", " ", "of", " ", "the", 
       " ", "clif", "\n", "\t", 
       RowBox[{"OUTPUT", ":", " ", "list1"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
       "Clif", " ", "list", " ", "with", " ", "1", "st", " ", "term", " ", 
        "replaced", " ", "by", " ", "0", " ", "if", " ", "constant", " ", 
        "is", " ", "non"}], "-", "zero"}]}]}], "  ", "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "list1", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"const", "===", "0"}], "||", 
         RowBox[{"const", "===", "0."}]}], ",", 
        RowBox[{"list1", "=", "list"}], ",", 
        RowBox[{"list1", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"list", ",", 
           RowBox[{"1", "\[Rule]", "0"}]}], "]"}]}]}], "]"}], ";", "\n", "\t",
       "list1"}]}], "]"}]}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Sends", " ", "constant", " ", "term", " ", "of", " ", "list"}], 
    ",", " ", 
    RowBox[{"if", " ", "any"}], ",", " ", 
    RowBox[{"to", " ", "0"}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GradeListG", "[", "clif_", "]"}], ":=", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"User", "'"}], "s", " ", "Clif", " ", "is", " ", 
       SubscriptBox["c", "0"]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["c", "1"], " ", 
       SubscriptBox["e", "1"]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["c", 
        RowBox[{"1", ",", "2"}]], " ", 
       SubscriptBox["e", "1"], 
       SubscriptBox["e", "2"]}], " ", "+"}], " ", "..."}], "  ", "*)"}], "\n",
    "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"INPUTS", ":", "\n", "\t", "clifc"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"a", " ", "Clif", "\n", "\n", "\t", 
        RowBox[{"PROCESS", ":", "\n", "\t", 
         RowBox[{
         "This", " ", "is", " ", "an", " ", "internal", " ", "function", " ", 
          "called", " ", "by", " ", "pSliceG", " ", "and", " ", "ReverseG", 
          "\n", "\t", "It", " ", "creates", " ", "a", " ", "list", " ", "of", 
          " ", "the", " ", "grades", " ", "of", " ", "the", " ", "terms", 
          "\n", "\t", "The", " ", "process", " ", "starts", " ", "by", " ", 
          "grabbing", " ", "the", " ", "subscript", " ", "list", " ", "using",
           " ", "SubscriptListG", "\n", "\t", "The", " ", "length", " ", "of",
           " ", 
          SubscriptBox["e", 
           RowBox[{"i", ",", "j", ",", "..."}]]}]}]}], " ", "=", " ", 
       RowBox[{"1", " ", "+", " ", 
        RowBox[{
        "#", " ", "of", " ", "subscripts", " ", "since", " ", "base", " ", 
         "e", " ", "is", " ", "part", " ", "of", " ", "the", " ", "length", 
         "\n", "\t", "The", " ", "constant", " ", "term", 
         RowBox[{"(", "s", ")"}], " ", "could", " ", "be", " ", "of", " ", 
         "various", " ", "lengths"}]}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "so", " ", "its", " ", "grade", " ", "is", " ", "simply", " ", "set", 
       " ", "to", " ", "zero", "\n", "\n", "\t", 
       RowBox[{"OUTPUT", ":", "\n", "\t", "gradeList"}]}], " ", "=", " ", 
      RowBox[{"A", " ", "list"}]}], ",", " ", 
     RowBox[{"matching", " ", "the", " ", "ordering", " ", "of", " ", 
      RowBox[{"ClifToListG", "[", "clif", "]"}]}], ",", " ", 
     RowBox[{
     "of", " ", "the", " ", "grades", " ", "of", " ", "\n", "\t\t\t\t", 
      "each", " ", "term"}]}], "\n", "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"clif1", ",", "gradeList", ",", "const"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"clif1", "=", 
       RowBox[{"Expand", "[", "clif", "]"}]}], ";", "\n", "\t", 
      RowBox[{"const", "=", 
       RowBox[{"ConstantG", "[", "clif1", "]"}]}], ";", "\n", "\t", 
      RowBox[{"gradeList", "=", 
       RowBox[{"GradesListG", "[", 
        RowBox[{"clif1", ",", 
         RowBox[{
          RowBox[{"Length", "/@", 
           RowBox[{"eSubscriptListG", "[", "clif1", "]"}]}], "-", "1"}], ",", 
         "const"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"(*", "  ", 
       RowBox[{
       "List", " ", "of", " ", "grades", " ", "of", " ", "clif", " ", "terms",
         " ", 
        RowBox[{"(", 
         RowBox[{"=", " ", 
          RowBox[{
          "number", " ", "of", " ", "subscripts", " ", "on", " ", "e", " ", 
           "terms"}]}], ")"}], "\n", "\t\t\t", "Constant", " ", "1", "st", 
        " ", "term", " ", 
        RowBox[{"(", 
         RowBox[{"if", " ", "any"}], ")"}], " ", "gets", " ", "assigned", " ",
         "value", " ", "of", " ", "0", " \t\t", "\n", "\t\t\t", "For", " ", 
        "other", " ", "terms", " ", "subtract", " ", "1", " ", "because", " ",
         "Length", " ", "counts", " ", "base", " ", "e", " ", "along", " ", 
        "with", " ", "\n", "\t\t\t\t", "subscripts"}], " ", "*)"}], "\n", 
      "\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug4", ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<GradeListG: List of grades of terms of \>\"", ",", "clif1", 
          ",", "\"\< = \>\"", ",", "gradeList"}], "]"}]}], "]"}], ";", "\n", 
      "\n", "\t", "gradeList"}]}], "\n", "\t", "]"}]}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "GradeListG", " ", "Module"}], "  ", "*)"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ListToClifG", "[", "clifList_", "]"}], ":=", 
   RowBox[{"clifList", "/.", 
    RowBox[{"List", "\[Rule]", "Plus"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SignatureG", "[", "list_", "]"}], ":=", "\n", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", 
      RowBox[{"A", " ", "list", " ", "of", " ", "integers"}]}], ",", " ", 
     RowBox[{"letters", " ", "or", " ", "word"}], ",", " ", 
     RowBox[{
      RowBox[{
      "or", " ", "other", " ", "items", " ", "that", " ", "Mathematica", " ", 
       "\n", "\t\t\t", "can", " ", "sort", " ", "by", " ", "structure", " ", 
       "\n", "\n", "\t", 
       RowBox[{"PROCESS", ":", "  ", 
        RowBox[{
         RowBox[{
         "Find", " ", "the", " ", "list", " ", "of", " ", "permutations", " ",
           "cycles", " ", "that", " ", "convert", " ", "this", " ", "list", 
          " ", "to", " ", "an", " ", "ordered", " ", "one", "\n", "\t\t\t  ", 
          "Replace", " ", "each", " ", "cycle", " ", "by", " ", "its", " ", 
          "length", "\n", "\t\t\t  ", "Replace", " ", "even", " ", "lengths", 
          " ", "with"}], " ", "-", 
         RowBox[{"1", " ", "and", " ", "odd", " ", "lengths", " ", "with"}], 
         " ", "+", 
         RowBox[{
          RowBox[{
          "1", "\n", "\t\t\t  ", "The", " ", "signature", " ", "is", " ", 
           "the", " ", "product", " ", "of", " ", "the"}], " ", 
          "\[PlusMinus]", 
          RowBox[{
           RowBox[{"1", "'"}], "s", "\n", "\n", "\t", "OUTPUT"}]}]}], ":", 
        " ", 
        RowBox[{"The", " ", "signature", " ", "of", " ", "the", " ", 
         RowBox[{"list", ":", "\n", "\t\t\t\t", 
          RowBox[{"Let", " ", "n"}]}]}]}]}], " ", "=", " ", 
      RowBox[{
      "minimum", " ", "#", " ", "of", " ", "pairwise", " ", "permutations", 
       " ", "required", " ", "to", " ", "put", " ", "the", " ", "list", " ", 
       "\n", "\t\t\t\t\t", "in", " ", "order", "\n", "\t\t\t\t", 
       RowBox[{"Note", ":", " ", 
        RowBox[{"If", " ", "an", " ", "integer", " ", "repeats"}]}]}]}], ",", 
     " ", 
     RowBox[{
      RowBox[{
      "this", " ", "means", " ", "not", " ", "to", " ", "permute", " ", 
       "adjacent", " ", "equal", " ", "items", "\n", "\t\t\t\t", 
       "Signature"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"+", "1"}], " ", "if", " ", "n", " ", "is", " ", "even", "\n",
         "\t\t\t\t", "Signature"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"-", "1"}], " ", "if", " ", "n", " ", "is", " ", 
        "odd"}]}]}]}], " ", "*)"}], "\n", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cycles", ",", "listOfCycles", ",", "permLength", ",", "evenOddLength", 
       ",", "evenOddLength2", ",", "signature"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"cycles", "=", 
       RowBox[{"FindPermutation", "[", "list", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"(*", "  ", 
       RowBox[{
        RowBox[{
        "We", " ", "desire", " ", "the", " ", "cycles", " ", "length", " ", 
         "to", " ", "make", " ", "this", " ", "list", " ", 
         RowBox[{"ordered", ".", "\n", "\t\t\t", "This"}], " ", "is", " ", 
         "the", " ", "list", " ", "of", " ", "permutation", " ", "cycles", 
         " ", "that", " ", "convert", " ", "this", " ", "list", " ", "to", 
         " ", "an", " ", "ordered", " ", "one", "\n", "\t\t\t", 
         RowBox[{"Note", ":", " ", "Technically"}]}], ",", " ", 
        RowBox[{
        "this", " ", "converts", " ", "an", " ", "ordered", " ", "list", " ", 
         "into", " ", "this", " ", "one"}], ",", " ", 
        RowBox[{
        "but", " ", "the", " ", "\n", "\t\t\t\t", "result", " ", "is", " ", 
         "the", " ", "same"}]}], "\n", "\t\t ", "*)"}], "\n", "\t\t", 
      RowBox[{"listOfCycles", "=", 
       RowBox[{
        RowBox[{"List", "@@", "cycles"}], " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"{", "u__", "}"}], "}"}], "}"}], "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"{", "u", "}"}], "}"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "u__", "}"}], ",", "v__"}], "}"}], "}"}], 
           "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "u", "}"}], ",", "v"}], "}"}]}]}], "}"}]}]}], ";", 
      "\n", "\t\t\t", 
      RowBox[{"(*", "  ", 
       RowBox[{"Replace", " ", "head", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", ".", "e", "."}], ",", " ", "\"\<Cycles\>\""}], ")"}], 
        " ", "with", " ", "\"\<List\>\"", "\n", "\t\t\t\t", "Then", " ", 
        "reduce", " ", "one", " ", "level", " ", "of", " ", "braces"}], " ", 
       "*)"}], "\n", "\t\t", 
      RowBox[{"permLength", "=", 
       RowBox[{
        RowBox[{"Length", "/@", "listOfCycles"}], "/.", " ", 
        RowBox[{
         RowBox[{"u_", "/;", 
          RowBox[{"u", "\[Equal]", "0"}]}], "\[Rule]", "1"}]}]}], ";", "\n", 
      "\t\t\t", 
      RowBox[{"(*", "  ", 
       RowBox[{
       "Find", " ", "the", " ", "lengths", " ", "of", " ", "the", " ", 
        "cycles", " ", "in", " ", "the", " ", "list", "\n", "\t\t\t\t", 
        RowBox[{"Note", ":", " ", 
         RowBox[{
         "null", " ", "cycles", " ", "map", " ", "to", " ", "zero", " ", "so",
           " ", "we", " ", "change", " ", "them", " ", "to", " ", "1.", " ", 
          "See", " ", "example"}]}]}], "   ", "*)"}], "\n", "\t\t", 
      RowBox[{"evenOddLength", "=", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"Mod", "[", 
          RowBox[{"permLength", ",", "2"}], "]"}]}], "-", "1"}]}], ";", "\n", 
      "\t\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Map", " ", "even", " ", "length", " ", "cycles", " ", "to"}],
         " ", "-", 
        RowBox[{
        "1", " ", "and", " ", "odd", " ", "length", " ", "cycles", " ", 
         "to"}], " ", "+", "1"}], " ", "*)"}], "\n", "\t\t", 
      RowBox[{"signature", "=", 
       RowBox[{"evenOddLength", "/.", " ", 
        RowBox[{"List", "\[Rule]", "Times"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Remove", " ", "one", " ", "level", " ", "of", " ", "brackets", " ", 
         "\n", "\n", "\t\t", 
         RowBox[{"Ex", " ", ".", "   ", "list"}]}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "1", ",", " ", "2", ",", " ", "4"}], " ", 
           "}"}], "   ", "This", " ", "list", " ", "shows", " ", "that", " ", 
          "null", " ", "cycles", " ", "have", " ", "to", " ", "be", " ", 
          "handled", "\n", "\t\t\t\t", "cycles"}], " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Cycles", "[", 
            RowBox[{"{", "}"}], "]"}], "\n", "\t\t\t\t", "listOfCycles"}], 
          " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", " ", 
             RowBox[{"{", " ", "}"}], " ", "}"}], "\n", "\t\t\t\t", 
            "permLength"}], " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "1", "}"}], "\n", "\t\t\t\t", "evenOddLength"}], 
            " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"{", "1", "}"}], "\n", "\t\t\t\t", "signature"}], " ", 
             "=", " ", 
             RowBox[{
              RowBox[{"1", " ", "\n", "\n", "\t\t", "Ex", "      ", "list"}], 
              "=", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "2", ",", " ", "3", ",", " ", "4", ",", " ", "1", ",", " ", 
                  "2"}], " ", "}"}], "  ", "\n", "\t\t\t\t\t", "This", " ", 
                "list", " ", "shows", " ", "that", " ", "a", " ", "simple", 
                " ", "product", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["e", "2"], 
                  SubscriptBox["e", "3"], 
                  RowBox[{
                   SubscriptBox["e", "4"], "\[Wedge]", 
                   SubscriptBox["e", "1"]}], 
                  SubscriptBox["e", "2"]}], ")"}], "can", " ", "have", " ", 
                "more", " ", "than", " ", "1", " ", "cycle", "\n", "\t\t\t\t",
                 "cycles"}], " ", "=", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cycles", "[", " ", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", " ", "4", ",", " ", "2"}], "}"}], ",", 
                   " ", 
                   RowBox[{"{", " ", 
                    RowBox[{"3", ",", " ", "5"}], "}"}]}], " ", "]"}], "\n", 
                 "\t\t\t\t", "listOfCycles"}], " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", " ", 
                   RowBox[{
                    RowBox[{"{", " ", 
                    RowBox[{"1", ",", " ", "4", ",", " ", "2"}], "}"}], ",", 
                    " ", 
                    RowBox[{"{", " ", 
                    RowBox[{"3", ",", " ", "5"}], "}"}]}], " ", "}"}], "\n", 
                  "\t\t\t\t", "permLength"}], " ", "=", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}], "\n", "\t\t\t\t", 
                   "evenOddLength"}], " ", "=", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], "\n", "\t\t\t\t", 
                    "signature"}], " ", "=", " ", 
                   RowBox[{"-", "1"}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "\n", 
       "*)"}], "\t", "\n", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<SignatureG: List of Product Blade = \>\"", ",", "list", ",", 
           "\"\<,  Cycles of list: \>\"", ",", "cycles"}], "]"}], ";", "\n", 
         "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Cycles sans head (Cycles): \>\"", ",", "listOfCycles", ",", 
           "\"\<, Length of cycles: \>\"", ",", "permLength"}], "]"}], ";", 
         "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Even cycle -> -1, odd -> +1: \>\"", ",", "evenOddLength", ",", 
           "\"\<, Signature = Product of \[PlusMinus]1's: \>\"", ",", "\n", 
           "\t\t\t\t", "signature"}], "]"}]}]}], "\t\t", "\n", "\t\t", "]"}], 
      ";", "\n", "\t\t", "signature"}]}], "\t\t", "\n", "]"}]}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "SignatureG", " ", "Module"}], " ", "*)"}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"SubscriptListG", "[", "clif_", "]"}], ":=", "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"INPUT", ":", " ", "Clif"}], " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"A", " ", "multivector", "\n", "\t", 
           RowBox[{"PROCESS", ":", "\n", "\t\t", 
            RowBox[{
             RowBox[{
             "Use", " ", "eSubscriptList", " ", "to", " ", "obtain", " ", "a",
               " ", "list", " ", "of", " ", "e"}], "-", 
             RowBox[{
             "subscripts", " ", "of", " ", "terms", " ", "of", " ", "clif", 
              "\n", "\t\t\t", "Example"}]}], ":", " ", 
            RowBox[{"2", " ", "+", " ", 
             RowBox[{"3", " ", 
              SubscriptBox["e", 
               RowBox[{"2", " "}]], 
              SubscriptBox["e", "4"]}]}]}]}], " ", "\[Rule]", " ", 
          RowBox[{
           RowBox[{"{", " ", 
            RowBox[{"0", ",", " ", 
             SubscriptBox["e", 
              RowBox[{"2", ",", "4"}]]}], " ", "}"}], "\n", "\t\t", "Use"}]}],
          " ", "/.", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
           "replace", " ", "all", " ", "to", " ", "change", " ", "e"}], "-", 
           RowBox[{"subscripts", " ", "like", " ", 
            SubscriptBox["e", "2"], 
            SubscriptBox["e", "4"], " ", "to", " ", "a", " ", "list", " ", 
            "of", " ", "subscripts", " ", "like", " ", 
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], "\n", "\t\t", "If", " ", 
            "constant", " ", "term"}]}], " ", "\[NotEqual]", " ", "0"}]}]}], 
       ",", " ", 
       RowBox[{
        RowBox[{
        "change", " ", "1", "st", " ", "term", " ", "of", " ", "list", " ", 
         "from", " ", "0", " ", "to", " ", 
         RowBox[{"{", "0", "}"}], "\n", "\t\t", "If", " ", "entire", " ", 
         "clif"}], " ", "=", " ", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"make", " ", "subscript", " ", "list"}], " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{"{", "0", "}"}], " ", "}"}], "\n", "\t", 
          RowBox[{"OUTPUT", ":", " ", "subList1"}]}], " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
           "List", " ", "of", " ", "the", " ", "subscripts", " ", "of", " ", 
            "the", " ", "e"}], "-", 
           RowBox[{"terms", " ", "\n", "\t\t\t", "1", "st", " ", "term"}]}], 
          " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", "0", "}"}], " ", "if", " ", "either", " ", 
             "constant", " ", "is", " ", "non"}], "-", 
            RowBox[{"zero", " ", "or", " ", "entire", " ", "clif"}]}], " ", 
           "=", " ", 
           RowBox[{
            RowBox[{"0", " ", "\n", "\t\t\t", 
             RowBox[{"Example", ":", " ", 
              RowBox[{"5", " ", "+", " ", 
               RowBox[{"3", " ", 
                SubscriptBox["e", "1"], 
                SubscriptBox["e", "2"]}]}]}]}], " ", "\[Rule]", " ", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"{", "0", " ", "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}]}], " "}]}]}]}]}]}]}], ")"}], 
     " ", "\n", "\t\t\t", 
     RowBox[{"Example", ":", " ", "0"}]}], " ", "\[Rule]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"{", "0", "}"}], " ", "}"}], "  ", "\n", "\t\t\t", 
      RowBox[{"Example", ":", " ", 
       RowBox[{"3", " ", 
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"]}]}]}], " ", "\[Rule]", " ", 
     RowBox[{"{", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], " ", "}"}]}]}], "   ", "*)"}], "\n", 
  "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"subList0", ",", "subList1"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"subList0", "=", 
      RowBox[{
       RowBox[{"eSubscriptListG", "[", "clif", "]"}], "/.", 
       RowBox[{
        SubscriptBox["e", "u__"], "\[Rule]", 
        RowBox[{"{", "u", "}"}]}]}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ConstantG", "[", "clif", "]"}], "===", "0"}], "||", 
        RowBox[{
         RowBox[{"ConstantG", "[", "clif", "]"}], "===", "0."}]}], ",", 
       RowBox[{"subList1", "=", "subList0"}], ",", 
       RowBox[{"subList1", "=", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{"subList0", ",", 
          RowBox[{"1", "\[Rule]", 
           RowBox[{"{", "0", "}"}]}]}], "]"}]}]}], "]"}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"clif", "===", "0"}], "||", 
        RowBox[{"clif", "===", "0."}]}], ",", 
       RowBox[{"subList1", "=", 
        RowBox[{"{", 
         RowBox[{"{", "0", "}"}], "}"}]}]}], "]"}], ";", "\n", "\t\t", 
     "subList1"}]}], "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691073072029634*^9, 3.691073593702551*^9, 
   3.691073646277369*^9, 3.691073715183025*^9, 3.691073841869029*^9, 
   3.691073879917136*^9, {3.6910742437762337`*^9, 3.691074246906845*^9}, {
   3.691074290856971*^9, 3.691074316518396*^9}, {3.6910744297152367`*^9, 
   3.691074443783609*^9}, {3.691162438368594*^9, 3.691162439095743*^9}, {
   3.691170784724188*^9, 3.691170784737091*^9}, {3.691172107600281*^9, 
   3.69117210875049*^9}, {3.69117217676159*^9, 3.69117217756246*^9}, {
   3.691186175811736*^9, 3.691186240509141*^9}, {3.6911863220181017`*^9, 
   3.691186342619071*^9}, {3.691186860551017*^9, 3.691186885817286*^9}, {
   3.6911869374333963`*^9, 3.691186957803356*^9}, {3.691187267589674*^9, 
   3.691187269091288*^9}, 3.6911876076994667`*^9, 3.691194078836825*^9, {
   3.69123905595233*^9, 3.691239088063758*^9}, {3.6912396252805967`*^9, 
   3.6912396595078773`*^9}, {3.6913468213348417`*^9, 3.691346822963201*^9}, 
   3.69134686343079*^9, {3.6919605972351103`*^9, 3.6919605985651608`*^9}, {
   3.691964605845388*^9, 3.691964662916381*^9}, 3.691964821186797*^9, {
   3.691965053055522*^9, 3.691965054206366*^9}, {3.691966447426881*^9, 
   3.691966484567197*^9}, {3.691967520794083*^9, 3.6919675585617228`*^9}, {
   3.6925522526829567`*^9, 3.692552262554408*^9}, {3.692552773240591*^9, 
   3.692552773991585*^9}, {3.692552804201651*^9, 3.69255280513661*^9}, {
   3.692558758533824*^9, 3.692558827881638*^9}, 3.692564762791512*^9, 
   3.6925666114553967`*^9, {3.6925672580099583`*^9, 3.692567393184073*^9}, {
   3.692567425965393*^9, 3.6925676479457617`*^9}, 3.692567720117198*^9, {
   3.692567896272674*^9, 3.69256790928052*^9}, 3.6934106839781847`*^9, {
   3.693411986954101*^9, 3.693411988757691*^9}, {3.693417359168449*^9, 
   3.6934175236812973`*^9}, {3.693417557086903*^9, 3.69341763378249*^9}, {
   3.6934176783021793`*^9, 3.69341782175448*^9}, {3.693418103596665*^9, 
   3.6934181102791643`*^9}, {3.693443146160388*^9, 3.693443186745969*^9}, {
   3.693443548164789*^9, 3.6934435594356194`*^9}, {3.6934436886072607`*^9, 
   3.693443717962111*^9}, {3.693490456395357*^9, 3.6934905717656*^9}, {
   3.6934913056357822`*^9, 3.6934914448614283`*^9}, {3.693491491895162*^9, 
   3.693491537749947*^9}, {3.693492667380725*^9, 3.6934926825194273`*^9}, {
   3.6934968008187*^9, 3.69349681394088*^9}, {3.693497501118395*^9, 
   3.69349751018495*^9}, {3.6934978562789583`*^9, 3.6934978645326557`*^9}, 
   3.693497972594495*^9, {3.6934980060771503`*^9, 3.693498066229618*^9}, {
   3.6934981182511063`*^9, 3.69349828395382*^9}, 3.693498347529374*^9, 
   3.69349838044261*^9, 3.693498422994424*^9, 3.6934985670874567`*^9, {
   3.693498618360155*^9, 3.69349865227641*^9}, {3.693498684079303*^9, 
   3.6934987639094276`*^9}, {3.693499309336701*^9, 3.693499612707046*^9}, {
   3.693500448678697*^9, 3.693500469251882*^9}, {3.693500533671541*^9, 
   3.6935005771228027`*^9}, {3.693500823866571*^9, 3.69350083530978*^9}, {
   3.6935024583206997`*^9, 3.693502473223585*^9}, {3.695732480854957*^9, 
   3.6957324880714073`*^9}, {3.695734132320497*^9, 3.695734165831356*^9}, 
   3.695744699760768*^9, {3.695771628866851*^9, 3.6957717596908207`*^9}, {
   3.695772348781991*^9, 3.695772358110436*^9}, {3.695772418037466*^9, 
   3.6957724439927273`*^9}, {3.6957728698124027`*^9, 3.695772871908252*^9}, {
   3.695818987207073*^9, 3.695819126448515*^9}, {3.6958191582355537`*^9, 
   3.695819780442247*^9}, {3.6958198632271633`*^9, 3.695819867799015*^9}, 
   3.69581991329774*^9, {3.6958199486090107`*^9, 3.69582002104081*^9}, {
   3.695820087154109*^9, 3.695820136559053*^9}, {3.695820258665784*^9, 
   3.6958203616080933`*^9}, {3.695820392358898*^9, 3.6958204073670187`*^9}, {
   3.695820461533586*^9, 3.6958205222839108`*^9}, {3.6958214522022142`*^9, 
   3.695821481503334*^9}, {3.695822111203779*^9, 3.6958222102344646`*^9}, {
   3.695822245876869*^9, 3.695822253690641*^9}, 3.69582702881758*^9, {
   3.695828502413268*^9, 3.695828800129489*^9}, {3.6958290917200108`*^9, 
   3.6958291355736217`*^9}, {3.695829175597875*^9, 3.695829212883546*^9}, {
   3.6958429905868073`*^9, 3.695843147978652*^9}, {3.695843209498517*^9, 
   3.695843281810257*^9}, {3.6958433238679934`*^9, 3.695843328865196*^9}, {
   3.695843371424499*^9, 3.695843448649987*^9}, 3.695845757536249*^9, {
   3.695845867452508*^9, 3.695846018810631*^9}, {3.695846080287752*^9, 
   3.69584608701797*^9}, {3.695846164021183*^9, 3.695846165532172*^9}, 
   3.6958463230976543`*^9, 3.695846422278957*^9, {3.695846628352573*^9, 
   3.695846832338709*^9}, {3.695846872342218*^9, 3.695846897903164*^9}, {
   3.6958470279161377`*^9, 3.695847028945857*^9}, {3.69584852180669*^9, 
   3.695848544152446*^9}, {3.695848767934144*^9, 3.695848883506884*^9}, {
   3.695849261029049*^9, 3.695849476686075*^9}, {3.695849556546075*^9, 
   3.695849631367141*^9}, {3.695849662025731*^9, 3.695849663434252*^9}, {
   3.695849777255155*^9, 3.695849779222843*^9}, {3.695850880477881*^9, 
   3.6958508837858257`*^9}, {3.695850944472471*^9, 3.6958509469048758`*^9}, {
   3.695914230062276*^9, 3.695914261128736*^9}, {3.695999947361558*^9, 
   3.69599996022007*^9}, {3.696000688932384*^9, 3.696000729967718*^9}, {
   3.696077451991584*^9, 3.6960774714248323`*^9}, 3.696077506171508*^9, {
   3.696079191227707*^9, 3.696079243169139*^9}, {3.6960798318532543`*^9, 
   3.696079862259411*^9}, {3.6960800176486273`*^9, 3.696080040698516*^9}, {
   3.696080077108054*^9, 3.696080078954493*^9}, {3.696080683388695*^9, 
   3.696080765408646*^9}, {3.6960808229347677`*^9, 3.696080832050459*^9}, {
   3.6960813661513977`*^9, 3.696081368828742*^9}, {3.6960832969098387`*^9, 
   3.696083573127898*^9}, {3.6960836204468184`*^9, 3.696083634472033*^9}, {
   3.696083710785329*^9, 3.696083971130752*^9}, 3.696084003829397*^9, {
   3.696092724460294*^9, 3.696092765241118*^9}, {3.6960941601733437`*^9, 
   3.696094199247642*^9}, {3.696095429987636*^9, 3.696095441990737*^9}, {
   3.696095581681726*^9, 3.6960956077677526`*^9}, 3.696095732753447*^9, 
   3.696095845811886*^9, 3.696095900684404*^9, 3.69609602167353*^9, 
   3.696096192899143*^9, {3.696096261005837*^9, 3.696096267845666*^9}, {
   3.696096341092718*^9, 3.696096344172612*^9}, 3.696097295128721*^9, {
   3.69609752315829*^9, 3.696097553673802*^9}, {3.696098016126671*^9, 
   3.696098018403373*^9}, {3.696098107686864*^9, 3.69609813636646*^9}, {
   3.6960982640562572`*^9, 3.696098265319688*^9}, {3.6960991419793043`*^9, 
   3.69609929013301*^9}, {3.696105996528091*^9, 3.696106029050375*^9}, {
   3.6961064815884943`*^9, 3.6961064985733547`*^9}, {3.696106559630352*^9, 
   3.696106570807624*^9}, 3.6961066275346193`*^9, {3.6961067061453533`*^9, 
   3.696106772161428*^9}, {3.696107448379942*^9, 3.696107449119595*^9}, 
   3.696107556143742*^9, {3.696107590644492*^9, 3.696107595878331*^9}, {
   3.6961076489518414`*^9, 3.696107781891183*^9}, {3.696108236511135*^9, 
   3.6961082705853653`*^9}, {3.6961083550316896`*^9, 3.6961083753345213`*^9}, 
   3.696108868455888*^9, {3.6961095699742727`*^9, 3.696109583995894*^9}, {
   3.696109623412315*^9, 3.696109700457329*^9}, {3.696109758956052*^9, 
   3.696109768001793*^9}, {3.696115021540352*^9, 3.696115073008628*^9}, {
   3.696116068411652*^9, 3.696116078458647*^9}, {3.696116135893812*^9, 
   3.696116147204878*^9}, {3.696116199907048*^9, 3.69611628655879*^9}, {
   3.6961165133245907`*^9, 3.696116515503356*^9}, {3.696116560813384*^9, 
   3.6961165864880743`*^9}, {3.69611678952264*^9, 3.6961169057615*^9}, {
   3.696204706942729*^9, 3.696204763748204*^9}, {3.69620479805543*^9, 
   3.696204804511096*^9}, {3.696204935753037*^9, 3.696205018021299*^9}, {
   3.696205053745636*^9, 3.696205111703528*^9}, {3.696205211533939*^9, 
   3.696205296285767*^9}, {3.696206059646842*^9, 3.696206091712418*^9}, {
   3.696206796496337*^9, 3.69620680087278*^9}, {3.696272822845186*^9, 
   3.696272971561103*^9}, {3.6962848887017403`*^9, 3.6962848965492268`*^9}, {
   3.6962915504015493`*^9, 3.696291555336377*^9}, {3.6962916032501917`*^9, 
   3.696291670230001*^9}, {3.696291765660165*^9, 3.696291835616476*^9}, {
   3.6962919890585337`*^9, 3.696291995521372*^9}, {3.696292040384646*^9, 
   3.696292046320023*^9}, {3.6962920965108433`*^9, 3.696292114499303*^9}, {
   3.696292166058732*^9, 3.696292311499179*^9}, {3.69629270478833*^9, 
   3.696292709054996*^9}, {3.69636534219699*^9, 3.696365362711913*^9}, {
   3.696365408274908*^9, 3.6963657199616337`*^9}, {3.6963657602088346`*^9, 
   3.696365761568491*^9}, {3.696365845633854*^9, 3.696365981402483*^9}, 
   3.6963660250052853`*^9, 3.6963661267142267`*^9, {3.696366159493038*^9, 
   3.696366170037991*^9}, {3.6963666047367153`*^9, 3.696366610560445*^9}, 
   3.696366641357057*^9, 3.696367211677112*^9, {3.696367246925178*^9, 
   3.696367437925397*^9}, {3.696548884036927*^9, 3.696548885121347*^9}, {
   3.696552602347845*^9, 3.6965526140995007`*^9}, {3.6966172957725677`*^9, 
   3.6966172971196413`*^9}, {3.696617543681409*^9, 3.696617545117868*^9}, {
   3.696617587466963*^9, 3.6966176499101467`*^9}, {3.696617692034759*^9, 
   3.6966178125525513`*^9}, {3.696852954105671*^9, 3.696852957077058*^9}, {
   3.696853043439715*^9, 3.696853092917054*^9}, {3.69685319286651*^9, 
   3.696853235938266*^9}, {3.696853331082515*^9, 3.696853413877496*^9}, {
   3.6968560003692627`*^9, 3.696856014825593*^9}, {3.696856082935842*^9, 
   3.696856085796195*^9}, {3.696856199957531*^9, 3.696856200811823*^9}, {
   3.696856265740015*^9, 3.696856270146689*^9}, 3.696856301485545*^9, {
   3.696967970669462*^9, 3.696967977461548*^9}, 3.774983194901113*^9, 
   3.774983534721156*^9, 3.774984231070174*^9, 3.774988838537615*^9, {
   3.775041528327669*^9, 3.7750415310040693`*^9}, {3.775069128908887*^9, 
   3.775069181434593*^9}, {3.7750694126021767`*^9, 3.7750694961842327`*^9}, {
   3.7750695518788347`*^9, 3.77506956329041*^9}, {3.775069603711485*^9, 
   3.7750697771678534`*^9}, {3.775069822781452*^9, 3.7750698344573603`*^9}, 
   3.7750699100205507`*^9, {3.7750699466882563`*^9, 3.775069989434929*^9}, 
   3.7750701330888977`*^9, {3.775070171485289*^9, 3.7750702060763817`*^9}, {
   3.775070243769985*^9, 3.775070597555389*^9}, {3.77507063080827*^9, 
   3.77507064285398*^9}, {3.775070681214813*^9, 3.775070757315298*^9}, {
   3.775070805968067*^9, 3.775070854719051*^9}, {3.775073781007833*^9, 
   3.775073781924988*^9}, {3.775073875049098*^9, 3.775073902676074*^9}, {
   3.7750741659517384`*^9, 3.775074188999426*^9}, {3.775075418755673*^9, 
   3.775075446705371*^9}, {3.775130445281828*^9, 3.7751306088286457`*^9}, 
   3.775130708922872*^9, {3.775130785274643*^9, 3.775130819407078*^9}, 
   3.775130923095302*^9, 3.7751360453612843`*^9, 3.7751418038723288`*^9, {
   3.775142692407929*^9, 3.775142726233981*^9}, 3.775142785908558*^9, {
   3.775142836559381*^9, 3.775142858910447*^9}, {3.775144138966249*^9, 
   3.77514415249166*^9}, {3.775164357848298*^9, 3.775164399446685*^9}, {
   3.775164519086679*^9, 3.7751645793016376`*^9}, {3.775164634580817*^9, 
   3.7751647528518744`*^9}, {3.775165088145938*^9, 3.775165252269545*^9}, {
   3.775165289610052*^9, 3.775165448632872*^9}, {3.7751655260362453`*^9, 
   3.7751655977607203`*^9}, {3.775165634687776*^9, 3.775165786862913*^9}, {
   3.775165913022513*^9, 3.775165968832308*^9}, {3.775166027450842*^9, 
   3.775166176795059*^9}, {3.775166293809524*^9, 3.775166344584263*^9}, {
   3.775166424124844*^9, 3.7751665204521112`*^9}, {3.7751665683876762`*^9, 
   3.7751666114612103`*^9}, {3.7751669665435467`*^9, 3.775167010116263*^9}, {
   3.775167091848201*^9, 3.775167092366744*^9}, {3.775167129100678*^9, 
   3.77516712979519*^9}, {3.77516727961337*^9, 3.775167289617652*^9}, {
   3.775234717997982*^9, 3.775234721199275*^9}, {3.775250008847158*^9, 
   3.775250028151617*^9}, {3.77525009412156*^9, 3.775250113444038*^9}, 
   3.775250151922061*^9, {3.775250196808886*^9, 3.775250266159459*^9}, {
   3.77525029769523*^9, 3.7752503709205627`*^9}, {3.775250402288848*^9, 
   3.775250416898733*^9}, {3.775250519660042*^9, 3.7752505348493977`*^9}, {
   3.77525057150187*^9, 3.775250594309618*^9}, {3.775250651394841*^9, 
   3.775250673276944*^9}, {3.775250704838037*^9, 3.77525072342863*^9}, {
   3.7752508691312437`*^9, 3.7752508998760843`*^9}, {3.7752509321920567`*^9, 
   3.775250985423485*^9}, {3.775251067008951*^9, 3.775251151972698*^9}, {
   3.775251184532469*^9, 3.775251240094639*^9}, {3.775251351017001*^9, 
   3.775251401750063*^9}, {3.775251453943891*^9, 3.775251469101502*^9}, {
   3.775251506361415*^9, 3.7752516635893307`*^9}, 3.775251738212207*^9, {
   3.7752517706157837`*^9, 3.775251772383189*^9}, 3.7752518143740892`*^9, {
   3.775251856999762*^9, 3.775251905254834*^9}, {3.775252030636405*^9, 
   3.775252056994484*^9}, {3.775252107671817*^9, 3.775252208529463*^9}, {
   3.775252338564179*^9, 3.775252343126567*^9}, {3.7752523803139753`*^9, 
   3.77525254883212*^9}, {3.7752526060969954`*^9, 3.775252627443761*^9}, {
   3.775253412687599*^9, 3.7752535363879137`*^9}, {3.775253577585705*^9, 
   3.7752536357168627`*^9}, 3.77525409241928*^9, {3.775258192304435*^9, 
   3.7752582103437653`*^9}, {3.775258338920985*^9, 3.775258520398345*^9}, 
   3.775258584767435*^9, {3.775258644275982*^9, 3.775258664751585*^9}, 
   3.775258707908687*^9, {3.775258760369928*^9, 3.775258888275958*^9}, {
   3.7753123936801357`*^9, 3.775312417125251*^9}, {3.7753124606005173`*^9, 
   3.775312496288683*^9}, {3.775312551946059*^9, 3.775312557216751*^9}, {
   3.775312751348441*^9, 3.7753127878395967`*^9}, {3.775312826653365*^9, 
   3.775312830363646*^9}, {3.775312893529004*^9, 3.7753128953370934`*^9}, {
   3.775312957075389*^9, 3.775312958310912*^9}, {3.775313070256165*^9, 
   3.775313071112109*^9}, {3.7753131094289513`*^9, 3.775313126897434*^9}, {
   3.775313161832864*^9, 3.775313310452938*^9}, {3.775313342913369*^9, 
   3.775313345983665*^9}, {3.77531347504224*^9, 3.775313514246195*^9}, {
   3.775313578825004*^9, 3.7753136062030983`*^9}, {3.7753136520858793`*^9, 
   3.775313662039345*^9}, {3.775313759709251*^9, 3.775314037962739*^9}, {
   3.7753140835332403`*^9, 3.775314110825018*^9}, {3.775314209286602*^9, 
   3.77531428557141*^9}, 3.7753143202796097`*^9, {3.775315211256535*^9, 
   3.775315230208313*^9}, {3.775315268812304*^9, 3.775315271098988*^9}, {
   3.775315303087058*^9, 3.775315303382648*^9}, 3.775319966434836*^9, {
   3.77532300022826*^9, 3.775323001980225*^9}, {3.775323289307768*^9, 
   3.7753233629831038`*^9}, {3.7753233932881937`*^9, 
   3.7753234512190123`*^9}, {3.775323493170417*^9, 3.775323547860589*^9}, 
   3.775323603043055*^9, {3.7753236635521793`*^9, 3.7753237222019243`*^9}, {
   3.775323764112444*^9, 3.775323780970166*^9}, {3.775323889306634*^9, 
   3.775324045222172*^9}, {3.7754262898626347`*^9, 3.775426297971507*^9}, {
   3.7754263358231897`*^9, 3.775426403735776*^9}, {3.775941273738418*^9, 
   3.775941275578945*^9}, {3.7759413390025673`*^9, 3.7759414151492777`*^9}, 
   3.775944965732349*^9, {3.775945388379376*^9, 3.775945398464837*^9}, {
   3.775945651861813*^9, 3.775945657653391*^9}, {3.775945870633864*^9, 
   3.7759458729558353`*^9}, {3.7759464458169317`*^9, 3.775946472292601*^9}, 
   3.776001751262906*^9, {3.776001792651334*^9, 3.776001911433197*^9}, {
   3.776001946340021*^9, 3.7760019751845083`*^9}, {3.776002042323656*^9, 
   3.776002064459176*^9}, {3.7760021065364428`*^9, 3.776002154634845*^9}, 
   3.776005376721629*^9},
 CellLabel->
  "In[236]:=",ExpressionUUID->"0cd99394-7461-4bed-8931-53bb46a7c3e7"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "7 Secondary Geometric Algebra Operations:\n",
 StyleBox["\tHodge Dual, Norm, Gorm, Reverse, Inverse", "Subchapter"]
}], "Chapter",
 CellChangeTimes->{{3.6910744651461782`*^9, 3.691074524520515*^9}, {
  3.777991856354135*^9, 
  3.777991857764748*^9}},ExpressionUUID->"c4071c67-5988-4b9c-9562-\
4d1442c8ccac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GormG", "[", "clif_", "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"ScalarPrdtG", "[", 
     RowBox[{
      RowBox[{"ReverseG", "[", "clif", "]"}], ",", "clif"}], "]"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HodgeDualG", "[", 
    RowBox[{"clif_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"clif", "\[Diamond]", 
    RowBox[{"PseudoScalarG", "[", "n", "]"}]}]}], "  ", 
  RowBox[{"(*", "\n", "\n", 
   RowBox[{
    RowBox[{"INPUTS", ":", " ", 
     RowBox[{
     "A", " ", "clif", " ", "and", " ", "space", " ", "dimension", " ", "n", 
      "\n", "\n", "METHOD"}], ":", " ", 
     RowBox[{"The", " ", "Hodge", " ", "Dual", " ", 
      RowBox[{"(", 
       RowBox[{"or", " ", "Hodge", " ", "Star"}], ")"}], " ", "of", " ", "a", 
      " ", "clif"}]}], ",", " ", "clif2", ",", " ", 
    RowBox[{
     RowBox[{"of", " ", "grade", " ", "p"}], " ", "\[LessEqual]", 
     RowBox[{
     "n", " ", "is", " ", "the", " ", "unique", " ", "\n", "\t", "clif"}]}], 
    ",", " ", 
    RowBox[{"\[Star]", "clif2"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"that", " ", "satisfies", "\n", "\t\t", 
       RowBox[{"clif1", " ", "\[Wedge]"}]}], " ", "\[Star]", "clif2"}], " ", 
     "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"clif1", " ", "\[CenterDot]", " ", "clif2"}], ")"}], " ", 
       "\[Diamond]", " ", "i"}], "  ", "for", " ", "every", " ", "clif1", " ",
       "of", " ", "same", " ", "grade", " ", "as", " ", "clif2"}]}], ",", 
    "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
        "where", " ", "i", " ", "is", " ", "the", " ", "PseudoScalar", " ", 
         SubscriptBox["e", "1"], 
         SubscriptBox["e", "2"]}], "..."}], 
       SubscriptBox["e", "n"], "\n", "\t", "\n", "\t", "This", " ", 
       "definition", " ", "extends", " ", "linearly", " ", "to", " ", "a", 
       " ", "general", " ", "clif", " ", "of", " ", "dimension", " ", "n", 
       " ", "which", "\n", "\t", "is", " ", "the", " ", "sum", " ", "of", " ",
        "blades", " ", "of", " ", "grades", " ", "0"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"n", ".", "\n", "\t", "\n", "\t", "This"}], " ", "package", 
       " ", "can", " ", "be", " ", "used", " ", "to", " ", "check", " ", 
       "that", " ", "the", " ", "following", " ", "definition", " ", 
       "satisfies", " ", "\n", "\t", "the", " ", 
       RowBox[{"condition", ":", "\n", "\t\t", 
        RowBox[{"*", "clif2"}]}]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"clif2", " ", "\[Diamond]", " ", "i"}], "\n", "\t", "\n", "\t", 
      
      RowBox[{"Note", ":", " ", 
       RowBox[{"i", " ", "\[Diamond]", " ", "clif2"}]}]}]}], ",", " ", 
    RowBox[{
     SuperscriptBox["i", 
      RowBox[{"-", "1", " "}]], "\[Diamond]", " ", "clif2"}], ",", " ", 
    RowBox[{"and", " ", 
     RowBox[{"clif2", " ", "\[Diamond]", " ", 
      SuperscriptBox["i", 
       RowBox[{"-", "1"}]]}], " ", "all", " ", "fail", " ", "to", " ", 
     "satisfy", " ", "this", " ", "condition", "\n", "\t\t", "The", " ", "3", 
     "rd", " ", "product", " ", "is", " ", "sometimes", " ", "used", " ", 
     "in", " ", "books", " ", "and", " ", "so", " ", "is", " ", "the", " ", 
     "alternate", " ", "definition"}], ",", " ", 
    RowBox[{"below", "\n", "\n", 
     RowBox[{"OUTPUT", ":", " ", 
      RowBox[{
      "The", " ", "Hodge", " ", "Dual", " ", "of", " ", "clif"}]}]}]}], "  ", 
   "*)"}], "\n", "  ", "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "HodgeDualG"}], "  ", "*)"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"HodgeDual2G", "[", 
    RowBox[{"clif_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"clif", "\[Diamond]", 
    RowBox[{"InverseG", "[", 
     RowBox[{"PseudoScalarG", "[", "n", "]"}], "]"}]}]}], " ", "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"Alternate", " ", "version"}], " ", "*)"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseG", "[", "clif_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gormClif", ",", "clifInv"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"gormClif", "=", 
       RowBox[{"GormG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"gormClif", "===", "0"}], "||", 
           RowBox[{"gormClif", "===", "0."}]}], ")"}], "&&", 
         RowBox[{"NumberQ", "[", "gormClif", "]"}]}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"clif", ",", "\"\< has no inverse\>\""}], "]"}], ";", 
         RowBox[{"clifInv", "=", "\"\<\>\""}]}], ",", "\n", "\t\t\t", 
        RowBox[{"clifInv", "=", 
         RowBox[{
          RowBox[{"ReverseG", "[", "clif", "]"}], "/", "gormClif"}]}]}], "\n",
        "\t\t", "]"}], ";", "\n", "\t\t", "clifInv"}]}], "\n", "\t", "]"}]}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NormG", "[", "clif_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Abs", "[", 
     RowBox[{"GormG", "[", "clif", "]"}], "]"}], "]"}]}], "   ", 
  RowBox[{"(*", 
   RowBox[{"/;", 
    RowBox[{
     RowBox[{"NumberQ", "[", 
      RowBox[{"GormG", "[", "clif", "]"}], "]"}], "\[Equal]", "True"}]}], 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReverseG", "[", "0", "]"}], ":=", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReverseG", "[", "clif_", "]"}], ":=", "\n", 
   RowBox[{"(*", "\n", "\t", 
    RowBox[{
     RowBox[{"INPUT", ":", " ", 
      RowBox[{"A", " ", "clif", "  ", "Example"}], ":", " ", 
      RowBox[{"3", " ", "+", " ", 
       SubscriptBox["e", "2"], " ", "+", " ", 
       RowBox[{
        SubscriptBox["e", "2"], 
        SubscriptBox[
         RowBox[{"e", " "}], "3"]}], " ", "+", " ", 
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"], 
        SubscriptBox["e", "3"], 
        SubscriptBox["e", "4"]}], " ", "+", " ", 
       RowBox[{
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "3"], 
        SubscriptBox["e", "5"], "\n", "\t", 
        RowBox[{"PROCESS", ":", "\n", "\t\t", 
         RowBox[{
         "Use", " ", "ClifToListG", " ", "to", " ", "get", " ", "a", " ", 
          "list", " ", "of", " ", "clif", " ", "terms"}]}]}]}]}], ",", " ", 
     RowBox[{"like", " ", 
      RowBox[{"{", 
       RowBox[{"3", ",", 
        SubscriptBox["e", "2"], ",", 
        RowBox[{
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "3"]}], ",", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "2"], " ", 
         SubscriptBox["e", "3"], " ", 
         SubscriptBox["e", "4"]}], ",", 
        RowBox[{
         SubscriptBox["e", "1"], " ", 
         SubscriptBox["e", "3"], " ", 
         SubscriptBox["e", "5"]}]}], "}"}], "\n", "\t\t", "Use", " ", 
      "SubscriptListG", " ", "to", " ", "get", " ", "list", " ", "of", " ", 
      "subscripts"}], ",", " ", 
     RowBox[{"like", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", " ", 
        RowBox[{"{", "2", "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "3"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2", ",", " ", "3", ",", " ", "4"}], "}"}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "3", ",", " ", "5"}], "}"}]}], "}"}], "\n", 
      "\t\t", "Use", " ", "Reverse", " ", "to", " ", "get", " ", "reversed", 
      " ", "list", " ", "of", " ", "subscripts"}], ",", " ", 
     RowBox[{"like", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{"{", "2", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "3", ",", "1"}], "}"}]}], "}"}], "\n", "\t\t", 
      "Use", " ", "Signature", " ", "to", " ", "determine", " ", "whether", 
      " ", "reversed", " ", "members", " ", "are", " ", "even", " ", 
      RowBox[{"(", 
       RowBox[{"+", "1"}], ")"}], " ", "or", " ", "odd", " ", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], " ", "permustiions", "\n", "\t\t", 
      "Multiply", " ", "the", " ", "clif", " ", "list", " ", "by", " ", "the",
       " ", "signature", " ", "list", " ", "and", " ", "convert", " ", 
      "result", " ", "to", " ", "a", " ", "multivector", " ", "expression", 
      " ", "\n", "\t", 
      RowBox[{"OUTPUT", ":", " ", 
       RowBox[{"The", " ", "reverse", " ", "clif"}]}]}]}], "\n", "*)"}], "\n",
    "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clifList", ",", "subscriptList", ",", "reverseList", ",", 
       "signatureList", ",", "reverseClif"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"clifList", "=", 
       RowBox[{"ClifToListG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"subscriptList", "=", 
       RowBox[{"SubscriptListG", "[", "clif", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"reverseList", "=", 
       RowBox[{"Reverse", "/@", "subscriptList"}]}], ";", "\n", "\t\t", 
      RowBox[{"signatureList", "=", 
       RowBox[{"Signature", "/@", "reverseList"}]}], ";", "\n", "\t\t", 
      RowBox[{"reverseClif", "=", 
       RowBox[{"signatureList", ".", "clifList"}]}], ";", "\n", "\n", "\t\t", 
      
      RowBox[{"If", "[", 
       RowBox[{"debug7", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<ReverseG: List of \>\"", ",", "clif", ",", "\"\< = \>\"", ",", 
           "clifList"}], "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Subscript list = \>\"", ",", "subscriptList"}], "]"}], 
         ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<List of reversed subscripts = \>\"", ",", "reverseList"}], 
          "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Signature List = \>\"", ",", "signatureList", ",", 
           "\"\< is \[PlusMinus]1, measuring # of pairwise transpositions \
\>\"", ",", "\n", "\t\t\t\t  ", 
           "\"\<to restore reverse list to original\>\""}], "]"}], ";", "\n", 
         "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Reverse of clif = \>\"", ",", "reverseClif"}], 
          "]"}]}]}], "\n", "\t\t", "]"}], ";", "\n", "\t\t", 
      "reverseClif"}]}], "\n", "\t", "]"}]}], 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "ReverseG", " ", "Module"}], "  ", 
   "*)"}]}], "\n", 
 RowBox[{"\t\t"}]}], "Code",
 CellChangeTimes->{
  3.690747757040749*^9, {3.690748490480057*^9, 3.690748533266705*^9}, {
   3.690748589310161*^9, 3.690748676533189*^9}, {3.690748711277614*^9, 
   3.690748724874229*^9}, 3.690748769560217*^9, {3.69074882554303*^9, 
   3.6907488477566643`*^9}, {3.690748898478891*^9, 3.69074893641199*^9}, {
   3.690749566683033*^9, 3.6907495675450068`*^9}, {3.6907496044403343`*^9, 
   3.6907496441958847`*^9}, {3.6907497984815273`*^9, 3.690749801647601*^9}, {
   3.690749851999959*^9, 3.690749853857938*^9}, {3.6907498945024633`*^9, 
   3.690749904185855*^9}, {3.69075005859556*^9, 3.6907501027475843`*^9}, {
   3.690750148212007*^9, 3.690750180370227*^9}, 3.6907502142192907`*^9, 
   3.690750294122267*^9, {3.690750331922277*^9, 3.6907503341286507`*^9}, {
   3.690750463120143*^9, 3.6907504722444353`*^9}, 3.690750512690455*^9, 
   3.690750758023849*^9, {3.690750862902231*^9, 3.6907509050128117`*^9}, 
   3.690750942834445*^9, {3.690751017213744*^9, 3.690751018396122*^9}, {
   3.6907510636952963`*^9, 3.69075109579827*^9}, {3.690751366334424*^9, 
   3.690751377820384*^9}, {3.690751492969201*^9, 3.690751499942731*^9}, {
   3.690751613478297*^9, 3.690751631150628*^9}, {3.6910650969980907`*^9, 
   3.691065104379283*^9}, {3.691068118576837*^9, 3.691068119447476*^9}, {
   3.691068402882535*^9, 3.691068409242165*^9}, 3.691072198675054*^9, 
   3.6910722815485487`*^9, 3.69107237755156*^9, 3.691072411380519*^9, 
   3.691072484309104*^9, {3.691072537083869*^9, 3.691072551876346*^9}, {
   3.691072610298726*^9, 3.691072636344965*^9}, 3.691072666710598*^9, 
   3.6910730313977747`*^9, 3.691073072029634*^9, 3.691073593702551*^9, 
   3.691073646277369*^9, 3.691073715183025*^9, 3.691073841869029*^9, 
   3.691073879917136*^9, {3.6910742437762337`*^9, 3.691074246906845*^9}, {
   3.691074290856971*^9, 3.691074316518396*^9}, {3.6910744297152367`*^9, 
   3.691074443783609*^9}, 3.691074602123973*^9, 3.6910746412377787`*^9, 
   3.691162439749679*^9, 3.6911707847484303`*^9, {3.691239783051281*^9, 
   3.6912398212811213`*^9}, {3.691239898618672*^9, 3.691239981128207*^9}, {
   3.691346925733223*^9, 3.69134692898641*^9}, {3.691794215825245*^9, 
   3.691794232320211*^9}, 3.6917943056426888`*^9, 3.6924783516797247`*^9, {
   3.692486101079296*^9, 3.6924861300656633`*^9}, {3.692486225188567*^9, 
   3.6924862592737827`*^9}, {3.6925522732831287`*^9, 3.692552287060831*^9}, {
   3.692552820556539*^9, 3.69255283101068*^9}, {3.692552919113789*^9, 
   3.692552935368544*^9}, {3.6957475999325943`*^9, 3.695747632417718*^9}, {
   3.695820792813661*^9, 3.695820799061962*^9}, {3.69582086515193*^9, 
   3.6958209416138887`*^9}, {3.695820986949973*^9, 3.695820989092721*^9}, {
   3.695821045899899*^9, 3.695821111449418*^9}, {3.6958211611208277`*^9, 
   3.695821184327961*^9}, {3.6958226576993923`*^9, 3.6958226605376577`*^9}, {
   3.695827454326144*^9, 3.6958274584079123`*^9}, {3.695829238949929*^9, 
   3.6958292979730177`*^9}, {3.695847124732131*^9, 3.6958472694464397`*^9}, {
   3.6958473536178102`*^9, 3.695847354561248*^9}, {3.695847601124522*^9, 
   3.695847614345902*^9}, {3.695847717671761*^9, 3.695847718382951*^9}, {
   3.695848114415719*^9, 3.69584818645916*^9}, {3.695848950848604*^9, 
   3.695849035745556*^9}, {3.695849104693282*^9, 3.6958491719580927`*^9}, {
   3.695850254555883*^9, 3.695850402314972*^9}, 3.695999963121153*^9, {
   3.696000741630728*^9, 3.696000748004396*^9}, {3.696108486545052*^9, 
   3.696108501059379*^9}, {3.696116337101284*^9, 3.696116360636071*^9}, {
   3.696284321562648*^9, 3.696284359003634*^9}, {3.6968072880913963`*^9, 
   3.696807292377239*^9}, {3.6968081444257383`*^9, 3.696808150919499*^9}, {
   3.696856550026471*^9, 3.696856577050351*^9}, {3.6968568844912663`*^9, 
   3.6968569091655607`*^9}, {3.6968712561572113`*^9, 3.696871337270104*^9}, {
   3.69687184472225*^9, 3.6968718970706663`*^9}, {3.696871967178689*^9, 
   3.696872303860433*^9}, {3.69687233470337*^9, 3.696872344219792*^9}, {
   3.696872375712117*^9, 3.696872772140077*^9}, {3.696884823967904*^9, 
   3.696884829901882*^9}, {3.6970253363654413`*^9, 3.6970253846098824`*^9}, {
   3.697026777390379*^9, 3.697026807895303*^9}, {3.6970268796534777`*^9, 
   3.697026884393711*^9}, {3.697026928707107*^9, 3.697026943630897*^9}, {
   3.697026974780508*^9, 3.697027001989422*^9}, {3.697027075514344*^9, 
   3.697027085099351*^9}, {3.69702712918753*^9, 3.697027232395236*^9}, {
   3.774994644379012*^9, 3.774994659893199*^9}, {3.7749948920316896`*^9, 
   3.7749948931602993`*^9}, {3.7753254535352373`*^9, 3.775325455474881*^9}, {
   3.777902650602956*^9, 3.777902773198567*^9}, {3.777902813102227*^9, 
   3.7779028998137503`*^9}, 3.777902964718421*^9, {3.777903084260754*^9, 
   3.777903088928753*^9}, 3.777903161725328*^9, {3.777904325817721*^9, 
   3.777904335678358*^9}, {3.777906010403845*^9, 3.7779060197263536`*^9}, {
   3.7779101254904413`*^9, 3.777910148807599*^9}, {3.777923034137865*^9, 
   3.7779230354104967`*^9}, 3.777987789227755*^9},
 CellLabel->
  "In[246]:=",ExpressionUUID->"adb2e33b-3392-4e4d-adae-ed10dbc77e4d"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "8 Geometric Algebra Operations\n",
 StyleBox["\tGeometric Product, Dot Product, Wedge Product, \n\tLeft \
Contraction", "Subchapter"]
}], "Chapter",
 CellChangeTimes->{{3.691074731420932*^9, 3.691074785577688*^9}, {
  3.777916275512241*^9, 3.777916278174426*^9}, {3.777922920264551*^9, 
  3.777922921650095*^9}, {3.777923273827155*^9, 3.7779232756493893`*^9}, {
  3.777923976774259*^9, 3.77792397856572*^9}, {3.777924020478815*^9, 
  3.777924021012012*^9}},ExpressionUUID->"5ad0718c-8782-4e67-ac94-\
06033f01f375"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrdtG", "[", 
   RowBox[{"0", ",", " ", "x_", ",", " ", "p_"}], "]"}], " ", ":=", " ", 
  "0"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PrdtG", "[", 
    RowBox[{"x_", ",", " ", "0", ",", " ", "p_"}], "]"}], " ", ":=", " ", 
   "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PrdtG", "[", 
    RowBox[{"clif1_", ",", " ", "clif2_", ",", " ", "prdtType_"}], "]"}], " ",
    ":=", "\n", " \t", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"INPUTS", ":", "\n", " \t\t", "clif1"}], ",", " ", 
     RowBox[{"clif2", ":", " ", 
      RowBox[{"Two", " ", "clifs", " ", "whose", " ", 
       RowBox[{
        RowBox[{"dot", "/", "wedge"}], "/", "left"}], " ", "or", " ", "right",
        " ", 
       RowBox[{"contraction", " ", "\\\n", "product"}], " ", "is", " ", "to", 
       " ", "be", " ", "taken", "\n", " \t\t", "prdtType"}], ":", " ", 
      RowBox[{"The", " ", "type", " ", "of", " ", 
       RowBox[{"product", ":", " ", "wedge"}]}]}], ",", " ", "dot", ",", " ", 
     
     RowBox[{
      RowBox[{
      "right", " ", "or", " ", "left", " ", "contraction", "\n", " \t\t", 
       "\n", " \t  ", 
       RowBox[{"PROCESS", ":", "\n", " \t    ", "Example", ":", " ", 
        RowBox[{"Wedge", " ", "Product", " ", "of", " ", "clif1"}]}]}], " ", 
      "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Subscript", "[", 
         RowBox[{"e", ",", " ", "1"}], " ", "]"}], "+", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\\\n", "Subscript"}], "[", 
          RowBox[{"e", ",", " ", "2"}], "]"}], " ", 
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "3"}], "]"}], " ", "and", " ", "clif2"}]}], 
       " ", "=", " ", 
       RowBox[{
        RowBox[{"4", " ", "-", " ", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"e", ",", " ", 
            RowBox[{"3", " ", "\\\n"}]}], "]"}], 
          RowBox[{"Subscript", "[", 
           RowBox[{"e", ",", " ", "4"}], "]"}], "\n", " \t    ", "Make", " ", 
          "lists", " ", "of", " ", "the", " ", "terms", " ", "of", " ", "the",
           " ", "2", " ", 
          RowBox[{"clifs", ":", " ", "clifList1"}]}]}], " ", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"\\\n", "Subscript"}], "[", 
             RowBox[{"e", ",", " ", "1", ","}], "]"}], " ", 
            RowBox[{"Subscript", "[", 
             RowBox[{"e", ",", " ", "2"}], "]"}], " ", 
            RowBox[{"Subscript", "[", 
             RowBox[{"e", ",", " ", "3"}], "]"}]}], " ", "}"}], " ", "and", 
          " ", "clifList2", " ", 
          RowBox[{"{", " ", 
           RowBox[{"4", ",", " ", 
            RowBox[{
             RowBox[{"\\\n", 
              RowBox[{"-", " ", 
               RowBox[{"Subscript", "[", 
                RowBox[{"e", ",", " ", "3"}], " ", "]"}]}]}], 
             RowBox[{"Subscript", "[", 
              RowBox[{"e", ",", " ", "4"}], "]"}]}]}], " ", "}"}], "\n", 
          " \t\t", "Use", " ", "Outer", " ", "to", " ", "take", " ", "the", 
          " ", "Geometric", " ", "Product", " ", "of", " ", "every", " ", 
          "term", " ", "from", " ", 
          RowBox[{"clif1", " ", "\\\n", "with"}], " ", "every", " ", "term", 
          " ", "from", " ", "clif2", "\n", " \t\t   ", "prdtBladeList"}], " ",
          "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"Subscript", "[", 
               RowBox[{"e", ",", " ", "1"}], "]"}]}], ",", " ", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"e", ",", " ", "1"}], "]"}], " ", "\\\n", 
                 "Subscript"}], "[", 
                RowBox[{"e", ",", " ", "3"}], "]"}]}], " ", 
              RowBox[{"Subscript", "[", 
               RowBox[{"e", ",", " ", "4"}], "]"}]}], ",", " ", 
             RowBox[{"4", " ", 
              RowBox[{"Subscript", "[", 
               RowBox[{"e", ",", " ", "2"}], "]"}], " ", 
              RowBox[{"Subscript", "[", 
               RowBox[{"e", ",", " ", "3"}], "]"}]}], ",", " ", 
             RowBox[{
              RowBox[{"\\\n", 
               RowBox[{"-", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"e", ",", " ", "2"}], "]"}]}]}], " ", 
              RowBox[{"Subscript", "[", 
               RowBox[{"e", ",", " ", "4"}], "]"}]}]}], "}"}], "\n", " \t\t", 
           
           RowBox[{"Notice", ":", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "every", " ", "term", " ", "is", " ", "a", " ", "simple", " ", 
               "blade", " ", "a", " ", 
               RowBox[{"Subscript", "[", 
                RowBox[{"e", ",", " ", "1"}], "]"}], 
               RowBox[{"Subscript", "[", 
                RowBox[{"e", ",", " ", 
                 RowBox[{"\\\n", "2"}]}], "]"}]}], "..."}], 
             RowBox[{"Subscript", "[", 
              RowBox[{"e", ",", " ", "n"}], "]"}], "\n", " \t\t", "Find", " ",
              "the", " ", "eSubscripts", " ", "and", " ", "then", " ", "the", 
             " ", "grade", " ", "of", " ", "each", " ", "blade"}], ":", " ", 
            "\n", " \t\t   ", "eSubscripts", ":", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"e", ",", " ", "1"}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"e", ",", " ", "2", ",", "3"}], "]"}], "}"}]}], 
              "}"}], " ", 
             RowBox[{"and", " ", "\\\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"e", ",", " ", "3", ",", "4"}], "]"}], "}"}]}], 
               "}"}]}], "\n", " \t\t   ", "grades"}], ":", " ", 
            RowBox[{
             RowBox[{"{", " ", 
              RowBox[{"1", ",", " ", "2"}], " ", "}"}], " ", "and", " ", 
             RowBox[{"{", " ", 
              RowBox[{"0", ",", " ", "2"}], " ", "}"}], "\n", " \t\t   ", 
             RowBox[{"Note", ":", " ", 
              RowBox[{"grade", " ", "of", " ", 
               RowBox[{"Subscript", "[", 
                RowBox[{"e", ",", " ", "2", ",", "4"}], "]"}]}]}]}]}]}], " ", 
          "=", " ", 
          RowBox[{"2", " ", "=", " ", 
           RowBox[{
            RowBox[{"Length", " ", "[", " ", 
             RowBox[{"Subscript", "[", 
              RowBox[{"e", ",", " ", 
               RowBox[{"\\\n", "2"}], ",", "4"}], "]"}], " ", "]"}], " ", "-",
             " ", 
            RowBox[{"1", "\n", " \t\t   ", 
             RowBox[{"Note", ":", " ", 
              RowBox[{
              "length", " ", "of", " ", "a", " ", 
               "constant"}]}]}]}]}]}]}]}]}]}], ",", " ", 
     RowBox[{"like", " ", "5"}], ",", " ", 
     RowBox[{"is", " ", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"so", " ", "subtracting", " ", 
       RowBox[{"1", " ", "\\\n", "gives"}], " ", "a", " ", "grade", " ", 
       "of"}], " ", "-", 
      RowBox[{
      "1.", "\n", " \t\t         ", "The", " ", "correct", " ", "grade", " ", 
       "is", " ", "0"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"so", " ", "Length"}], " ", "-", " ", 
       RowBox[{"1", " ", "is", " ", "clipped", " ", "to", " ", 
        RowBox[{"be", " ", "\\\n"}]}]}], "\[GreaterEqual]", " ", 
      RowBox[{
      "0", "\n", " \t\t", "Use", " ", "Outer", " ", "to", " ", "make", " ", 
       "a", " ", "list", " ", "of", " ", "the", " ", "target", " ", "grades", 
       " ", "of", " ", "every", " ", "term", " ", 
       RowBox[{"from", " ", "\\\n", "clif1"}], " ", "with", " ", "every", " ",
        "term", " ", "from", " ", "clif2", "\n", " \t\t\t", "Target", " ", 
       "grade", " ", "for", " ", "Wedge", " ", "Product", " ", "of", " ", "2",
        " ", "blades", " ", "is", " ", "sum", " ", "of", " ", "the", " ", 
       "two", " ", "grades", "\n", " \t\t\t", "Thus"}]}], ",", " ", 
     RowBox[{"targetGradeList", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", " ", "+", " ", "0"}], ",", " ", 
         RowBox[{"1", " ", "+", " ", "2"}], ",", " ", 
         RowBox[{"2", " ", "+", " ", "0"}], ",", " ", 
         RowBox[{"2", " ", "+", " ", "2"}]}], "}"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"1", ",", " ", "3", ",", " ", "2", ",", " ", 
           RowBox[{"\\\n", "4"}]}], " ", "}"}], "\n", " \t\t\t", "Target", 
         " ", "grade", " ", "for", " ", "Dot", " ", "Product", " ", "is"}], 
        " ", "|", 
        RowBox[{"grade1", " ", "-", " ", "grade2"}], "|", "\n", " \t\t\t", 
        RowBox[{
         RowBox[{
         "Target", " ", "grade", " ", "for", " ", "Right", " ", "Contraction",
           " ", "is", " ", "grade1"}], " ", "-", " ", 
         RowBox[{"grade2", "\n", " \t\t\t", 
          RowBox[{"Caution", ":", " ", 
           RowBox[{"For", " ", "left", " ", "contraction"}]}]}]}]}]}]}], ",", 
     " ", 
     RowBox[{"desire", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"grade2", " ", "-", " ", "grade1"}], ")"}], ".", " ", "\n", 
       " \t\t\t\t", "But"}]}], ",", " ", 
     RowBox[{
     "to", " ", "mimic", " ", "the", " ", "outer", " ", "order", " ", "of", 
      " ", "prdtBlade"}], ",", " ", 
     RowBox[{"we", " ", "must", " ", "enter", " ", 
      RowBox[{"blade", " ", "\\\n", "1"}], " ", "first", "\n", " \t\t\t\t", 
      "That", " ", "is"}], ",", " ", 
     RowBox[{"we", " ", "cannot", " ", "enter", " ", 
      RowBox[{"Outer", " ", "[", " ", 
       RowBox[{"Subtract", ",", " ", "gradeList2", ",", " ", 
        RowBox[{"\\\n", "gradeList1"}]}], " ", "]"}], "\n", " \t\t\t\t", 
      "Rather"}], ",", " ", 
     RowBox[{
      RowBox[{"we", " ", "enter", " ", "this", " ", "as"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"Outer", " ", "[", " ", 
        RowBox[{"Subtract", ",", " ", "gradeList1", ",", " ", 
         RowBox[{"\\\n", "gradeList2"}]}], " ", "]"}], "\n", " \t\t\t\t", 
       "The", " ", "latter", " ", "gives"}]}], ",", " ", 
     RowBox[{"of", " ", "course"}], ",", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "opposite", " ", "sign", " ", "from", " ", "grade", " ", 
       "1"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"\\\n", "grade"}], " ", "2", " ", "for", " ", "every", " ", 
       "subtraction", "\n", " \t\t", "Use", " ", "Inner", " ", "to", " ", 
       "make", " ", "a", " ", "list", " ", "of", " ", "pairs"}]}], ",", " ", 
     RowBox[{"where", ":", "\n", " \t\t\t", 
      RowBox[{
      "First", " ", "element", " ", "of", " ", "pair", " ", "is", " ", "the", 
       " ", "geometric", " ", "product", " ", "of", " ", "2", " ", "blades", 
       "\n", " \t\t\t", "Second", " ", "element", " ", "of", " ", "pair", " ",
        "is", " ", "the", " ", "target", " ", "grade", " ", "for", " ", 
       "that", " ", 
       RowBox[{"geometric", " ", "\\\n", "product"}], "\n", " \t\t\t", "For", 
       " ", "Wedge", " ", "Product"}]}], ",", " ", 
     RowBox[{"bladeGradePairList", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"Subscript", "[", 
             RowBox[{"e", ",", " ", "1"}], "]"}]}], ",", " ", 
           RowBox[{"\\\n", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Subscript", "[", 
              RowBox[{"e", ",", " ", "1"}], "]"}]}], " ", 
            RowBox[{"Subscript", "[", 
             RowBox[{"e", ",", " ", "3"}], "]"}], " ", 
            RowBox[{"Subscript", "[", 
             RowBox[{"e", ",", " ", "4"}], "]"}]}], ",", " ", "3"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"4", " ", "\\\n", "Subscript"}], "[", 
             RowBox[{"e", ",", " ", "2"}], "]"}], " ", 
            RowBox[{"Subscript", "[", 
             RowBox[{"e", ",", " ", "3"}], "]"}]}], ",", " ", "2"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Subscript", "[", 
              RowBox[{"e", ",", " ", "2"}], "]"}]}], " ", 
            RowBox[{"Subscript", "[", 
             RowBox[{"e", ",", " ", 
              RowBox[{"\\\n", "4"}]}], "]"}]}], ",", " ", "4"}], "}"}]}], 
        "}"}], "\n", " \t\t", "Use", " ", "pSlice", " ", "to", " ", "extract",
        " ", "the", " ", "part", " ", "of", " ", "each", " ", "geometric", 
       " ", "product"}]}], ",", " ", 
     RowBox[{"if", " ", "any"}], ",", " ", 
     RowBox[{
      RowBox[{"\\\n", "having"}], " ", "the", " ", "target", " ", "grade", 
      "\n", " \t\t\t", 
      RowBox[{"Note", ":", " ", 
       RowBox[{"We", " ", "need", " ", "a", " ", "list", " ", "of", " ", 
        RowBox[{"pSlice", "[", 
         RowBox[{"blade", ",", " ", 
          RowBox[{"tgt", " ", "grade"}]}], "]"}], " ", "so", " ", "we", " ", 
        RowBox[{"APPLY", " ", "\\\n", "pSlice"}], " ", "at", " ", "level", 
        " ", "1", "\n", " \t\t\t", "For", " ", "Wedge", " ", "Product"}]}]}], 
     ",", " ", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"4", 
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "1"}], "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"e", ",", " ", "1"}], "]"}], " ", "\\\n", "Subscript"}], 
           "[", 
           RowBox[{"e", ",", " ", "3"}], "]"}]}], " ", 
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "4"}], "]"}]}], ",", " ", 
        RowBox[{"4", " ", 
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "2"}], "]"}], " ", 
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "3"}], "]"}]}], ",", " ", "0"}], " ", "}"}], 
      "\n", " \t\t", "Lastly"}], ",", " ", 
     RowBox[{
      RowBox[{
      "we", " ", "change", " ", "the", " ", "list", " ", "of", " ", "target", 
       " ", "pieces", " ", "into", " ", "its", " ", 
       RowBox[{"series", " ", "\\\n", "expression"}], "\n", " \t\t\t", 
       "Wedge", " ", "Product"}], " ", "=", " ", 
      RowBox[{"targetPrdt", " ", "=", " ", 
       RowBox[{
        RowBox[{"4", " ", 
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "1"}], " ", "]"}]}], " ", "+", 
        RowBox[{"4", " ", 
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", 
           RowBox[{"\\\n", "2"}]}], "]"}], " ", 
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "3"}], "]"}]}], " ", "-", " ", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "1"}], "]"}], " ", 
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "3"}], "]"}], " ", 
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "4"}], "]"}], "\n", " \t\t", "\n", " \t  ", 
         RowBox[{"OUTPUT", ":", "\n", " \t\t", 
          RowBox[{"The", " ", 
           RowBox[{
            RowBox[{"dot", "/", "wedge"}], "/", "contraction"}], " ", 
           "product", " ", "of", " ", "the", " ", "two", " ", 
           "clifs"}]}]}]}]}]}], ",", " ", 
     RowBox[{"defined", " ", "as", " ", 
      RowBox[{"the", " ", "\\\n", "sum"}], " ", "of", " ", "the", " ", 
      "products", " ", "of", " ", "\n", " \t\t", "every", " ", "term", " ", 
      "from", " ", "clif1", " ", "with", " ", "every", " ", "term", " ", 
      "from", " ", "clif2"}]}], "  ", "*)"}], "\n", " \t\t", "\n", " \t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clifList1", ",", " ", "clifList2", ",", " ", "prdtBladeList", ",", " ",
        "eSubscriptList1", ",", " ", "\n", "   ", "eSubscriptList2", ",", " ",
        "gradeList1", ",", "\n", "   \t\t\t", "gradeList2", ",", " ", 
       "targetGradeList", ",", " ", "bladeGradePairList", ",", " ", 
       "targetPrdt"}], "}"}], ",", "\n", "  ", "\n", "  \t\t", 
     RowBox[{
      RowBox[{"clifList1", " ", "=", " ", 
       RowBox[{"ClifToListG", "[", "clif1", "]"}]}], ";", " ", 
      RowBox[{"clifList2", " ", "=", " ", 
       RowBox[{"ClifToListG", "[", "clif2", "]"}]}], ";", "\n", "  \t\t", 
      RowBox[{"prdtBladeList", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Outer", "[", 
         RowBox[{"GeomPrdtG", ",", " ", "clifList1", ",", " ", "clifList2"}], 
         "]"}], "]"}]}], ";", "\n", "  \t\t", 
      RowBox[{"eSubscriptList1", " ", "=", " ", 
       RowBox[{"eSubscriptListG", " ", "/@", " ", "clifList1"}]}], ";", "\n", 
      "  \t\t", 
      RowBox[{"eSubscriptList2", " ", "=", " ", 
       RowBox[{"eSubscriptListG", " ", "/@", " ", "clifList2"}]}], ";", "\n", 
      "  \t\t", 
      RowBox[{"gradeList1", " ", "=", " ", "\n", "   ", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", " ", "@@@", " ", "eSubscriptList1"}], " ", "-", 
          " ", "1"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "\[Infinity]"}], "}"}]}], "]"}]}], ";", "\n",
       "  \t\t", 
      RowBox[{"gradeList2", " ", "=", " ", "\n", "   ", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", " ", "@@@", " ", "eSubscriptList2"}], " ", "-", 
          " ", "1"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "\[Infinity]"}], "}"}]}], "]"}]}], ";", "\n",
       "  \t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prdtType", " ", "==", " ", "\"\<Wedge\>\""}], ",", " ", "\n",
         "   ", 
        RowBox[{"targetGradeList", " ", "=", " ", 
         RowBox[{"Outer", "[", 
          RowBox[{"Plus", ",", " ", "gradeList1", ",", " ", "gradeList2"}], 
          "]"}]}]}], "]"}], ";", "\n", "  \t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prdtType", " ", "==", " ", "\"\<Dot\>\""}], ",", " ", "\n", 
        "   ", 
        RowBox[{"targetGradeList", " ", "=", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"Outer", "[", 
           RowBox[{
           "Subtract", ",", " ", "gradeList1", ",", " ", "gradeList2"}], 
           "]"}], "]"}]}]}], "]"}], ";", "\n", "  \t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prdtType", " ", "==", " ", "\"\<LC\>\""}], ",", " ", "\n", 
        "   ", 
        RowBox[{"targetGradeList", " ", "=", " ", 
         RowBox[{"-", 
          RowBox[{"Outer", "[", 
           RowBox[{
           "Subtract", ",", " ", "gradeList1", ",", " ", "gradeList2"}], 
           "]"}]}]}]}], "]"}], ";", "\n", "  \t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prdtType", " ", "==", " ", "\"\<RC\>\""}], ",", " ", "\n", 
        "   ", 
        RowBox[{"targetGradeList", " ", "=", " ", 
         RowBox[{"Outer", "[", 
          RowBox[{
          "Subtract", ",", " ", "gradeList1", ",", " ", "gradeList2"}], 
          "]"}]}]}], "]"}], ";", "\n", "  \t\t", 
      RowBox[{"targetGradeList", " ", "=", " ", 
       RowBox[{"Flatten", "[", "targetGradeList", "]"}]}], ";", "\n", 
      "  \t\t", 
      RowBox[{"bladeGradePairList", " ", "=", " ", "\n", "   ", 
       RowBox[{"Inner", "[", 
        RowBox[{
        "List", ",", " ", "prdtBladeList", ",", " ", "targetGradeList", ",", 
         " ", "List"}], "]"}]}], ";", "\n", "  \t\t", 
      RowBox[{"targetPrdt", " ", "=", " ", "\n", "   ", 
       RowBox[{"CollectG", "[", 
        RowBox[{
         RowBox[{"Apply", "[", 
          RowBox[{"pSliceG", ",", " ", "bladeGradePairList", ",", " ", 
           RowBox[{"{", "1", "}"}]}], "]"}], " ", "/.", " ", 
         RowBox[{"List", " ", "->", " ", "Plus"}]}], "]"}]}], ";", "\n", 
      "  \t\t", "\n", "  \t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"debug6", " ", "==", " ", "True"}], ",", "\n", "   \t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", " ", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<clif lists: \>\"", ",", " ", "clifList1", ",", " ", 
           "\"\<,  \>\"", ",", " ", "clifList2"}], "]"}], ";", "\n", 
         "   \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<e-Subscript lists: \>\"", ",", " ", "eSubscriptList1", ",", 
           " ", "\"\<,  \>\"", ",", " ", "\n", "    ", "eSubscriptList2"}], 
          "]"}], ";", "\n", "   \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<grade lists: \>\"", ",", " ", "gradeList1", ",", " ", 
           "\"\<,  \>\"", ",", " ", "gradeList2"}], "]"}], ";", "\n", 
         "   \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Blade geom prdt list: \>\"", ",", " ", "prdtBladeList"}], 
          "]"}], ";", "\n", "   \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Target grade list: \>\"", ",", " ", "targetGradeList"}], "]"}],
          ";", "\n", "   \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<List of {blade geom prdt, tgt grade}: \>\"", ",", " ", "\n", 
           "    ", "bladeGradePairList"}], "]"}], ";", "\n", "   \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "prdtType", ",", " ", "\"\< product = \>\"", ",", " ", 
           "targetPrdt"}], "]"}]}]}], "\n", "   \t\t", "]"}], ";", "\t", "\n",
       "  \t\t", "targetPrdt"}]}], "\t", "\n", "  \t", "]"}]}], "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "PrdtG", " ", "Module"}], "  ", "*)"}], 
  "\n", "\t", "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"DotPrdtG", "[", 
   RowBox[{"clif1_", ",", " ", "clif2_"}], "]"}], " ", ":=", "\t\t", "\n", 
  RowBox[{"(*", "   ", 
   RowBox[{
    RowBox[{
    "Performed", " ", "as", " ", "an", " ", "operation", " ", "on", " ", 
     "each", " ", "pair", " ", "of", " ", "terms", " ", "from", " ", "the", 
     " ", "clifs"}], ";", " ", 
    RowBox[{
     RowBox[{
     "and", " ", "then", " ", "summed", "\n", "\t ", "The", " ", "dot", " ", 
      "product", " ", "of", " ", "two", " ", "terms", " ", "is", " ", "their",
       " ", "geometric", " ", "product", " ", "if", " ", "its", " ", "grade", 
      " ", "is"}], " ", "|", " ", 
     RowBox[{"p", " ", "-", " ", "q"}], " ", "|", "\n", "\t  ", 
     RowBox[{
     "where", " ", "p", " ", "and", " ", "q", " ", "are", " ", "the", " ", 
      "respective", " ", "grades", " ", "of", " ", "the", " ", "two", " ", 
      "terms", "\n", "\t  ", "The", " ", "dot", " ", "product", " ", "is", 
      " ", "zero", " ", "otherwise"}]}]}], " ", "*)"}], "\n", "\t  ", "\n", 
  " \t \t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "dotPrdt", "}"}], ",", "\n", "  \t\t", 
    RowBox[{
     RowBox[{"dotPrdt", " ", "=", " ", 
      RowBox[{"PrdtG", "[", 
       RowBox[{"clif1", ",", " ", "clif2", ",", " ", "\"\<Dot\>\""}], "]"}]}],
      ";", "\n", "  \t\t", "dotPrdt"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"DotPrdtG", "[", 
   RowBox[{"u_", ",", " ", "v_", ",", " ", "w__"}], "]"}], " ", ":=", " ", 
  RowBox[{"DotPrdtG", "[", 
   RowBox[{
    RowBox[{"DotPrdtG", "[", 
     RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DotPrdtG", "[", 
    RowBox[{"u_", ",", " ", "v_"}], "]"}], " ", ":=", " ", 
   RowBox[{"0", " ", "/;", " ", 
    RowBox[{
     RowBox[{"u", " ", "==", " ", "0"}], " ", "||", " ", 
     RowBox[{"v", " ", "==", " ", "0"}]}]}]}], "\n", "\t", 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "DotPrdtG", " ", "Module"}], "  ", "*)"}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtAtomG", "[", 
    RowBox[{"blade1_", ",", " ", "blade2_"}], "]"}], " ", ":=", " ", "\n", 
   RowBox[{"(*", "   ", 
    RowBox[{
     RowBox[{
     "Used", " ", "by", " ", "GeomPrdtG", " ", "to", " ", "process", " ", 
      "atom", " ", "pairs", "\n", " \t", 
      RowBox[{"INPUTS", ":", " ", 
       RowBox[{"2", " ", "simple", " ", "blades"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"blade1", " ", "&"}], " ", "bladd2", "  ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"e", ".", "g", ".", " ", "blade1"}], " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\\\n", "Subscript"}], "[", 
          RowBox[{"e", ",", " ", "1"}], "]"}], 
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "2"}], "]"}], 
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "4"}], "]"}]}]}], ")"}], "\n", " \t", 
      RowBox[{"PROCESS", ":", " ", "\n", " \t\t", 
       RowBox[{
       "Combine", " ", "the", " ", "2", " ", "subscript", " ", "lists"}]}]}], 
     ",", " ", 
     RowBox[{
      RowBox[{"preserving", " ", "blade1", " ", "subscripts", " ", 
       RowBox[{"before", " ", "\\\n", "blade2"}], "\n", " \t\t", "Use", " ", 
       "SignatureG", " ", "to", " ", "get", " ", "the", " ", "signature", " ",
        "of", " ", "the", " ", "combined", " ", "list", "\n", " \t", 
       RowBox[{"OUTPUT", ":", "\n", " \t\t", "bladePrdt"}]}], " ", "=", " ", 
      RowBox[{"algebraic", " ", "product", " ", "of", " ", "signature"}]}], 
     ",", " ", "blade1", ",", " ", 
     RowBox[{"and", " ", "blade", " ", "2", "\n", " \t\t", 
      RowBox[{"Note", ":", " ", 
       RowBox[{
        SubsuperscriptBox["e", "i", "2"], " ", "terms", " ", "are", " ", 
        "NOT", " ", "reduced", " ", "until", " ", "after", " ", "this", " ", 
        "function", " ", "is", " ", "called", " ", "by", " ", 
        "GeomPrdtG"}]}]}]}], "\t\t\t\t", "\n", " ", "*)"}], "\n", " \t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "maxDim", ",", " ", "subscriptList1", ",", " ", "subscriptList2", ",", 
       " ", "subscriptList12", ",", "\n", "    ", "signature12", ",", " ", 
       "bladePrdt"}], "}"}], ",", "\n", "  ", "\n", "  \t\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", "\n", "   \t\t\t\t", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", " ", "\n", "   ", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtAtomG: Blade1 = \>\"", ",", " ", "blade1", ",", " ", 
           "\"\<, Blade2 = \>\"", ",", " ", "blade2"}], "]"}]}]}], "\n", 
       "   \t\t\t", "]"}], ";", "\n", "  \t\t", "\n", "  \t\t\t\t", 
      RowBox[{"subscriptList1", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"SubscriptListG", "[", "blade1", "]"}], "]"}]}], ";", " ", 
      "\n", "  \t\t\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{" ", 
         RowBox[{
          RowBox[{"Example", ":", " ", 
           RowBox[{"5", " ", "+", " ", 
            RowBox[{"3", " ", 
             RowBox[{"Subscript", "[", 
              RowBox[{"e", ",", " ", "1"}], "]"}], 
             RowBox[{"Subscript", "[", 
              RowBox[{"e", ",", " ", "\n", "  ", "2"}], "]"}]}]}]}], " ", 
          "\[Rule]", " ", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"{", "0", "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], " "}]}], ")"}], " ", "\[Rule]",
         " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1", ",", " ", "2"}], "}"}]}], "  ", "*)"}], 
      "\n", "  \t\t", "\n", "  ", 
      RowBox[{"maxDim", " ", "=", " ", 
       RowBox[{"Max", "[", "subscriptList1", "]"}]}], ";", " ", 
      RowBox[{"(*", "  ", 
       RowBox[{
        RowBox[{"Example", ":", " ", "maxDim"}], " ", "=", " ", "3"}], "  ", 
       "*)"}], "\n", "  \t\t", "\n", "  ", 
      RowBox[{"subscriptList2", " ", "=", " ", "\n", "   ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"SubscriptListG", "[", "blade2", "]"}], " ", "/.", " ", 
         RowBox[{
          RowBox[{"u_", " ", "/;", " ", 
           RowBox[{"u", " ", "==", " ", "0"}]}], " ", "->", " ", "maxDim"}]}],
         "]"}]}], ";", " ", "\n", "  \t\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Example", ":", "  ", "4"}], " ", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"{", "0", "}"}], " ", "\[Rule]", " ", 
         RowBox[{"{", "3", "}"}]}]}], "   ", "*)"}], "\n", "  ", "\n", 
      "  \t\t", 
      RowBox[{"subscriptList12", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"subscriptList1", ",", " ", "subscriptList2"}], "]"}]}], ";", 
      "  ", 
      RowBox[{"(*", " ", "\n", "  ", 
       RowBox[{"Example", ":", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "4"}], "}"}]}], "  ", "*)"}], "\n", 
      "  \t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", " ", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", "\n", "   \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtAtomG: Flattened list of Blade1 subscripts = \>\"", 
           ",", " ", "\n", "    ", "subscriptList1", ",", "\n", 
           "    \t\t\t\t", "\"\<, Flattened list of Blade2 subscripts = \>\"",
            ",", " ", "subscriptList2"}], "]"}], ";", "\n", "   \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Joined flatten subscript lists = \>\"", ",", " ", 
           "subscriptList12"}], "]"}]}]}], "\n", "   \t\t", "]"}], ";", "\n", 
      "  \t\t", 
      RowBox[{"signature12", " ", "=", " ", 
       RowBox[{"SignatureG", "[", "subscriptList12", "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Example", ":", " ", "\n", "  ", "signature"}], " ", "=", " ", 
        RowBox[{"+", "1"}]}], "  ", "*)"}], "\n", "  ", "\n", "  \t\t", 
      RowBox[{"bladePrdt", " ", "=", " ", 
       RowBox[{"signature12", " ", "blade1", " ", "blade2"}]}], ";", "\n", 
      "  ", "\n", "  \t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", "\n", "   \t\t\t", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<GeomPrdtAtomG: Signature = \>\"", ",", " ", "signature12", ",", 
          " ", "\n", "    ", "\"\<, product blade = \>\"", ",", " ", 
          "bladePrdt"}], "]"}]}], "\n", "   \t\t", "]"}], ";", "\n", "  ", 
      "\n", "  \t\t", "bladePrdt"}]}], "\n", "  \t", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"GeomPrdtG", "[", 
   RowBox[{"0", ",", " ", "y_"}], "]"}], " ", ":=", " ", "0"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{"x_", ",", " ", "0"}], "]"}], " ", ":=", " ", "0"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{"clif1_", ",", " ", "clif2_"}], "]"}], " ", ":=", "   ", 
   RowBox[{"(*", " ", "\n", " ", "\n", " \t", 
    RowBox[{
     RowBox[{"INPUTS", ":", "\n", " \t\t", "clif1"}], ",", " ", "clif2", " ", 
     "\[Dash]", " ", 
     RowBox[{"Users", " ", "input", " ", "clifs"}], ",", " ", 
     RowBox[{"with", " ", "either", " ", "numeric", " ", 
      RowBox[{"or", " ", "\\\n", "symbolic"}], " ", "coefficients", "\n", 
      " \t", 
      RowBox[{"PROCESS", ":", " ", "\n", " \t\t", 
       RowBox[{
       "1.", " ", "Put", " ", "the", " ", "2", " ", "clifs", " ", "into", " ",
         "lists", "\n", " \t\t", "2.", " ", "Take", " ", "outer", " ", 
        "product", " ", "of", " ", "function", " ", "GeopmPrdtBladeG", " ", 
        "applied", " ", "to", " ", 
        RowBox[{"the", " ", "\\\n", "lists"}], " ", "to", " ", "create", " ", 
        "the", " ", "\n", " \t\t\t", "list", " ", "of", " ", "geometric", " ",
         "products", " ", "between", " ", "all", " ", "terms", " ", 
        RowBox[{"(", "blades", ")"}], " ", "of", " ", 
        RowBox[{"clif1", " ", "\\\n", "with"}], " ", "all", " ", "terms", " ",
         "of", " ", "clif2", "\n", " \t\t", "3.", " ", "Convert", " ", "the", 
        " ", "list", " ", "back", " ", "to", " ", "an", " ", "expression", 
        " ", "\n", " \t\t", "4.", " ", "Use", " ", "CollectG", " ", "to", " ",
         "evaluate", " ", "all", " ", "terms", " ", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"e", ",", " ", "i"}], "]"}], "^", "2"}], " ", "and", " ", 
        RowBox[{"to", " ", "\\\n", "collect"}], " ", "terms", " ", "by", " ", 
        "blades", "\n", " \t", "OUPUT"}], ":", "\n", " \t ", "clif12", ":", 
       " ", 
       RowBox[{"The", " ", "geometric", " ", 
        RowBox[{"(", 
         RowBox[{"a", ".", "k", ".", "a", ".", " ", "Clifford"}], ")"}], " ", 
        "product", " ", "clif"}]}]}]}], " ", "*)"}], "\n", " ", "\n", " \t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clif1a", ",", " ", "clif2a", ",", " ", "clifList1", ",", " ", 
       "clifList2", ",", " ", "clifList12", ",", " ", "clif12"}], "}"}], ",", 
     "\n", "  ", "\n", "  \t\t", 
     RowBox[{
      RowBox[{"clif1a", " ", "=", " ", 
       RowBox[{"Expand", "[", "clif1", "]"}]}], ";", " ", 
      RowBox[{"clif2a", " ", "=", " ", 
       RowBox[{"Expand", "[", "clif2", "]"}]}], ";", "\t", "\n", "  \t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", " ", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", " ", "\n", "   ", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtG: clif1 = \>\"", ",", " ", "clif1a", ",", " ", 
           "\"\<, Clif2 = \>\"", ",", " ", "clif2a"}], "]"}]}]}], "]"}], ";", 
      "\n", "  \t\t", "\n", "  \t\t", 
      RowBox[{"clifList1", " ", "=", " ", 
       RowBox[{"ClifToListG", "[", "clif1a", "]"}]}], ";", "\n", "  \t\t", 
      RowBox[{"clifList2", " ", "=", " ", 
       RowBox[{"ClifToListG", "[", "clif2a", "]"}]}], ";", "\t", "\n", "  ", 
      "\n", "  \t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", " ", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", " ", "\n", "   ", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtG: Clif1 List = \>\"", ",", " ", "clifList1", ",", 
           " ", "\"\<,  Clif2 List = \>\"", ",", " ", "\n", "    ", 
           "clifList2"}], "]"}]}]}], "]"}], ";", "\n", "  ", "\n", "  \t\t", 
      RowBox[{"clifList12", " ", "=", " ", 
       RowBox[{"Outer", "[", 
        RowBox[{
        "GeomPrdtAtomG", ",", " ", "clifList1", ",", " ", "clifList2"}], 
        "]"}]}], ";", "\n", "  \t\t", 
      RowBox[{"clif12", " ", "=", " ", 
       RowBox[{"CollectG", "[", 
        RowBox[{"clifList12", " ", "/.", " ", 
         RowBox[{"List", " ", "->", " ", "Plus"}]}], "]"}]}], ";", "\n", 
      "  \t\t", "\n", "  \t\t", 
      RowBox[{"If", "[", 
       RowBox[{"debug3", ",", " ", 
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", "\n", "   \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GeomPrdtG: Product clif list = \>\"", ",", " ", "clifList12"}],
           "]"}], ";", "\n", "   \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Product clif = \>\"", ",", " ", "clif12"}], "]"}]}]}], 
       "\n", "   \t\t", "]"}], ";", "\n", "  \t\t", "clif12"}]}], "\n", 
    "  \t", "]"}]}], "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "GeomPrdtG", " ", "module"}], "  ", "*)"}], 
  "\n", "\t", "\n", "\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{"u_", ",", " ", "v_", ",", " ", "w__"}], "]"}], " ", ":=", " ", 
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{
     RowBox[{"GeomPrdtG", "[", 
      RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", "w"}], "]"}]}], "\n", 
  "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"Enables", " ", "expressions", " ", "like", " ", 
    RowBox[{"GeomPrdtG", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "u", ",", "v"}], "]"}]}], "  ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GeomPrdtG", "[", 
    RowBox[{"u_", ",", " ", "v_"}], "]"}], " ", ":=", " ", 
   RowBox[{"0", " ", "/;", " ", 
    RowBox[{
     RowBox[{"u", " ", "==", " ", "0"}], " ", "||", " ", 
     RowBox[{"v", " ", "==", " ", "0"}]}]}]}], "\n", "\n", "\t ", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "GeomPrdtG", " ", "Module"}], "  ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"LeftContractionG", "[", 
   RowBox[{"clif1_", ",", " ", "clif2_"}], "]"}], " ", ":=", "\n", " \t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "leftContraction", "}"}], ",", "\n", "  \t\t", 
    RowBox[{
     RowBox[{"leftContraction", " ", "=", " ", 
      RowBox[{"PrdtG", "[", 
       RowBox[{"clif1", ",", " ", "clif2", ",", " ", "\"\<LC\>\""}], "]"}]}], 
     ";", "\n", "  \t\t", "leftContraction"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"LeftContractionG", "[", 
   RowBox[{"u_", ",", " ", "v_", ",", " ", "w__"}], "]"}], " ", ":=", " ", 
  "\n", " ", 
  RowBox[{"LeftContractionG", "[", 
   RowBox[{
    RowBox[{"LeftContractionG", "[", 
     RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LeftContractionG", "[", 
    RowBox[{"u_", ",", " ", "v_"}], "]"}], " ", ":=", " ", 
   RowBox[{"0", " ", "/;", " ", 
    RowBox[{
     RowBox[{"u", " ", "==", " ", "0"}], " ", "||", " ", 
     RowBox[{"v", " ", "==", " ", "0"}]}]}]}], "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "Function", " ", "LeftContractionG"}], "  ",
    "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"RightContractionG", "[", 
   RowBox[{"clif1_", ",", " ", "clif2_"}], "]"}], " ", ":=", "\t\t", "\n", 
  " \t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "rightContraction", "}"}], ",", "\n", "  \t\t", 
    RowBox[{
     RowBox[{"rightContraction", " ", "=", " ", 
      RowBox[{"PrdtG", "[", 
       RowBox[{"clif1", ",", " ", "clif2", ",", " ", "\"\<RC\>\""}], "]"}]}], 
     ";", "\n", "  \t\t", "rightContraction"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RightContractionG", "[", 
   RowBox[{"u_", ",", " ", "v_", ",", " ", "w__"}], "]"}], " ", ":=", " ", 
  "\n", " ", 
  RowBox[{"RightContractionG", "[", 
   RowBox[{
    RowBox[{"RightContractionG", "[", 
     RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RightContractionG", "[", 
    RowBox[{"u_", ",", " ", "v_"}], "]"}], " ", ":=", " ", 
   RowBox[{"0", " ", "/;", " ", 
    RowBox[{
     RowBox[{"u", " ", "==", " ", "0"}], " ", "||", " ", 
     RowBox[{"v", " ", "==", " ", "0"}]}]}]}], "\n", "\t", 
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "Function", " ", "RightContractionG"}], 
   "  ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarPrdtG", "[", 
    RowBox[{"clif1_", ",", " ", "clif2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\n", " ", "\n", " ", 
      RowBox[{
       RowBox[{"INPUT", ":", " ", 
        RowBox[{"multivectors", "\n", " ", "PROCESS"}], ":", "\n", " \t", 
        RowBox[{"As", " ", "with", " ", "function", " ", "PrdtG"}]}], ",", 
       " ", 
       RowBox[{
       "prdtBladeList", " ", "is", " ", "a", " ", "list", " ", "of", " ", 
        "blades", " ", "in", " ", 
        RowBox[{"the", " ", "\\\n", "geometric"}], " ", "product", "\n", 
        " \t", "Similar", " ", "to", " ", "function", " ", "PrdtG"}], ",", 
       " ", 
       RowBox[{
        RowBox[{
        "eSubscriptList", " ", "is", " ", "a", " ", "list", " ", "of", " ", 
         RowBox[{"the", " ", "\\\n", "e"}]}], "-", 
        RowBox[{
        "subscripted", " ", "terms", " ", "of", " ", "the", " ", "blades", 
         "\n", " \t", "However"}]}], ",", " ", 
       RowBox[{
       "when", " ", "eSubscriptListG", " ", "is", " ", "MAPPED", " ", 
        RowBox[{"(", "/@", ")"}], " ", "to", " ", "prdtBladeList"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"we", " ", "\\\n", "can"}], " ", "get", " ", "duplicate", 
          " ", "e"}], "-", 
         RowBox[{"subscripts", ":", "\n", " \t\t", 
          RowBox[{"If", " ", "clifList"}]}]}], " ", "=", " ", 
        RowBox[{"{", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", " ", "+", " ", 
             RowBox[{"\[Sqrt]", "2"}]}], ")"}], " ", 
           RowBox[{"Subscript", "[", 
            RowBox[{"e", ",", " ", "1"}], "]"}]}], " "}]}]}]}], "}"}], ",", 
     " ", 
     RowBox[{
      RowBox[{
       RowBox[{"then", " ", "\\\n", "eSubscriptList"}], " ", "computes", " ", 
       "to", " ", 
       RowBox[{"{", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"e", ",", " ", "1"}], "]"}], ",", " ", 
          RowBox[{"Subscript", "[", 
           RowBox[{"e", ",", " ", "1"}], "]"}]}], "}"}], " ", "}"}], "\n", 
       " \t", "Map", " ", "DeleteDuplicates", " ", "to", " ", "get", " ", 
       "eList"}], " ", "=", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{"Subscript", "[", 
            RowBox[{"e", ",", " ", "1"}], "]"}], " ", "}"}], " \t\t", "\n", 
          " \t", 
          RowBox[{"Apply", " ", "[", " ", 
           RowBox[{"Length", ",", " ", "eSubscriptList", ",", " ", 
            RowBox[{"{", "1", "}"}]}], " ", "]"}], " ", "to", " ", "get", " ",
           "the", " ", "list", " ", "of", " ", "lengths", " ", 
          RowBox[{"of", " ", "\\\n", "the"}], " ", "e"}], "-", 
         RowBox[{
         "subscripted", " ", "terms", "\n", " \t", "Subtract", " ", "one", 
          " ", "to", " ", "send", " ", "grade", " ", "0", " ", "terms", " ", 
          "to"}], " ", "-", 
         RowBox[{"1", " ", "and", " ", "all", " ", "other", " ", "terms", " ", 
          RowBox[{"to", " ", "[", " ", 
           RowBox[{
            RowBox[{"\\\n", "0"}], ",", " ", "\[Infinity]"}], " ", "]"}], 
          "\n", " \t", "Clip", " ", "the", " ", "non"}], "-", 
         RowBox[{
         "grade", " ", "0", " ", "terms", " ", "to", " ", "make", " ", "them",
           " ", "all", " ", "0"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"and", " ", "multiply", " ", "by"}], " ", "-", 
          RowBox[{
           RowBox[{"1", " ", "\\\n", "to"}], " ", "make", " ", "the", " ", 
           "grade", " ", "zero", " ", "terms"}]}], " ", "=", " ", 
         RowBox[{
          RowBox[{"+", "1"}], "\n", " \t", "The", " ", "scalar", " ", 
          "product", " ", "is", " ", "the", " ", "grade", " ", "zero", " ", 
          "terms", " ", "in", " ", "the", " ", "geometric", " ", 
          RowBox[{"product", ":", " ", "\n", " \t\t", 
           RowBox[{
            RowBox[{"prdtBladeList", " ", ".", " ", "zeroOnegradeList"}], " ",
             "\n", " ", "OUTPUT"}], ":", " ", 
           RowBox[{"The", " ", "scalar", " ", "product"}]}]}]}]}], " "}]}]}], 
    "*)"}], "\n", " ", "\n", " \t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clifList1", ",", " ", "clifList2", ",", " ", "prdtBladeList", ",", " ",
        "eSubscriptList", ",", " ", "eList", ",", " ", "\n", "   ", 
       "zeroOnegradeList", ",", " ", "scalarPrdt"}], "}"}], ",", "\n", 
     "  \t\t", 
     RowBox[{
      RowBox[{"clifList1", " ", "=", " ", 
       RowBox[{"ClifToListG", "[", "clif1", "]"}]}], ";", " ", 
      RowBox[{"clifList2", " ", "=", " ", 
       RowBox[{"ClifToListG", "[", "clif2", "]"}]}], ";", "\n", "  \t\t", 
      RowBox[{"prdtBladeList", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Outer", "[", 
         RowBox[{"GeomPrdtG", ",", " ", "clifList1", ",", " ", "clifList2"}], 
         "]"}], "]"}]}], ";", "\n", "  \t\t", 
      RowBox[{"eSubscriptList", " ", "=", " ", 
       RowBox[{"eSubscriptListG", " ", "/@", " ", "prdtBladeList"}]}], ";", 
      "\n", "  \t\t", 
      RowBox[{"eList", " ", "=", " ", 
       RowBox[{"DeleteDuplicates", " ", "/@", " ", "eSubscriptList"}]}], ";", 
      " ", "\n", "  \t\t", 
      RowBox[{"zeroOnegradeList", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"Clip", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", " ", "@@@", " ", "eList"}], " ", "-", " ", "1"}],
           ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "0"}], "}"}]}], "]"}]}]}], ";", 
      "\n", "  \t\t", 
      RowBox[{"scalarPrdt", " ", "=", " ", 
       RowBox[{"prdtBladeList", ".", "zeroOnegradeList"}]}], ";", "\n", 
      "  \t\t", "\n", "  \t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"debug8", " ", "==", " ", "True"}], ",", "\n", "     \t\t\t", 
        
        RowBox[{
         RowBox[{"Print", "[", "]"}], ";", " ", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<clif lists: \>\"", ",", " ", "clifList1", ",", " ", 
           "\"\<,  \>\"", ",", " ", "clifList2"}], "]"}], ";", "\n", 
         "     \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Blade geom prdt list: \>\"", ",", " ", "prdtBladeList"}], 
          "]"}], ";", "\n", "     \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<e-Subscript list: \>\"", ",", " ", "eSubscriptList"}], 
          "]"}], ";", "\n", "     \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Reduced e-Subscript list: \>\"", ",", " ", "eList"}], 
          "]"}], ";", "\n", "     \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<grade list: \>\"", ",", " ", "zeroOnegradeList"}], 
          "]"}], ";", "\n", "     \t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Scalar product = \>\"", ",", " ", "scalarPrdt"}], 
          "]"}]}]}], "]"}], ";", "\n", "  \t\t", "scalarPrdt"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"ScalarPrdtG", "[", 
   RowBox[{"u_", ",", " ", "v_", ",", " ", "w__"}], "]"}], " ", ":=", " ", 
  RowBox[{"ScalarPrdtG", "[", 
   RowBox[{
    RowBox[{"ScalarPrdtG", "[", 
     RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarPrdtG", "[", 
    RowBox[{"u_", ",", " ", "v_"}], "]"}], " ", ":=", " ", 
   RowBox[{"0", " ", "/;", " ", 
    RowBox[{
     RowBox[{"u", " ", "==", " ", "0"}], " ", "||", " ", 
     RowBox[{"v", " ", "==", " ", "0"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"WedgePrdtG", "[", 
   RowBox[{"clif1_", ",", " ", "clif2_"}], "]"}], " ", ":=", "\n", " \t", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"INPUTS", ":", 
     RowBox[{
     "cc", "\n", " \t\t", "The", " ", "two", " ", "clifs", " ", "whose", " ", 
      "Wedge", " ", "product", " ", "is", " ", "to", " ", "be", " ", "taken", 
      "\n", " \t  ", "PROCESS"}], ":", "\n", " \t\t", 
     RowBox[{"See", " ", "Function", " ", "PrdtG", "\t", "\n", " \t  ", 
      RowBox[{"OUTPUT", ":", "\n", " \t\t", 
       RowBox[{"The", " ", "Wedge", " ", 
        RowBox[{"(", 
         RowBox[{"a", ".", "k", ".", "a", ".", " ", "Exterior"}], ")"}], " ", 
        "product", " ", "of", " ", "the", " ", "two", " ", "clifs"}]}]}]}], 
    ",", " ", 
    RowBox[{"defined", " ", 
     RowBox[{"as", " ", "\\\n", "the"}], " ", "sum", " ", "of", " ", "the", 
     " ", "Wedge", " ", "products", " ", "of", " ", "\n", " \t\t", "every", 
     " ", "term", " ", "from", " ", "clif1", " ", "with", " ", "every", " ", 
     "term", " ", "from", " ", "clif2"}]}], "  ", "*)"}], "\t", "\n", " \t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "wedgePrdt", "}"}], ",", "\n", "  \t\t", 
    RowBox[{
     RowBox[{"wedgePrdt", " ", "=", " ", 
      RowBox[{"PrdtG", "[", 
       RowBox[{"clif1", ",", " ", "clif2", ",", " ", "\"\<Wedge\>\""}], 
       "]"}]}], ";", "\n", "  \t\t", "wedgePrdt"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"WedgePrdtG", "[", 
   RowBox[{"u_", ",", " ", "v_", ",", " ", "w__"}], "]"}], " ", ":=", " ", 
  RowBox[{"WedgePrdtG", "[", 
   RowBox[{
    RowBox[{"WedgePrdtG", "[", 
     RowBox[{"u", ",", " ", "v"}], "]"}], ",", " ", "w"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WedgePrdtG", "[", 
    RowBox[{"u_", ",", " ", "v_"}], "]"}], " ", ":=", " ", 
   RowBox[{"0", " ", "/;", " ", 
    RowBox[{
     RowBox[{"u", " ", "==", " ", "0"}], " ", "||", " ", 
     RowBox[{"v", " ", "==", " ", "0"}]}]}]}], "\n", "\t", 
  RowBox[{"(*", "  ", 
   RowBox[{"End", " ", "of", " ", "WedgePrdtG", " ", "Module"}], "  ", "*)"}],
   " \t\t\t\t\t \t\t\t\t\t ", "\n", 
  "\t\t\t\t\t \t\t\t\t\t \t\t\t\t\t \t\t\t\t\t "}], "\n", 
 RowBox[{"End", "[", "]"}], "\n", 
 RowBox[{"EndPackage", "[", "]"}]}], "Code",
 CellChangeTimes->{
  3.7779240800555477`*^9, {3.77792434054056*^9, 3.777924341915412*^9}, {
   3.777925722910266*^9, 3.777925994801112*^9}, {3.7779260295317497`*^9, 
   3.777926040289456*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"d9221d14-bb4f-46a3-8f96-ef51c063cb88"],

Cell[BoxData["\<\"GeomAlg2019Sep`Private`\"\>"], "Output",
 CellChangeTimes->{
  3.777988351477603*^9, {3.777991793726119*^9, 3.77799179420926*^9}, {
   3.7779935843691*^9, 3.777993603517419*^9}},
 CellLabel->
  "Out[277]=",ExpressionUUID->"c1de05aa-7c48-44f2-a2f0-237fb604485b"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Version Changes",
 FontColor->RGBColor[1, 0.5, 0]]], "Chapter",
 CellChangeTimes->{
  3.777917028094368*^9, {3.7779171065814333`*^9, 3.777917108077229*^9}, 
   3.77791726379779*^9, {3.7779228994059153`*^9, 3.77792290065598*^9}, 
   3.777923148955649*^9, 
   3.777923184038898*^9},ExpressionUUID->"be00a341-2295-4156-8c23-\
6784eec6d87f"],

Cell[TextData[{
 StyleBox["2019 September",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nSimplified AtomG recursive definition\nReplaced SmallCircle (\
\[SmallCircle]) by Diamond (\[Diamond])\n\n",
  FontSize->18],
 StyleBox["2019 August",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nImproved warning message.Fixed a few typos.Improved \
documentation of PrdtG function.Completely reworked ClifToListG to include \
some complex clifs that were not handled properly\nRenamed ConstantToZeroG to \
GradesListG\nDeleted ConstantToListZeroG\nUpdated Pallette to reflect new \
context\nRenamed BladeG to AtomGc\nAdded AtomCoefG and SliceG\nRenamed \
GradePTerm to pSlice\n\n",
  FontSize->18],
 StyleBox["version 52 d",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nSimplified expressions for both Hodge duals (no change to \
calculations; functions are just more readable)\n\n",
  FontSize->18],
 StyleBox["version 52 cc\n",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["Replaced multiple instances of list1 list2 /. List -> Plus with \
list1.list2\nRenamed GradePpieceG to GradePTermG\nRenamed EijPieceG to \
EijTermG\nCorrected Hodge2G calculation\n\n",
  FontSize->18],
 StyleBox["version52bc",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nAdded EvenClifG and EijPieceG functions\n\nversion 52\nSwitched \
algebraType reference to match change in palette : Now, 1 = Clifford Algebra, \
2 = Grassmann Algebra\nAdded function EiEjPieceG\nCorrected definition of \
Gorm to use scalar product rather than dot product\nAdded \
\[OpenCurlyDoubleQuote]Simplify\[CloseCurlyDoubleQuote] to the Gorm result \
since it usually leads to clearer answers\nFixed ReverseG which would make \
some incorrect calculation for grades 4 and higher\n\tThis fixed GormG and \
NormG, both of which use ReverseG\n\n",
  FontSize->18],
 StyleBox["version 51 g",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nDeleted all reference to SortG and ExpandSortG as they did not \
help in sorting the way I hoped\n\n",
  FontSize->18],
 StyleBox["version 51 f",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nCorrected ClifToList for cases where some parts of clif have \
different precision than other parts\nChange manner of computing list of \
constant terms\n\n",
  FontSize->18],
 StyleBox["Version 51 e",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["\nReplaced Apply[Length[list, {1}] by Length @@@ list in many \
places; (just a readability change) \nAdded internal SortG function to sort \
terms if multivector has 2 or more terms \nImprove sorting of output \
multivectors by applying Mathematica\[CloseCurlyQuote] s Sort function to \
multivectors with 2 or more terms\nCorrect freeTermList calculation when the \
multivector is a constant.freeTermList should be {0}, not {} \n\n",
  FontSize->18],
 StyleBox["Version 51 c",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox[" Completely rewrote logic for a core function, ClifToListG c\n\t\
Now handles multivector inputs that have had precision set by user (for \
example, to format output to 6 sig digits) \n\tRewrite extended to include \
ConcstantG \n\tAdded FreeTermG function (multivector complement of ConstantG) \
c\n\tAdded ExpandSortG, a sub - function to ensure that functions Expand and \
then sort multivectors in a consistent way",
  FontSize->18]
}], "Text",
 CellChangeTimes->{
  3.777924129194702*^9, {3.777924228210786*^9, 3.777924234251552*^9}, {
   3.777925181299076*^9, 
   3.777925204388235*^9}},ExpressionUUID->"eeff93c6-7e93-41ff-be77-\
8724c23a53cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "\"\<GeomAlg2019Aug`*\>\""}]], "Input",
 CellChangeTimes->{{3.776026546192133*^9, 3.776026575246956*^9}, {
  3.7761112297368517`*^9, 3.7761112312047977`*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"3b03f9de-f94e-42d5-88d1-7a03e8595620"],

Cell[BoxData[
 TemplateBox[{
  "Information","nomatch",
   "\"No symbol matching \
\\!\\(\\*RowBox[{\\\"\\\\\\\"GeomAlg2019Aug`*\\\\\\\"\\\"}]\\) found.\"",2,
   279,1,21793016147743883425,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.777993603616295*^9},
 CellLabel->
  "During evaluation of \
In[279]:=",ExpressionUUID->"8cedfbf0-1eaa-47d4-9ede-b15c7df9f831"]
}, Closed]],

Cell["", "Text",
 CellChangeTimes->{{3.777915808897131*^9, 
  3.77791581081185*^9}},ExpressionUUID->"065fbefc-66c9-493d-b274-\
40929693f606"]
}, Closed]]
}, Open  ]]
},
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{1069, 1316},
WindowMargins->{{Automatic, 83}, {Automatic, 0}},
DockedCells->FEPrivate`FrontEndResource[
 "NotebookTemplatingExpressions", "AuthoringDockedCell"],
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
TaggingRules->{"NotebookTemplateVersion" -> 1., "NotebookTemplate" -> True},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 1732, 25, 98, "Title",ExpressionUUID->"0eb99713-8fc1-4874-8ff2-e0c1082164a1"],
Cell[CellGroupData[{
Cell[2179, 44, 303, 5, 69, "Chapter",ExpressionUUID->"9a3f1805-1cbc-478d-be6f-792ebaddd51e"],
Cell[2485, 51, 5668, 113, 385, "Text",ExpressionUUID->"c1714432-7d90-43b9-bdce-7f8c2bf1eb38"]
}, Closed]],
Cell[CellGroupData[{
Cell[8190, 169, 162, 3, 58, "Chapter",ExpressionUUID->"66501c1f-93ac-4157-b1f6-4144dd1837af"],
Cell[CellGroupData[{
Cell[8377, 176, 154, 3, 65, "Subchapter",ExpressionUUID->"bfdd283e-5130-49c3-82ad-f7a9980651e0"],
Cell[8534, 181, 3639, 72, 490, "Code",ExpressionUUID->"c65fb9e5-a372-4be3-a098-944901ffd52b"]
}, Closed]],
Cell[CellGroupData[{
Cell[12210, 258, 2063, 29, 65, "Subchapter",ExpressionUUID->"0b6b0107-d707-4aa2-84e0-633ce91bf664"],
Cell[14276, 289, 2895, 43, 58, "Text",ExpressionUUID->"a138d2aa-7b8e-4d91-9508-5664fb9215ec"],
Cell[17174, 334, 3773, 73, 205, "Code",ExpressionUUID->"b2bdf740-d97a-4118-9aa7-49a73fe5e38a"]
}, Closed]],
Cell[CellGroupData[{
Cell[20984, 412, 221, 4, 65, "Subchapter",ExpressionUUID->"31efb45a-7932-43ba-83a8-a6cc2ae30fb8"],
Cell[21208, 418, 3618, 78, 472, "Text",ExpressionUUID->"20a98674-b109-4d95-8d9c-5eea15db0abb"]
}, Closed]],
Cell[CellGroupData[{
Cell[24863, 501, 329, 5, 65, "Subchapter",ExpressionUUID->"d7d51bbd-350c-4d00-aa9f-f0cb00af5dd3"],
Cell[CellGroupData[{
Cell[25217, 510, 15769, 324, 874, "Code",ExpressionUUID->"bb95fb8d-d9f3-4598-863d-ce86f7c663a4"],
Cell[40989, 836, 273, 5, 34, "Output",ExpressionUUID->"2ca353e6-772c-4ebb-a084-4d269dbb919a"],
Cell[41265, 843, 251, 5, 34, "Output",ExpressionUUID->"127d554a-f190-4cbe-96db-e11c3f264835"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[41577, 855, 187, 3, 58, "Chapter",ExpressionUUID->"a1525982-1156-48eb-8125-efcb2d27577c"],
Cell[41767, 860, 2168, 32, 52, "Code",ExpressionUUID->"2d4b85c4-75f9-4a80-a7c3-79d1a9e6ca1a"]
}, Closed]],
Cell[CellGroupData[{
Cell[43972, 897, 186, 3, 58, "Chapter",ExpressionUUID->"58177a45-6844-4477-ad51-5a2c82db5919"],
Cell[44161, 902, 5693, 119, 262, "Code",ExpressionUUID->"eab06bde-dac4-4543-b3e4-dd8a5cfa5a9f"]
}, Closed]],
Cell[CellGroupData[{
Cell[49891, 1026, 355, 8, 146, "Chapter",ExpressionUUID->"e4a04ef0-9773-466f-8f2a-2556d621d191"],
Cell[50249, 1036, 50365, 1219, 4396, "Code",ExpressionUUID->"cc35f83c-036d-4558-9ef4-8571356e9f49"]
}, Closed]],
Cell[CellGroupData[{
Cell[100651, 2260, 251, 4, 58, "Chapter",ExpressionUUID->"9c63b62e-9730-433c-8884-b0391cc574d1"],
Cell[100905, 2266, 61088, 1258, 5063, "Code",ExpressionUUID->"5b437657-c103-44f2-923e-4e6a07bccda2"]
}, Closed]],
Cell[CellGroupData[{
Cell[162030, 3529, 174, 3, 58, "Chapter",ExpressionUUID->"0a8c74b9-4fd4-409f-9416-1e5362d89626"],
Cell[162207, 3534, 59932, 1226, 4275, "Code",ExpressionUUID->"0cd99394-7461-4bed-8931-53bb46a7c3e7"]
}, Closed]],
Cell[CellGroupData[{
Cell[222176, 4765, 325, 7, 98, "Chapter",ExpressionUUID->"c4071c67-5988-4b9c-9562-4d1442c8ccac"],
Cell[222504, 4774, 15797, 336, 1421, "Code",ExpressionUUID->"adb2e33b-3392-4e4d-adae-ed10dbc77e4d"]
}, Closed]],
Cell[CellGroupData[{
Cell[238338, 5115, 532, 10, 138, "Chapter",ExpressionUUID->"5ad0718c-8782-4e67-ac94-06033f01f375"],
Cell[CellGroupData[{
Cell[238895, 5129, 48761, 1125, 5968, "Code",ExpressionUUID->"d9221d14-bb4f-46a3-8f96-ef51c063cb88"],
Cell[287659, 6256, 279, 5, 34, "Output",ExpressionUUID->"c1de05aa-7c48-44f2-a2f0-237fb604485b"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[287987, 6267, 361, 7, 58, "Chapter",ExpressionUUID->"be00a341-2295-4156-8c23-6784eec6d87f"],
Cell[288351, 6276, 3547, 80, 1364, "Text",ExpressionUUID->"eeff93c6-7e93-41ff-be77-8724c23a53cb"],
Cell[CellGroupData[{
Cell[291923, 6360, 269, 5, 30, "Input",ExpressionUUID->"3b03f9de-f94e-42d5-88d1-7a03e8595620"],
Cell[292195, 6367, 387, 10, 24, "Message",ExpressionUUID->"8cedfbf0-1eaa-47d4-9ede-b15c7df9f831"]
}, Closed]],
Cell[292597, 6380, 141, 3, 35, "Text",ExpressionUUID->"065fbefc-66c9-493d-b274-40929693f606"]
}, Closed]]
}, Open  ]]
}
]
*)

